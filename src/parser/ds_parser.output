Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 313 conflicts: 1 shift/reduce
State 409 conflicts: 1 shift/reduce
State 515 conflicts: 2 shift/reduce
State 517 conflicts: 2 shift/reduce
State 628 conflicts: 1 shift/reduce
State 926 conflicts: 2 shift/reduce
State 1036 conflicts: 1 shift/reduce
State 1141 conflicts: 1 shift/reduce
State 1399 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program ';'

   16 top_level_reader_macro: expr_reader ';'

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty

   65 $@2: %empty

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner

   67 expression_if_one_liner: expr
   68                        | expression_return_no_pipe
   69                        | expression_yield_no_pipe
   70                        | expression_break
   71                        | expression_continue

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else

   73 $@3: %empty

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';'

   75 $@4: %empty

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   77 expression_unsafe: "unsafe" expression_block

   78 expression_while_loop: "while" expr expression_block

   79 expression_with: "with" expr expression_block

   80 $@5: %empty

   81 expression_with_alias: "assume" "name" '=' $@5 expr

   82 annotation_argument_value: string_constant
   83                          | "name"
   84                          | "integer constant"
   85                          | "floating point constant"
   86                          | "true"
   87                          | "false"

   88 annotation_argument_value_list: annotation_argument_value
   89                               | annotation_argument_value_list ',' annotation_argument_value

   90 annotation_argument_name: "name"
   91                         | "type"
   92                         | "in"

   93 annotation_argument: annotation_argument_name '=' string_constant
   94                    | annotation_argument_name '=' "name"
   95                    | annotation_argument_name '=' "integer constant"
   96                    | annotation_argument_name '=' "floating point constant"
   97                    | annotation_argument_name '=' "true"
   98                    | annotation_argument_name '=' "false"
   99                    | annotation_argument_name
  100                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  101 annotation_argument_list: annotation_argument
  102                         | annotation_argument_list ',' annotation_argument

  103 annotation_declaration_name: name_in_namespace
  104                            | "require"
  105                            | "private"

  106 annotation_declaration_basic: annotation_declaration_name
  107                             | annotation_declaration_name '(' annotation_argument_list ')'

  108 annotation_declaration: annotation_declaration_basic
  109                       | '!' annotation_declaration
  110                       | annotation_declaration "&&" annotation_declaration
  111                       | annotation_declaration "||" annotation_declaration
  112                       | annotation_declaration "^^" annotation_declaration
  113                       | '(' annotation_declaration ')'
  114                       | "|>" annotation_declaration

  115 annotation_list: annotation_declaration
  116                | annotation_list ',' annotation_declaration

  117 optional_annotation_list: %empty
  118                         | '[' annotation_list ']'

  119 optional_function_argument_list: %empty
  120                                | '(' ')'
  121                                | '(' function_argument_list ')'

  122 optional_function_type: %empty
  123                       | ':' type_declaration

  124 function_name: "name"
  125              | "operator" '!'
  126              | "operator" '~'
  127              | "operator" "+="
  128              | "operator" "-="
  129              | "operator" "*="
  130              | "operator" "/="
  131              | "operator" "%="
  132              | "operator" "&="
  133              | "operator" "|="
  134              | "operator" "^="
  135              | "operator" "&&="
  136              | "operator" "||="
  137              | "operator" "^^="
  138              | "operator" "&&"
  139              | "operator" "||"
  140              | "operator" "^^"
  141              | "operator" '+'
  142              | "operator" '-'
  143              | "operator" '*'
  144              | "operator" '/'
  145              | "operator" '%'
  146              | "operator" '<'
  147              | "operator" '>'
  148              | "operator" ".."
  149              | "operator" "=="
  150              | "operator" "!="
  151              | "operator" "<="
  152              | "operator" ">="
  153              | "operator" '&'
  154              | "operator" '|'
  155              | "operator" '^'
  156              | "++" "operator"
  157              | "--" "operator"
  158              | "operator" "++"
  159              | "operator" "--"
  160              | "operator" "<<"
  161              | "operator" ">>"
  162              | "operator" "<<="
  163              | "operator" ">>="
  164              | "operator" "<<<"
  165              | "operator" ">>>"
  166              | "operator" "<<<="
  167              | "operator" ">>>="
  168              | "operator" '[' ']'
  169              | "operator" "?[" ']'
  170              | "operator" '.'
  171              | "operator" "?."
  172              | "operator" '.' "name"
  173              | "operator" '.' "name" ":="
  174              | "operator" "?." "name"
  175              | "operator" ":="
  176              | "operator" "delete"
  177              | "operator" "??"
  178              | "operator" "is"
  179              | "operator" "as"
  180              | "operator" "is" "name"
  181              | "operator" "as" "name"
  182              | "operator" '?' "as"
  183              | "operator" '?' "as" "name"
  184              | "bool"
  185              | "string"
  186              | "int"
  187              | "int2"
  188              | "int3"
  189              | "int4"
  190              | "uint"
  191              | "uint2"
  192              | "uint3"
  193              | "uint4"
  194              | "float"
  195              | "float2"
  196              | "float3"
  197              | "float4"
  198              | "range"
  199              | "urange"
  200              | "range64"
  201              | "urange64"
  202              | "int64"
  203              | "uint64"
  204              | "double"
  205              | "int8"
  206              | "uint8"
  207              | "int16"
  208              | "uint16"

  209 global_function_declaration: optional_annotation_list "def" function_declaration

  210 optional_public_or_private_function: %empty
  211                                    | "private"
  212                                    | "public"

  213 function_declaration_header: function_name optional_function_argument_list optional_function_type

  214 $@6: %empty

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  216 expression_block: '{' expressions '}'
  217                 | '{' expressions '}' "finally" '{' expressions '}'

  218 expr_call_pipe: expr expr_full_block_assumed_piped
  219               | expression_keyword expr_full_block_assumed_piped

  220 expression_any: ';'
  221               | expr_pipe
  222               | expr_keyword
  223               | expr_assign_pipe
  224               | expr_assign ';'
  225               | expression_delete ';'
  226               | expression_let
  227               | expression_while_loop
  228               | expression_unsafe
  229               | expression_with
  230               | expression_with_alias
  231               | expression_for_loop
  232               | expression_break ';'
  233               | expression_continue ';'
  234               | expression_return
  235               | expression_yield
  236               | expression_if_then_else
  237               | expression_try_catch
  238               | expression_label ';'
  239               | expression_goto ';'
  240               | "pass" ';'

  241 expressions: %empty
  242            | expressions expression_any
  243            | expressions error

  244 expr_keyword: "keyword" expr expression_block

  245 optional_expr_list: %empty
  246                   | expr_list

  247 optional_expr_list_in_braces: %empty
  248                             | '(' optional_expr_list ')'

  249 type_declaration_no_options_list: type_declaration
  250                                 | type_declaration_no_options_list ';' type_declaration

  251 $@7: %empty

  252 $@8: %empty

  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr

  254 $@9: %empty

  255 $@10: %empty

  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

  257 expr_pipe: expr_assign " <|" expr_block
  258          | "@ <|" expr_block
  259          | "@@ <|" expr_block
  260          | "$ <|" expr_block
  261          | expr_call_pipe

  262 name_in_namespace: "name"
  263                  | "name" "::" "name"
  264                  | "::" "name"

  265 expression_delete: "delete" expr
  266                  | "delete" "explicit" expr

  267 $@11: %empty

  268 $@12: %empty

  269 new_type_declaration: '<' $@11 type_declaration '>' $@12
  270                     | structure_type_declaration

  271 expr_new: "new" new_type_declaration
  272         | "new" new_type_declaration '(' ')'
  273         | "new" new_type_declaration '(' expr_list ')'
  274         | "new" new_type_declaration '(' make_struct_dim ')'
  275         | "new" make_decl

  276 expression_break: "break"

  277 expression_continue: "continue"

  278 expression_return_no_pipe: "return"
  279                          | "return" expr_list
  280                          | "return" "<-" expr_list

  281 expression_return: expression_return_no_pipe ';'
  282                  | "return" expr_pipe
  283                  | "return" "<-" expr_pipe

  284 expression_yield_no_pipe: "yield" expr
  285                         | "yield" "<-" expr

  286 expression_yield: expression_yield_no_pipe ';'
  287                 | "yield" expr_pipe
  288                 | "yield" "<-" expr_pipe

  289 expression_try_catch: "try" expression_block "recover" expression_block

  290 kwd_let: "let"
  291        | "var"

  292 optional_in_scope: "inscope"
  293                  | %empty

  294 tuple_expansion: "name"
  295                | tuple_expansion ',' "name"

  296 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  297                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  298                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'
  299                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr ';'

  300 expression_let: kwd_let optional_in_scope let_variable_declaration
  301               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  302 $@13: %empty

  303 $@14: %empty

  304 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  305 $@15: %empty

  306 $@16: %empty

  307 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  308 $@17: %empty

  309 $@18: %empty

  310 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  311 $@19: %empty

  312 $@20: %empty

  313 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  314 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  315               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  316               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  317 expr_list: expr
  318          | expr_list ',' expr

  319 block_or_simple_block: expression_block
  320                      | "=>" expr
  321                      | "=>" "<-" expr

  322 block_or_lambda: '$'
  323                | '@'
  324                | '@' '@'

  325 capture_entry: '&' "name"
  326              | '=' "name"
  327              | "<-" "name"
  328              | ":=" "name"

  329 capture_list: capture_entry
  330             | capture_list ',' capture_entry

  331 optional_capture_list: %empty
  332                      | "[[" capture_list ']' ']'

  333 expr_block: expression_block
  334           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  335 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  336 $@21: %empty

  337 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  338 expr_numeric_const: "integer constant"
  339                   | "unsigned integer constant"
  340                   | "long integer constant"
  341                   | "unsigned long integer constant"
  342                   | "unsigned int8 constant"
  343                   | "floating point constant"
  344                   | "double constant"

  345 expr_assign: expr
  346            | expr '=' expr
  347            | expr "<-" expr
  348            | expr ":=" expr
  349            | expr "&=" expr
  350            | expr "|=" expr
  351            | expr "^=" expr
  352            | expr "&&=" expr
  353            | expr "||=" expr
  354            | expr "^^=" expr
  355            | expr "+=" expr
  356            | expr "-=" expr
  357            | expr "*=" expr
  358            | expr "/=" expr
  359            | expr "%=" expr
  360            | expr "<<=" expr
  361            | expr ">>=" expr
  362            | expr "<<<=" expr
  363            | expr ">>>=" expr

  364 expr_assign_pipe_right: "@ <|" expr_block
  365                       | "@@ <|" expr_block
  366                       | "$ <|" expr_block
  367                       | expr_call_pipe

  368 expr_assign_pipe: expr '=' expr_assign_pipe_right
  369                 | expr "<-" expr_assign_pipe_right
  370                 | expr "&=" expr_assign_pipe_right
  371                 | expr "|=" expr_assign_pipe_right
  372                 | expr "^=" expr_assign_pipe_right
  373                 | expr "&&=" expr_assign_pipe_right
  374                 | expr "||=" expr_assign_pipe_right
  375                 | expr "^^=" expr_assign_pipe_right
  376                 | expr "+=" expr_assign_pipe_right
  377                 | expr "-=" expr_assign_pipe_right
  378                 | expr "*=" expr_assign_pipe_right
  379                 | expr "/=" expr_assign_pipe_right
  380                 | expr "%=" expr_assign_pipe_right
  381                 | expr "<<=" expr_assign_pipe_right
  382                 | expr ">>=" expr_assign_pipe_right
  383                 | expr "<<<=" expr_assign_pipe_right
  384                 | expr ">>>=" expr_assign_pipe_right

  385 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  386                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  387 expr_method_call: expr "->" "name" '(' ')'
  388                 | expr "->" "name" '(' expr_list ')'

  389 func_addr_name: name_in_namespace
  390               | "$i" '(' expr ')'

  391 func_addr_expr: '@' '@' func_addr_name

  392 $@22: %empty

  393 $@23: %empty

  394 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name

  395 $@24: %empty

  396 $@25: %empty

  397 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

  398 expr_field: expr '.' "name"
  399           | expr '.' '.' "name"
  400           | expr '.' "name" '(' ')'
  401           | expr '.' "name" '(' expr_list ')'

  402 $@26: %empty

  403 $@27: %empty

  404 expr_field: expr '.' $@26 error $@27

  405 expr_call: name_in_namespace '(' ')'
  406          | name_in_namespace '(' make_struct_dim ')'
  407          | name_in_namespace '(' expr_list ')'
  408          | basic_type_declaration '(' ')'
  409          | basic_type_declaration '(' expr_list ')'

  410 expr: "null"
  411     | name_in_namespace
  412     | expr_numeric_const
  413     | expr_reader
  414     | string_builder
  415     | make_decl
  416     | "true"
  417     | "false"
  418     | expr_field
  419     | expr_mtag
  420     | '!' expr
  421     | '~' expr
  422     | '+' expr
  423     | '-' expr
  424     | expr "<<" expr
  425     | expr ">>" expr
  426     | expr "<<<" expr
  427     | expr ">>>" expr
  428     | expr '+' expr
  429     | expr '-' expr
  430     | expr '*' expr
  431     | expr '/' expr
  432     | expr '%' expr
  433     | expr '<' expr
  434     | expr '>' expr
  435     | expr "==" expr
  436     | expr "!=" expr
  437     | expr "<=" expr
  438     | expr ">=" expr
  439     | expr '&' expr
  440     | expr '|' expr
  441     | expr '^' expr
  442     | expr "&&" expr
  443     | expr "||" expr
  444     | expr "^^" expr
  445     | expr ".." expr
  446     | "++" expr
  447     | "--" expr
  448     | expr "++"
  449     | expr "--"
  450     | '(' expr_list optional_comma ')'
  451     | expr '[' expr ']'
  452     | expr '.' '[' expr ']'
  453     | expr "?[" expr ']'
  454     | expr '.' "?[" expr ']'
  455     | expr "?." "name"
  456     | expr '.' "?." "name"
  457     | func_addr_expr
  458     | expr_call
  459     | '*' expr
  460     | "deref" '(' expr ')'
  461     | "addr" '(' expr ')'
  462     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  463     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  464     | expr "??" expr
  465     | expr '?' expr ':' expr

  466 $@28: %empty

  467 $@29: %empty

  468 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr "is" basic_type_declaration
  470     | expr "is" "name"
  471     | expr "as" "name"

  472 $@30: %empty

  473 $@31: %empty

  474 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr "as" basic_type_declaration
  476     | expr '?' "as" "name"

  477 $@32: %empty

  478 $@33: %empty

  479 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr '?' "as" basic_type_declaration
  481     | expr_type_info
  482     | expr_type_decl
  483     | expr_cast
  484     | expr_new
  485     | expr_method_call
  486     | expr_named_call
  487     | expr_full_block
  488     | expr "<|" expr
  489     | expr "|>" expr
  490     | expr "|>" basic_type_declaration
  491     | name_in_namespace "name"
  492     | "unsafe" '(' expr ')'
  493     | expression_keyword

  494 expr_mtag: "$$" '(' expr ')'
  495          | "$i" '(' expr ')'
  496          | "$v" '(' expr ')'
  497          | "$b" '(' expr ')'
  498          | "$a" '(' expr ')'
  499          | "..."
  500          | "$c" '(' expr ')' '(' ')'
  501          | "$c" '(' expr ')' '(' expr_list ')'
  502          | expr '.' "$f" '(' expr ')'
  503          | expr "?." "$f" '(' expr ')'
  504          | expr '.' '.' "$f" '(' expr ')'
  505          | expr '.' "?." "$f" '(' expr ')'
  506          | expr "as" "$f" '(' expr ')'
  507          | expr '?' "as" "$f" '(' expr ')'
  508          | expr "is" "$f" '(' expr ')'
  509          | '@' '@' "$c" '(' expr ')'

  510 optional_field_annotation: %empty
  511                          | "[[" annotation_argument_list ']' ']'

  512 optional_override: %empty
  513                  | "override"
  514                  | "sealed"

  515 optional_constant: %empty
  516                  | "const"

  517 optional_public_or_private_member_variable: %empty
  518                                           | "public"
  519                                           | "private"

  520 optional_static_member_variable: %empty
  521                                | "static"

  522 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  523 struct_variable_declaration_list: %empty

  524 $@34: %empty

  525 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration ';'

  526 $@35: %empty

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header ';'

  528 $@36: %empty

  529 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  530                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  531 function_argument_declaration: optional_field_annotation variable_declaration
  532                              | optional_field_annotation "var" variable_declaration
  533                              | "$a" '(' expr ')'

  534 function_argument_list: function_argument_declaration
  535                       | function_argument_list ';' function_argument_declaration

  536 tuple_type: type_declaration
  537           | "name" ':' type_declaration

  538 tuple_type_list: tuple_type
  539                | tuple_type_list ';' tuple_type

  540 tuple_alias_type_list: %empty
  541                      | tuple_alias_type_list ';'
  542                      | tuple_alias_type_list tuple_type ';'

  543 variant_type: "name" ':' type_declaration

  544 variant_type_list: variant_type
  545                  | variant_type_list ';' variant_type

  546 variant_alias_type_list: %empty
  547                        | variant_alias_type_list ';'
  548                        | variant_alias_type_list variant_type ';'

  549 copy_or_move: '='
  550             | "<-"

  551 variable_declaration: variable_name_with_pos_list
  552                     | variable_name_with_pos_list '&'
  553                     | variable_name_with_pos_list ':' type_declaration
  554                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  555                     | variable_name_with_pos_list copy_or_move expr
  556                     | variable_name_with_pos_list copy_or_move expr_pipe

  557 copy_or_move_or_clone: '='
  558                      | "<-"
  559                      | ":="

  560 optional_ref: %empty
  561             | '&'

  562 let_variable_name_with_pos_list: "name"
  563                                | "$i" '(' expr ')'
  564                                | "name" "aka" "name"
  565                                | let_variable_name_with_pos_list ',' "name"
  566                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  567 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  568                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  569                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  570                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  571                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  572 global_variable_declaration_list: %empty

  573 $@37: %empty

  574 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration

  575 optional_shared: %empty
  576                | "shared"

  577 optional_public_or_private_variable: %empty
  578                                    | "private"
  579                                    | "public"

  580 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  581 $@38: %empty

  582 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

  583 enum_list: %empty
  584          | enum_list ';'
  585          | enum_list "name" ';'
  586          | enum_list "name" '=' expr ';'

  587 optional_public_or_private_alias: %empty
  588                                 | "private"
  589                                 | "public"

  590 $@39: %empty

  591 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration

  592 alias_list: single_alias ';'
  593           | alias_list single_alias ';'

  594 alias_declaration: "typedef" '{' alias_list '}'

  595 $@40: %empty

  596 alias_declaration: "typedef" $@40 single_alias ';'

  597 optional_public_or_private_enum: %empty
  598                                | "private"
  599                                | "public"

  600 enum_name: "name"

  601 $@41: %empty

  602 $@42: %empty

  603 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@41 enum_list $@42 '}'

  604 $@43: %empty

  605 $@44: %empty

  606 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@43 enum_list $@44 '}'

  607 optional_structure_parent: %empty
  608                          | ':' name_in_namespace

  609 optional_sealed: %empty
  610                | "sealed"

  611 structure_name: optional_sealed "name" optional_structure_parent

  612 class_or_struct: "class"
  613                | "struct"

  614 optional_public_or_private_structure: %empty
  615                                     | "private"
  616                                     | "public"

  617 optional_struct_variable_declaration_list: %empty
  618                                          | '{' struct_variable_declaration_list '}'

  619 $@45: %empty

  620 $@46: %empty

  621 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

  622 variable_name_with_pos_list: "name"
  623                            | "$i" '(' expr ')'
  624                            | "name" "aka" "name"
  625                            | variable_name_with_pos_list ',' "name"
  626                            | variable_name_with_pos_list ',' "name" "aka" "name"

  627 basic_type_declaration: "bool"
  628                       | "string"
  629                       | "int"
  630                       | "int8"
  631                       | "int16"
  632                       | "int64"
  633                       | "int2"
  634                       | "int3"
  635                       | "int4"
  636                       | "uint"
  637                       | "uint8"
  638                       | "uint16"
  639                       | "uint64"
  640                       | "uint2"
  641                       | "uint3"
  642                       | "uint4"
  643                       | "float"
  644                       | "float2"
  645                       | "float3"
  646                       | "float4"
  647                       | "void"
  648                       | "range"
  649                       | "urange"
  650                       | "range64"
  651                       | "urange64"
  652                       | "double"
  653                       | "bitfield"

  654 enum_basic_type_declaration: "int"
  655                            | "int8"
  656                            | "int16"
  657                            | "uint"
  658                            | "uint8"
  659                            | "uint16"

  660 structure_type_declaration: name_in_namespace

  661 auto_type_declaration: "auto"
  662                      | "auto" '(' "name" ')'
  663                      | "$t" '(' expr ')'

  664 bitfield_bits: "name"
  665              | bitfield_bits ';' "name"

  666 bitfield_alias_bits: %empty
  667                    | bitfield_alias_bits ';'
  668                    | bitfield_alias_bits "name" ';'

  669 $@47: %empty

  670 $@48: %empty

  671 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48

  672 table_type_pair: type_declaration
  673                | type_declaration ';' type_declaration

  674 dim_list: '[' expr ']'
  675         | dim_list '[' expr ']'

  676 type_declaration_no_options: basic_type_declaration
  677                            | auto_type_declaration
  678                            | bitfield_type_declaration
  679                            | structure_type_declaration
  680                            | type_declaration_no_options dim_list
  681                            | type_declaration_no_options '[' ']'

  682 $@49: %empty

  683 $@50: %empty

  684 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50
  685                            | "typedecl" '(' expr ')'
  686                            | '$' name_in_namespace '(' optional_expr_list ')'

  687 $@51: %empty

  688 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  689                            | type_declaration_no_options '-' '[' ']'
  690                            | type_declaration_no_options "explicit"
  691                            | type_declaration_no_options "const"
  692                            | type_declaration_no_options '-' "const"
  693                            | type_declaration_no_options '&'
  694                            | type_declaration_no_options '-' '&'
  695                            | type_declaration_no_options '#'
  696                            | type_declaration_no_options "implicit"
  697                            | type_declaration_no_options '-' '#'
  698                            | type_declaration_no_options "==" "const"
  699                            | type_declaration_no_options "==" '&'
  700                            | type_declaration_no_options '?'

  701 $@52: %empty

  702 $@53: %empty

  703 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53
  704                            | type_declaration_no_options "??"

  705 $@54: %empty

  706 $@55: %empty

  707 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55

  708 $@56: %empty

  709 $@57: %empty

  710 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57

  711 $@58: %empty

  712 $@59: %empty

  713 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59
  714                            | "block"

  715 $@60: %empty

  716 $@61: %empty

  717 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61

  718 $@62: %empty

  719 $@63: %empty

  720 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63
  721                            | "function"

  722 $@64: %empty

  723 $@65: %empty

  724 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65

  725 $@66: %empty

  726 $@67: %empty

  727 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67
  728                            | "lambda"

  729 $@68: %empty

  730 $@69: %empty

  731 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69

  732 $@70: %empty

  733 $@71: %empty

  734 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71

  735 $@72: %empty

  736 $@73: %empty

  737 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73

  738 $@74: %empty

  739 $@75: %empty

  740 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75

  741 type_declaration: type_declaration_no_options
  742                 | type_declaration '|' type_declaration_no_options
  743                 | type_declaration '|' '#'

  744 $@76: %empty

  745 $@77: %empty

  746 $@78: %empty

  747 $@79: %empty

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 '{' $@78 tuple_alias_type_list $@79 '}'

  749 $@80: %empty

  750 $@81: %empty

  751 $@82: %empty

  752 $@83: %empty

  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 '{' $@82 variant_alias_type_list $@83 '}'

  754 $@84: %empty

  755 $@85: %empty

  756 $@86: %empty

  757 $@87: %empty

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 '{' $@86 bitfield_alias_bits $@87 '}'

  759 make_decl: make_struct_decl
  760          | make_dim_decl
  761          | make_table_decl
  762          | array_comprehension
  763          | make_tuple_call

  764 make_struct_fields: "name" copy_or_move expr
  765                   | "name" ":=" expr
  766                   | make_struct_fields ',' "name" copy_or_move expr
  767                   | make_struct_fields ',' "name" ":=" expr
  768                   | "$f" '(' expr ')' copy_or_move expr
  769                   | "$f" '(' expr ')' ":=" expr
  770                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  771                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  772 make_struct_dim: make_struct_fields
  773                | make_struct_dim ';' make_struct_fields

  774 optional_block: %empty
  775               | "where" expr_block

  776 optional_trailing_semicolon_cur_cur: '}' '}'
  777                                    | ";}}"

  778 optional_trailing_semicolon_cur_sqr: '}' ']'
  779                                    | ";}]"

  780 optional_trailing_semicolon_sqr_sqr: ']' ']'
  781                                    | ";]]"

  782 optional_trailing_delim_sqr_sqr: ']' ']'
  783                                | ";]]"
  784                                | ",]]"

  785 optional_trailing_delim_cur_sqr: '}' ']'
  786                                | ";}]"
  787                                | ",}]"

  788 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  789                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  790                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  791                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  792                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  793                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  794 $@88: %empty

  795 $@89: %empty

  796 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

  797 $@90: %empty

  798 $@91: %empty

  799 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

  800 $@92: %empty

  801 $@93: %empty

  802 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

  803 $@94: %empty

  804 $@95: %empty

  805 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95

  806 make_tuple: expr
  807           | expr "=>" expr
  808           | make_tuple ',' expr

  809 make_map_tuple: expr "=>" expr
  810               | expr

  811 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  812 $@96: %empty

  813 $@97: %empty

  814 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

  815 make_dim: make_tuple
  816         | make_dim ';' make_tuple

  817 make_dim_decl: '[' expr_list optional_comma ']'
  818              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  819              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  820              | "array" '(' expr_list optional_comma ')'

  821 $@98: %empty

  822 $@99: %empty

  823 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'
  824              | "fixed_array" '(' expr_list optional_comma ')'

  825 $@100: %empty

  826 $@101: %empty

  827 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

  828 make_table: make_map_tuple
  829           | make_table ';' make_map_tuple

  830 expr_map_tuple_list: make_map_tuple
  831                    | expr_map_tuple_list ',' make_map_tuple

  832 make_table_decl: '{' expr_map_tuple_list optional_comma '}'
  833                | "{{" make_table optional_trailing_semicolon_cur_cur
  834                | "table" '(' expr_map_tuple_list optional_comma ')'
  835                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  836                | "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  837 array_comprehension_where: %empty
  838                          | ';' "where" expr

  839 optional_comma: %empty
  840               | ','

  841 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'
  842                    | "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  843                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'
  844                    | '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'
  845                    | "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 109 125 420
    '#' (35) 695 697 743
    '$' (36) 20 322 686 688
    '%' (37) 35 42 145 432
    '&' (38) 153 325 439 552 561 693 694 699
    '(' (40) 100 107 113 120 121 248 272 273 274 297 299 314 315 316 385 386 387 388 390 400 401 405 406 407 408 409 450 460 461 462 463 492 494 495 496 497 498 500 501 502 503 504 505 506 507 508 509 533 563 623 662 663 685 686 688 768 769 770 771 790 791 793 796 799 802 811 814 820 823 824 827 834 835 836
    ')' (41) 100 107 113 120 121 248 272 273 274 297 299 314 315 316 385 386 387 388 390 400 401 405 406 407 408 409 450 460 461 462 463 492 494 495 496 497 498 500 501 502 503 504 505 506 507 508 509 533 563 623 662 663 685 686 688 768 769 770 771 790 791 793 796 799 802 811 814 820 823 824 827 834 835 836
    '*' (42) 143 430 459
    '+' (43) 141 422 428
    ',' (44) 51 89 102 116 295 318 330 386 565 566 625 626 766 767 770 771 808 831 840
    '-' (45) 142 423 429 689 692 694 697
    '.' (46) 43 170 172 173 398 399 400 401 404 452 454 456 502 504 505
    '/' (47) 44 144 431
    ':' (58) 53 54 123 296 297 465 537 543 553 554 567 568 569 606 608
    ';' (59) 15 16 74 220 224 225 232 233 238 239 240 250 281 286 296 297 298 299 316 525 527 530 535 539 541 542 545 547 548 567 568 570 584 585 586 592 593 596 665 667 668 673 773 816 829 836 838 841 842 843 844 845
    '<' (60) 146 253 256 269 304 307 310 313 315 316 394 397 433 462 463 468 474 479 671 684 688 703 707 710 713 717 720 724 727 731 734 737 740 796 799 802 805 814 823 827 835 836
    '=' (61) 81 93 94 95 96 97 98 100 326 346 368 549 557 586 591
    '>' (62) 147 253 256 269 304 307 310 313 315 316 394 397 434 462 463 468 474 479 671 684 688 703 707 710 713 717 720 724 727 731 734 737 740 796 799 802 805 814 823 827 835 836
    '?' (63) 182 183 465 476 479 480 507 700
    '@' (64) 323 324 391 394 397 509
    '[' (91) 118 168 385 386 451 452 530 674 675 681 689 817 841
    ']' (93) 118 168 169 296 298 332 385 386 451 452 453 454 511 530 674 675 681 689 778 780 782 785 817 841 842 843
    '^' (94) 155 441
    '{' (123) 216 217 580 594 603 606 618 748 753 758 832 844
    '|' (124) 154 440 742 743
    '}' (125) 216 217 580 594 603 606 618 748 753 758 776 778 785 832 843 844 845
    '~' (126) 126 421
    error (256) 243 404
    "lexer error" (258)
    "struct" (259) 613 796
    "class" (260) 612 799
    "let" (261) 290
    "def" (262) 209 527 529
    "while" (263) 78
    "if" (264) 62 74
    "static_if" (265) 63
    "else" (266) 60 66
    "for" (267) 76 841 842 843 844 845
    "recover" (268) 289
    "true" (269) 86 97 416
    "false" (270) 87 98 417
    "new" (271) 271 272 273 274 275
    "typeinfo" (272) 314 315 316
    "type" (273) 91 313 468 474 479 684
    "in" (274) 76 92 841 842 843 844 845
    "is" (275) 178 180 468 469 470 508
    "as" (276) 46 179 181 182 183 471 474 475 476 479 480 506 507
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 707 820 823
    "return" (280) 278 279 280 282 283
    "null" (281) 410
    "break" (282) 276
    "try" (283) 289
    "options" (284) 36
    "table" (285) 710 834 835 836
    "expect" (286) 49
    "const" (287) 516 691 692 698
    "require" (288) 37 104
    "operator" (289) 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183
    "enum" (290) 603 606
    "finally" (291) 217
    "delete" (292) 176 265 266
    "deref" (293) 460
    "typedef" (294) 594 596
    "typedecl" (295) 685
    "with" (296) 79
    "aka" (297) 564 566 624 626
    "assume" (298) 81
    "cast" (299) 304
    "override" (300) 513
    "abstract" (301) 527
    "upcast" (302) 307
    "iterator" (303) 713
    "var" (304) 291 532
    "addr" (305) 461
    "continue" (306) 277
    "where" (307) 775 838
    "pass" (308) 240
    "reinterpret" (309) 310
    "module" (310) 22
    "public" (311) 18 48 212 518 579 589 599 616
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 696
    "explicit" (315) 266 690
    "shared" (316) 576
    "private" (317) 19 105 211 519 578 588 598 615
    "smart_ptr" (318) 703
    "unsafe" (319) 77 492
    "inscope" (320) 292
    "static" (321) 521
    "fixed_array" (322) 824 827
    "default" (323) 805
    "bool" (324) 184 627
    "void" (325) 647
    "string" (326) 185 628
    "auto" (327) 661 662
    "int" (328) 186 629 654
    "int2" (329) 187 633
    "int3" (330) 188 634
    "int4" (331) 189 635
    "uint" (332) 190 636 657
    "bitfield" (333) 653 671 758
    "uint2" (334) 191 640
    "uint3" (335) 192 641
    "uint4" (336) 193 642
    "float" (337) 194 643
    "float2" (338) 195 644
    "float3" (339) 196 645
    "float4" (340) 197 646
    "range" (341) 198 648
    "urange" (342) 199 649
    "range64" (343) 200 650
    "urange64" (344) 201 651
    "block" (345) 714 717 720
    "int64" (346) 202 632
    "uint64" (347) 203 639
    "double" (348) 204 652
    "function" (349) 721 724 727
    "lambda" (350) 728 731 734
    "int8" (351) 205 630 655
    "uint8" (352) 206 637 658
    "int16" (353) 207 631 656
    "uint16" (354) 208 638 659
    "tuple" (355) 737 748 811 814
    "variant" (356) 740 753 802
    "generator" (357) 462 463
    "yield" (358) 284 285 287 288
    "sealed" (359) 514 610
    "+=" (360) 127 355 376
    "-=" (361) 128 356 377
    "/=" (362) 130 358 379
    "*=" (363) 129 357 378
    "%=" (364) 131 359 380
    "&=" (365) 132 349 370
    "|=" (366) 133 350 371
    "^=" (367) 134 351 372
    "<<" (368) 160 424
    ">>" (369) 161 425
    "++" (370) 156 158 446 448
    "--" (371) 157 159 447 449
    "<=" (372) 151 437
    "<<=" (373) 162 360 381
    ">>=" (374) 163 361 382
    ">=" (375) 152 438
    "==" (376) 149 435 698 699
    "!=" (377) 150 436
    "->" (378) 387 388
    "<-" (379) 280 283 285 288 321 327 347 369 550 558
    "??" (380) 177 464 704
    "?." (381) 171 174 455 456 503 505
    "?[" (382) 169 453 454
    "<|" (383) 488
    " <|" (384) 257
    "$ <|" (385) 260 366
    "@ <|" (386) 258 364
    "@@ <|" (387) 259 365
    "|>" (388) 114 489 490
    ":=" (389) 173 175 328 348 559 765 767 769 771
    "<<<" (390) 164 426
    ">>>" (391) 165 427
    "<<<=" (392) 166 362 383
    ">>>=" (393) 167 363 384
    "=>" (394) 320 321 807 809
    "::" (395) 263 264
    "&&" (396) 110 138 442
    "||" (397) 111 139 443
    "^^" (398) 112 140 444
    "&&=" (399) 135 352 373
    "||=" (400) 136 353 374
    "^^=" (401) 137 354 375
    ".." (402) 148 445
    "$$" (403) 494
    "$i" (404) 390 495 563 623
    "$v" (405) 496
    "$b" (406) 497
    "$a" (407) 498 533
    "$t" (408) 663
    "$c" (409) 500 501 509
    "$f" (410) 502 503 504 505 506 507 508 768 769 770 771
    "..." (411) 499
    "[[" (412) 296 298 332 511 788 789 790 791 818 842
    "[{" (413) 792 793 819 843
    "{{" (414) 833 845
    "integer constant" <i> (415) 52 53 54 55 84 95 338
    "long integer constant" <i64> (416) 340
    "unsigned integer constant" <ui> (417) 339
    "unsigned long integer constant" <ui64> (418) 341
    "unsigned int8 constant" <ui> (419) 342
    "floating point constant" <fd> (420) 85 96 343
    "double constant" <d> (421) 344
    "name" <s> (422) 21 38 46 81 83 90 94 124 172 173 174 180 181 183 262 263 264 294 295 315 316 325 326 327 328 387 388 398 399 400 401 455 456 470 471 476 491 537 543 562 564 565 566 585 586 591 600 611 622 624 625 626 662 664 665 668 748 753 758 764 765 766 767
    "keyword" <s> (423) 39 244 253
    "type function" <s> (424) 40 256
    "start of the string" (425) 27 31
    STRING_CHARACTER <ch> (426) 23 25 32 33
    STRING_CHARACTER_ESC (427) 24 26
    "end of the string" (428) 27 31
    "{" (429) 30
    "}" (430) 30
    "end of failed eader macro" (431)
    ";}}" (432) 777
    ";}]" (433) 779 786
    ";]]" (434) 781 783
    ",]]" (435) 784
    ",}]" (436) 787
    UNARY_MINUS (437)
    UNARY_PLUS (438)
    PRE_INC (439)
    PRE_DEC (440)
    POST_INC (441)
    POST_DEC (442)
    DEREF (443)


Nonterminals, with rules where they appear

    $accept (216)
        on left: 0
    program (217)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (218)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (219)
        on left: 17 18 19
        on right: 22
    module_name <s> (220)
        on left: 20 21
        on right: 22
    module_declaration (221)
        on left: 22
        on right: 2
    character_sequence <s> (222)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (223)
        on left: 27
        on right: 82 93
    string_builder_body <pExpression> (224)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (225)
        on left: 31
        on right: 414
    reader_character_sequence (226)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (227)
        on left: 35
        on right: 16 413
    $@1 (228)
        on left: 34
        on right: 35
    options_declaration (229)
        on left: 36
        on right: 9
    require_declaration (230)
        on left: 37
        on right: 8
    keyword_or_name <s> (231)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (232)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (233)
        on left: 45 46
        on right: 37
    is_public_module <b> (234)
        on left: 47 48
        on right: 45 46
    expect_declaration (235)
        on left: 49
        on right: 7
    expect_list (236)
        on left: 50 51
        on right: 49 51
    expect_error (237)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (238)
        on left: 54
        on right: 238
    expression_goto <pExpression> (239)
        on left: 55 56
        on right: 239
    elif_or_static_elif <b> (240)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (241)
        on left: 59 60 61
        on right: 61 72
    if_or_static_if <b> (242)
        on left: 62 63
        on right: 72
    expression_else_one_liner <pExpression> (243)
        on left: 64 66
        on right: 74
    $@2 (244)
        on left: 65
        on right: 66
    expression_if_one_liner <pExpression> (245)
        on left: 67 68 69 70 71
        on right: 66 74
    expression_if_then_else <pExpression> (246)
        on left: 72 74
        on right: 236
    $@3 (247)
        on left: 73
        on right: 74
    expression_for_loop <pExpression> (248)
        on left: 76
        on right: 231
    $@4 (249)
        on left: 75
        on right: 76
    expression_unsafe <pExpression> (250)
        on left: 77
        on right: 228
    expression_while_loop <pExpression> (251)
        on left: 78
        on right: 227
    expression_with <pExpression> (252)
        on left: 79
        on right: 229
    expression_with_alias <pExpression> (253)
        on left: 81
        on right: 230
    $@5 (254)
        on left: 80
        on right: 81
    annotation_argument_value <aa> (255)
        on left: 82 83 84 85 86 87
        on right: 88 89
    annotation_argument_value_list <aaList> (256)
        on left: 88 89
        on right: 89 100
    annotation_argument_name <s> (257)
        on left: 90 91 92
        on right: 93 94 95 96 97 98 99 100
    annotation_argument <aa> (258)
        on left: 93 94 95 96 97 98 99 100
        on right: 101 102
    annotation_argument_list <aaList> (259)
        on left: 101 102
        on right: 36 102 107 511
    annotation_declaration_name <s> (260)
        on left: 103 104 105
        on right: 106 107
    annotation_declaration_basic <fa> (261)
        on left: 106 107
        on right: 108
    annotation_declaration <fa> (262)
        on left: 108 109 110 111 112 113 114
        on right: 109 110 111 112 113 114 115 116
    annotation_list <faList> (263)
        on left: 115 116
        on right: 116 118 530
    optional_annotation_list <faList> (264)
        on left: 117 118
        on right: 209 334 335 337 527 529 603 606 621
    optional_function_argument_list <pVarDeclList> (265)
        on left: 119 120 121
        on right: 213 334 335 337 397 720 727 734
    optional_function_type <pTypeDecl> (266)
        on left: 122 123
        on right: 213 334 335 337 397 720 727 734
    function_name <s> (267)
        on left: 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208
        on right: 213
    global_function_declaration (268)
        on left: 209
        on right: 6
    optional_public_or_private_function <b> (269)
        on left: 210 211 212
        on right: 215
    function_declaration_header <pFuncDecl> (270)
        on left: 213
        on right: 215 527 529
    function_declaration <pFuncDecl> (271)
        on left: 215
        on right: 209
    $@6 (272)
        on left: 214
        on right: 215
    expression_block <pExpression> (273)
        on left: 216 217
        on right: 60 61 72 76 77 78 79 215 244 289 319 333 337 529
    expr_call_pipe <pExpression> (274)
        on left: 218 219
        on right: 261 367
    expression_any <pExpression> (275)
        on left: 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240
        on right: 242
    expressions <pExpression> (276)
        on left: 241 242 243
        on right: 216 217 242 243
    expr_keyword <pExpression> (277)
        on left: 244
        on right: 222
    optional_expr_list <pExpression> (278)
        on left: 245 246
        on right: 248 686 688
    optional_expr_list_in_braces <pExpression> (279)
        on left: 247 248
        on right: 256
    type_declaration_no_options_list <pTypeDeclList> (280)
        on left: 249 250
        on right: 250 253 256 688
    expression_keyword <pExpression> (281)
        on left: 253 256
        on right: 219 493
    $@7 (282)
        on left: 251
        on right: 253
    $@8 (283)
        on left: 252
        on right: 253
    $@9 (284)
        on left: 254
        on right: 256
    $@10 (285)
        on left: 255
        on right: 256
    expr_pipe <pExpression> (286)
        on left: 257 258 259 260 261
        on right: 221 282 283 287 288 556 569 571
    name_in_namespace <s> (287)
        on left: 262 263 264
        on right: 35 103 314 315 316 385 386 389 405 406 407 411 491 608 660 686 688
    expression_delete <pExpression> (288)
        on left: 265 266
        on right: 225
    new_type_declaration <pTypeDecl> (289)
        on left: 269 270
        on right: 271 272 273 274
    $@11 (290)
        on left: 267
        on right: 269
    $@12 (291)
        on left: 268
        on right: 269
    expr_new <pExpression> (292)
        on left: 271 272 273 274 275
        on right: 484
    expression_break <pExpression> (293)
        on left: 276
        on right: 70 232
    expression_continue <pExpression> (294)
        on left: 277
        on right: 71 233
    expression_return_no_pipe <pExpression> (295)
        on left: 278 279 280
        on right: 68 281
    expression_return <pExpression> (296)
        on left: 281 282 283
        on right: 234
    expression_yield_no_pipe <pExpression> (297)
        on left: 284 285
        on right: 69 286
    expression_yield <pExpression> (298)
        on left: 286 287 288
        on right: 235
    expression_try_catch <pExpression> (299)
        on left: 289
        on right: 237
    kwd_let <b> (300)
        on left: 290 291
        on right: 300 301 580 582
    optional_in_scope <b> (301)
        on left: 292 293
        on right: 300 301
    tuple_expansion <pNameList> (302)
        on left: 294 295
        on right: 295 296 297 298 299
    tuple_expansion_variable_declaration <pVarDecl> (303)
        on left: 296 297 298 299
        on right: 301
    expression_let <pExpression> (304)
        on left: 300 301
        on right: 226
    expr_cast <pExpression> (305)
        on left: 304 307 310
        on right: 483
    $@13 (306)
        on left: 302
        on right: 304
    $@14 (307)
        on left: 303
        on right: 304
    $@15 (308)
        on left: 305
        on right: 307
    $@16 (309)
        on left: 306
        on right: 307
    $@17 (310)
        on left: 308
        on right: 310
    $@18 (311)
        on left: 309
        on right: 310
    expr_type_decl <pExpression> (312)
        on left: 313
        on right: 482
    $@19 (313)
        on left: 311
        on right: 313
    $@20 (314)
        on left: 312
        on right: 313
    expr_type_info <pExpression> (315)
        on left: 314 315 316
        on right: 481
    expr_list <pExpression> (316)
        on left: 317 318
        on right: 76 246 273 279 280 318 386 388 401 407 409 450 501 811 817 820 823 824 827 841 842 843 844 845
    block_or_simple_block <pExpression> (317)
        on left: 319 320 321
        on right: 334 335
    block_or_lambda <i> (318)
        on left: 322 323 324
        on right: 334 335 337
    capture_entry <pCapt> (319)
        on left: 325 326 327 328
        on right: 329 330
    capture_list <pCaptList> (320)
        on left: 329 330
        on right: 330 332
    optional_capture_list <pCaptList> (321)
        on left: 331 332
        on right: 334 335 337 462 463
    expr_block <pExpression> (322)
        on left: 333 334
        on right: 257 258 259 260 364 365 366 775
    expr_full_block <pExpression> (323)
        on left: 335
        on right: 487
    expr_full_block_assumed_piped <pExpression> (324)
        on left: 337
        on right: 218 219
    $@21 (325)
        on left: 336
        on right: 337
    expr_numeric_const <pExpression> (326)
        on left: 338 339 340 341 342 343 344
        on right: 412
    expr_assign <pExpression> (327)
        on left: 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363
        on right: 224 257
    expr_assign_pipe_right <pExpression> (328)
        on left: 364 365 366 367
        on right: 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384
    expr_assign_pipe <pExpression> (329)
        on left: 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384
        on right: 223
    expr_named_call <pExpression> (330)
        on left: 385 386
        on right: 486
    expr_method_call <pExpression> (331)
        on left: 387 388
        on right: 485
    func_addr_name <pExpression> (332)
        on left: 389 390
        on right: 391 394 397
    func_addr_expr <pExpression> (333)
        on left: 391 394 397
        on right: 457
    $@22 (334)
        on left: 392
        on right: 394
    $@23 (335)
        on left: 393
        on right: 394
    $@24 (336)
        on left: 395
        on right: 397
    $@25 (337)
        on left: 396
        on right: 397
    expr_field <pExpression> (338)
        on left: 398 399 400 401 404
        on right: 418
    $@26 (339)
        on left: 402
        on right: 404
    $@27 (340)
        on left: 403
        on right: 404
    expr_call <pExpression> (341)
        on left: 405 406 407 408 409
        on right: 458
    expr <pExpression> (342)
        on left: 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 468 469 470 471 474 475 476 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493
        on right
    $@28 (343)
        on left: 466
        on right: 468
    $@29 (344)
        on left: 467
        on right: 468
    $@30 (345)
        on left: 472
        on right: 474
    $@31 (346)
        on left: 473
        on right: 474
    $@32 (347)
        on left: 477
        on right: 479
    $@33 (348)
        on left: 478
        on right: 479
    expr_mtag <pExpression> (349)
        on left: 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509
        on right: 419
    optional_field_annotation <aaList> (350)
        on left: 510 511
        on right: 522 531 532 574 582
    optional_override <i> (351)
        on left: 512 513 514
        on right: 522 529
    optional_constant <b> (352)
        on left: 515 516
        on right: 527 529
    optional_public_or_private_member_variable <b> (353)
        on left: 517 518 519
        on right: 522 527 529
    optional_static_member_variable <b> (354)
        on left: 520 521
        on right: 522 529
    structure_variable_declaration <pVarDecl> (355)
        on left: 522
        on right: 525
    struct_variable_declaration_list <pVarDeclList> (356)
        on left: 523 525 527 529 530
        on right: 525 527 529 530 618
    $@34 (357)
        on left: 524
        on right: 525
    $@35 (358)
        on left: 526
        on right: 527
    $@36 (359)
        on left: 528
        on right: 529
    function_argument_declaration <pVarDecl> (360)
        on left: 531 532 533
        on right: 534 535
    function_argument_list <pVarDeclList> (361)
        on left: 534 535
        on right: 121 535
    tuple_type <pVarDecl> (362)
        on left: 536 537
        on right: 538 539 542
    tuple_type_list <pVarDeclList> (363)
        on left: 538 539
        on right: 539 737
    tuple_alias_type_list <pVarDeclList> (364)
        on left: 540 541 542
        on right: 541 542 748
    variant_type <pVarDecl> (365)
        on left: 543
        on right: 544 545 548
    variant_type_list <pVarDeclList> (366)
        on left: 544 545
        on right: 545 740
    variant_alias_type_list <pVarDeclList> (367)
        on left: 546 547 548
        on right: 547 548 753
    copy_or_move <b> (368)
        on left: 549 550
        on right: 554 555 556 764 766 768 770
    variable_declaration <pVarDecl> (369)
        on left: 551 552 553 554 555 556
        on right: 522 531 532
    copy_or_move_or_clone <i> (370)
        on left: 557 558 559
        on right: 296 297 298 299 568 569 570 571
    optional_ref <b> (371)
        on left: 560 561
        on right: 298 299 570 571
    let_variable_name_with_pos_list <pNameWithPosList> (372)
        on left: 562 563 564 565 566
        on right: 565 566 567 568 569 570 571
    let_variable_declaration <pVarDecl> (373)
        on left: 567 568 569 570 571
        on right: 300 574 582
    global_variable_declaration_list <pVarDeclList> (374)
        on left: 572 574
        on right: 574 580
    $@37 (375)
        on left: 573
        on right: 574
    optional_shared <b> (376)
        on left: 575 576
        on right: 22 580 582
    optional_public_or_private_variable <b> (377)
        on left: 577 578 579
        on right: 580 582
    global_let (378)
        on left: 580 582
        on right: 5
    $@38 (379)
        on left: 581
        on right: 582
    enum_list <pEnum> (380)
        on left: 583 584 585 586
        on right: 584 585 586 603 606
    optional_public_or_private_alias <b> (381)
        on left: 587 588 589
        on right: 591 748 753 758
    single_alias (382)
        on left: 591
        on right: 592 593 596
    $@39 (383)
        on left: 590
        on right: 591
    alias_list (384)
        on left: 592 593
        on right: 593 594
    alias_declaration (385)
        on left: 594 596
        on right: 10
    $@40 (386)
        on left: 595
        on right: 596
    optional_public_or_private_enum <b> (387)
        on left: 597 598 599
        on right: 603 606
    enum_name <pEnum> (388)
        on left: 600
        on right: 603 606
    enum_declaration (389)
        on left: 603 606
        on right: 4
    $@41 (390)
        on left: 601
        on right: 603
    $@42 (391)
        on left: 602
        on right: 603
    $@43 (392)
        on left: 604
        on right: 606
    $@44 (393)
        on left: 605
        on right: 606
    optional_structure_parent <s> (394)
        on left: 607 608
        on right: 611
    optional_sealed <b> (395)
        on left: 609 610
        on right: 611
    structure_name <pStructure> (396)
        on left: 611
        on right: 621
    class_or_struct <b> (397)
        on left: 612 613
        on right: 621
    optional_public_or_private_structure <b> (398)
        on left: 614 615 616
        on right: 621
    optional_struct_variable_declaration_list <pVarDeclList> (399)
        on left: 617 618
        on right: 621
    structure_declaration (400)
        on left: 621
        on right: 3
    $@45 (401)
        on left: 619
        on right: 621
    $@46 (402)
        on left: 620
        on right: 621
    variable_name_with_pos_list <pNameWithPosList> (403)
        on left: 622 623 624 625 626
        on right: 76 551 552 553 554 555 556 625 626 841 842 843 844 845
    basic_type_declaration <type> (404)
        on left: 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653
        on right: 408 409 469 475 480 490 676
    enum_basic_type_declaration <type> (405)
        on left: 654 655 656 657 658 659
        on right: 606
    structure_type_declaration <pTypeDecl> (406)
        on left: 660
        on right: 270 679
    auto_type_declaration <pTypeDecl> (407)
        on left: 661 662 663
        on right: 677
    bitfield_bits <pNameList> (408)
        on left: 664 665
        on right: 665 671
    bitfield_alias_bits <pNameList> (409)
        on left: 666 667 668
        on right: 667 668 758
    bitfield_type_declaration <pTypeDecl> (410)
        on left: 671
        on right: 678
    $@47 (411)
        on left: 669
        on right: 671
    $@48 (412)
        on left: 670
        on right: 671
    table_type_pair <aTypePair> (413)
        on left: 672 673
        on right: 710
    dim_list <pTypeDecl> (414)
        on left: 674 675
        on right: 675 680
    type_declaration_no_options <pTypeDecl> (415)
        on left: 676 677 678 679 680 681 684 685 686 688 689 690 691 692 693 694 695 696 697 698 699 700 703 704 707 710 713 714 717 720 721 724 727 728 731 734 737 740
        on right: 296 297 304 307 310 394 462 463 468 567 568 569 680 681 689 690 691 692 693 694 695 696 697 698 699 700 704 741 742 788 789 790 791 792 793 796 799 802 805 814 818 819 823 827 835 836
    $@49 (416)
        on left: 682
        on right: 684
    $@50 (417)
        on left: 683
        on right: 684
    $@51 (418)
        on left: 687
        on right: 688
    $@52 (419)
        on left: 701
        on right: 703
    $@53 (420)
        on left: 702
        on right: 703
    $@54 (421)
        on left: 705
        on right: 707
    $@55 (422)
        on left: 706
        on right: 707
    $@56 (423)
        on left: 708
        on right: 710
    $@57 (424)
        on left: 709
        on right: 710
    $@58 (425)
        on left: 711
        on right: 713
    $@59 (426)
        on left: 712
        on right: 713
    $@60 (427)
        on left: 715
        on right: 717
    $@61 (428)
        on left: 716
        on right: 717
    $@62 (429)
        on left: 718
        on right: 720
    $@63 (430)
        on left: 719
        on right: 720
    $@64 (431)
        on left: 722
        on right: 724
    $@65 (432)
        on left: 723
        on right: 724
    $@66 (433)
        on left: 725
        on right: 727
    $@67 (434)
        on left: 726
        on right: 727
    $@68 (435)
        on left: 729
        on right: 731
    $@69 (436)
        on left: 730
        on right: 731
    $@70 (437)
        on left: 732
        on right: 734
    $@71 (438)
        on left: 733
        on right: 734
    $@72 (439)
        on left: 735
        on right: 737
    $@73 (440)
        on left: 736
        on right: 737
    $@74 (441)
        on left: 738
        on right: 740
    $@75 (442)
        on left: 739
        on right: 740
    type_declaration <pTypeDecl> (443)
        on left: 741 742 743
        on right: 123 249 250 269 313 474 479 536 537 543 553 554 591 672 673 684 703 707 713 717 724 731 742 743
    tuple_alias_declaration (444)
        on left: 748
        on right: 12
    $@76 (445)
        on left: 744
        on right: 748
    $@77 (446)
        on left: 745
        on right: 748
    $@78 (447)
        on left: 746
        on right: 748
    $@79 (448)
        on left: 747
        on right: 748
    variant_alias_declaration (449)
        on left: 753
        on right: 11
    $@80 (450)
        on left: 749
        on right: 753
    $@81 (451)
        on left: 750
        on right: 753
    $@82 (452)
        on left: 751
        on right: 753
    $@83 (453)
        on left: 752
        on right: 753
    bitfield_alias_declaration (454)
        on left: 758
        on right: 13
    $@84 (455)
        on left: 754
        on right: 758
    $@85 (456)
        on left: 755
        on right: 758
    $@86 (457)
        on left: 756
        on right: 758
    $@87 (458)
        on left: 757
        on right: 758
    make_decl <pExpression> (459)
        on left: 759 760 761 762 763
        on right: 275 415
    make_struct_fields <pMakeStruct> (460)
        on left: 764 765 766 767 768 769 770 771
        on right: 385 386 766 767 770 771 772 773
    make_struct_dim <pExpression> (461)
        on left: 772 773
        on right: 274 406 773 788 791 792 793 796 799 802 814
    optional_block <pExpression> (462)
        on left: 774 775
        on right: 788 789 790 791 792 793
    optional_trailing_semicolon_cur_cur (463)
        on left: 776 777
        on right: 833
    optional_trailing_semicolon_cur_sqr (464)
        on left: 778 779
        on right: 819
    optional_trailing_semicolon_sqr_sqr (465)
        on left: 780 781
        on right: 818
    optional_trailing_delim_sqr_sqr (466)
        on left: 782 783 784
        on right: 788 789 790 791
    optional_trailing_delim_cur_sqr (467)
        on left: 785 786 787
        on right: 792 793
    make_struct_decl <pExpression> (468)
        on left: 788 789 790 791 792 793 796 799 802 805
        on right: 759
    $@88 (469)
        on left: 794
        on right: 796
    $@89 (470)
        on left: 795
        on right: 796
    $@90 (471)
        on left: 797
        on right: 799
    $@91 (472)
        on left: 798
        on right: 799
    $@92 (473)
        on left: 800
        on right: 802
    $@93 (474)
        on left: 801
        on right: 802
    $@94 (475)
        on left: 803
        on right: 805
    $@95 (476)
        on left: 804
        on right: 805
    make_tuple <pExpression> (477)
        on left: 806 807 808
        on right: 808 815 816
    make_map_tuple <pExpression> (478)
        on left: 809 810
        on right: 828 829 830 831 844 845
    make_tuple_call <pExpression> (479)
        on left: 811 814
        on right: 763
    $@96 (480)
        on left: 812
        on right: 814
    $@97 (481)
        on left: 813
        on right: 814
    make_dim <pExpression> (482)
        on left: 815 816
        on right: 816 818 819
    make_dim_decl <pExpression> (483)
        on left: 817 818 819 820 823 824 827
        on right: 760
    $@98 (484)
        on left: 821
        on right: 823
    $@99 (485)
        on left: 822
        on right: 823
    $@100 (486)
        on left: 825
        on right: 827
    $@101 (487)
        on left: 826
        on right: 827
    make_table <pExpression> (488)
        on left: 828 829
        on right: 829 833
    expr_map_tuple_list <pExpression> (489)
        on left: 830 831
        on right: 831 832 834 835 836
    make_table_decl <pExpression> (490)
        on left: 832 833 834 835 836
        on right: 761
    array_comprehension_where <pExpression> (491)
        on left: 837 838
        on right: 841 842 843 844 845
    optional_comma <b> (492)
        on left: 839 840
        on right: 450 811 817 820 823 824 827 832 834 835 836
    array_comprehension <pExpression> (493)
        on left: 841 842 843 844 845
        on right: 762


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "tuple"     shift, and go to state 11
    "variant"   shift, and go to state 12
    '%'         shift, and go to state 13
    '['         shift, and go to state 14
    ';'         shift, and go to state 15

    $default  reduce using rule 117 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  290 kwd_let: "let" .

    $default  reduce using rule 290 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  594 alias_declaration: "typedef" . '{' alias_list '}'
  596                  | "typedef" . $@40 single_alias ';'

    '{'  shift, and go to state 48

    $default  reduce using rule 595 ($@40)

    $@40  go to state 49


State 8

  291 kwd_let: "var" .

    $default  reduce using rule 291 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  758 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@84 "name" $@85 '{' $@86 bitfield_alias_bits $@87 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 587 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  748 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@76 "name" $@77 '{' $@78 tuple_alias_type_list $@79 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 587 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  753 variant_alias_declaration: "variant" . optional_public_or_private_alias $@80 "name" $@81 '{' $@82 variant_alias_type_list $@83 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 587 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 14

  118 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 15

   15 program: program ';' .

    $default  reduce using rule 15 (program)


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . ';'

    ';'  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  209 global_function_declaration: optional_annotation_list . "def" function_declaration
  603 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' $@41 enum_list $@42 '}'
  606                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@43 enum_list $@44 '}'
  621 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  580 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  582           | kwd_let . optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 575 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   91 annotation_argument_name: "type" .

    $default  reduce using rule 91 (annotation_argument_name)


State 33

   92 annotation_argument_name: "in" .

    $default  reduce using rule 92 (annotation_argument_name)


State 34

   90 annotation_argument_name: "name" .

    $default  reduce using rule 90 (annotation_argument_name)


State 35

   93 annotation_argument: annotation_argument_name . '=' string_constant
   94                    | annotation_argument_name . '=' "name"
   95                    | annotation_argument_name . '=' "integer constant"
   96                    | annotation_argument_name . '=' "floating point constant"
   97                    | annotation_argument_name . '=' "true"
   98                    | annotation_argument_name . '=' "false"
   99                    | annotation_argument_name .
  100                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 99 (annotation_argument)


State 36

  101 annotation_argument_list: annotation_argument .

    $default  reduce using rule 101 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 88


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  594 alias_declaration: "typedef" '{' . alias_list '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 587 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 90
    alias_list                        go to state 91


State 49

  596 alias_declaration: "typedef" $@40 . single_alias ';'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 587 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 92


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 575 (optional_shared)

    optional_shared  go to state 93


State 53

  589 optional_public_or_private_alias: "public" .

    $default  reduce using rule 589 (optional_public_or_private_alias)


State 54

  588 optional_public_or_private_alias: "private" .

    $default  reduce using rule 588 (optional_public_or_private_alias)


State 55

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@84 "name" $@85 '{' $@86 bitfield_alias_bits $@87 '}'

    $default  reduce using rule 754 ($@84)

    $@84  go to state 94


State 56

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@76 "name" $@77 '{' $@78 tuple_alias_type_list $@79 '}'

    $default  reduce using rule 744 ($@76)

    $@76  go to state 95


State 57

  753 variant_alias_declaration: "variant" optional_public_or_private_alias . $@80 "name" $@81 '{' $@82 variant_alias_type_list $@83 '}'

    $default  reduce using rule 749 ($@80)

    $@80  go to state 96


State 58

  264 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 97


State 59

  262 name_in_namespace: "name" .
  263                  | "name" . "::" "name"

    "::"  shift, and go to state 98

    "::"      [reduce using rule 262 (name_in_namespace)]
    $default  reduce using rule 262 (name_in_namespace)


State 60

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 99


State 61

  104 annotation_declaration_name: "require" .

    $default  reduce using rule 104 (annotation_declaration_name)


State 62

  105 annotation_declaration_name: "private" .

    $default  reduce using rule 105 (annotation_declaration_name)


State 63

  114 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 64

  109 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 101
    name_in_namespace             go to state 70


State 65

  113 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 102
    name_in_namespace             go to state 70


State 66

  106 annotation_declaration_basic: annotation_declaration_name .
  107                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 103

    $default  reduce using rule 106 (annotation_declaration_basic)


State 67

  108 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 108 (annotation_declaration)


State 68

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  115 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 115 (annotation_list)


State 69

  116 annotation_list: annotation_list . ',' annotation_declaration
  118 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 107
    ']'  shift, and go to state 108


State 70

  103 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 103 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader ';' .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  613 class_or_struct: "struct" .

    $default  reduce using rule 613 (class_or_struct)


State 73

  612 class_or_struct: "class" .

    $default  reduce using rule 612 (class_or_struct)


State 74

  209 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 210 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 75

  603 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' $@41 enum_list $@42 '}'
  606                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@43 enum_list $@44 '}'

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 597 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 115


State 76

  621 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 614 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 118


State 77

  576 optional_shared: "shared" .

    $default  reduce using rule 576 (optional_shared)


State 78

  580 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  582           | kwd_let optional_shared . optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 577 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 121


State 79

   93 annotation_argument: annotation_argument_name '=' . string_constant
   94                    | annotation_argument_name '=' . "name"
   95                    | annotation_argument_name '=' . "integer constant"
   96                    | annotation_argument_name '=' . "floating point constant"
   97                    | annotation_argument_name '=' . "true"
   98                    | annotation_argument_name '=' . "false"
  100                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 122
    "false"                    shift, and go to state 123
    "integer constant"         shift, and go to state 124
    "floating point constant"  shift, and go to state 125
    "name"                     shift, and go to state 126
    "start of the string"      shift, and go to state 127
    '('                        shift, and go to state 128

    string_constant  go to state 129


State 80

  102 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 130


State 81

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 131


State 82

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 132


State 83

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 42 (require_module_name)


State 84

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 133


State 85

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 86

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 134


State 87

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 89

  591 single_alias: optional_public_or_private_alias . "name" $@39 '=' type_declaration

    "name"  shift, and go to state 136


State 90

  592 alias_list: single_alias . ';'

    ';'  shift, and go to state 137


State 91

  593 alias_list: alias_list . single_alias ';'
  594 alias_declaration: "typedef" '{' alias_list . '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54
    '}'        shift, and go to state 138

    $default  reduce using rule 587 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 139


State 92

  596 alias_declaration: "typedef" $@40 single_alias . ';'

    ';'  shift, and go to state 140


State 93

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 94

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 . "name" $@85 '{' $@86 bitfield_alias_bits $@87 '}'

    "name"  shift, and go to state 144


State 95

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 . "name" $@77 '{' $@78 tuple_alias_type_list $@79 '}'

    "name"  shift, and go to state 145


State 96

  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 . "name" $@81 '{' $@82 variant_alias_type_list $@83 '}'

    "name"  shift, and go to state 146


State 97

  264 name_in_namespace: "::" "name" .

    $default  reduce using rule 264 (name_in_namespace)


State 98

  263 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 99

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 100

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  114                       | "|>" annotation_declaration .

    $default  reduce using rule 114 (annotation_declaration)


State 101

  109 annotation_declaration: '!' annotation_declaration .
  110                       | annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 109 (annotation_declaration)


State 102

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  113                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106
    ')'   shift, and go to state 150


State 103

  107 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 104

  110 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 152
    name_in_namespace             go to state 70


State 105

  111 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 153
    name_in_namespace             go to state 70


State 106

  112 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 154
    name_in_namespace             go to state 70


State 107

  116 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 155
    name_in_namespace             go to state 70


State 108

  118 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 118 (optional_annotation_list)


State 109

  212 optional_public_or_private_function: "public" .

    $default  reduce using rule 212 (optional_public_or_private_function)


State 110

  211 optional_public_or_private_function: "private" .

    $default  reduce using rule 211 (optional_public_or_private_function)


State 111

  215 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 214 ($@6)

    $@6  go to state 156


State 112

  209 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 209 (global_function_declaration)


State 113

  599 optional_public_or_private_enum: "public" .

    $default  reduce using rule 599 (optional_public_or_private_enum)


State 114

  598 optional_public_or_private_enum: "private" .

    $default  reduce using rule 598 (optional_public_or_private_enum)


State 115

  603 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' $@41 enum_list $@42 '}'
  606                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' $@43 enum_list $@44 '}'

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 116

  616 optional_public_or_private_structure: "public" .

    $default  reduce using rule 616 (optional_public_or_private_structure)


State 117

  615 optional_public_or_private_structure: "private" .

    $default  reduce using rule 615 (optional_public_or_private_structure)


State 118

  621 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@45 structure_name $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 619 ($@45)

    $@45  go to state 159


State 119

  579 optional_public_or_private_variable: "public" .

    $default  reduce using rule 579 (optional_public_or_private_variable)


State 120

  578 optional_public_or_private_variable: "private" .

    $default  reduce using rule 578 (optional_public_or_private_variable)


State 121

  580 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  582           | kwd_let optional_shared optional_public_or_private_variable . $@38 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 160

    $default  reduce using rule 581 ($@38)

    $@38  go to state 161


State 122

   97 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 97 (annotation_argument)


State 123

   98 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 98 (annotation_argument)


State 124

   95 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 95 (annotation_argument)


State 125

   96 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 96 (annotation_argument)


State 126

   94 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 94 (annotation_argument)


State 127

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 128

  100 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 129

   93 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 93 (annotation_argument)


State 130

  102 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 131

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 132

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 133

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 134

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 135

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 136

  591 single_alias: optional_public_or_private_alias "name" . $@39 '=' type_declaration

    $default  reduce using rule 590 ($@39)

    $@39  go to state 174


State 137

  592 alias_list: single_alias ';' .

    $default  reduce using rule 592 (alias_list)


State 138

  594 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 594 (alias_declaration)


State 139

  593 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 175


State 140

  596 alias_declaration: "typedef" $@40 single_alias ';' .

    $default  reduce using rule 596 (alias_declaration)


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" . $@85 '{' $@86 bitfield_alias_bits $@87 '}'

    $default  reduce using rule 755 ($@85)

    $@85  go to state 176


State 145

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" . $@77 '{' $@78 tuple_alias_type_list $@79 '}'

    $default  reduce using rule 745 ($@77)

    $@77  go to state 177


State 146

  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" . $@81 '{' $@82 variant_alias_type_list $@83 '}'

    $default  reduce using rule 750 ($@81)

    $@81  go to state 178


State 147

  263 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 263 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  113 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 113 (annotation_declaration)


State 151

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  107 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 180


State 152

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  110                       | annotation_declaration "&&" annotation_declaration .
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 110 (annotation_declaration)


State 153

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  111                       | annotation_declaration "||" annotation_declaration .
  112                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 104
    "^^"  shift, and go to state 106

    $default  reduce using rule 111 (annotation_declaration)


State 154

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  112                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 104

    $default  reduce using rule 112 (annotation_declaration)


State 155

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  116 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 116 (annotation_list)


State 156

  215 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  600 enum_name: "name" .

    $default  reduce using rule 600 (enum_name)


State 158

  603 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' $@41 enum_list $@42 '}'
  606                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' $@43 enum_list $@44 '}'

    ':'  shift, and go to state 212
    '{'  shift, and go to state 213


State 159

  621 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 . structure_name $@46 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 609 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  580 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 572 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  582 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 510 (optional_field_annotation)

    optional_field_annotation  go to state 219


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221
    "end of the string"   shift, and go to state 222


State 165

   86 annotation_argument_value: "true" .

    $default  reduce using rule 86 (annotation_argument_value)


State 166

   87 annotation_argument_value: "false" .

    $default  reduce using rule 87 (annotation_argument_value)


State 167

   84 annotation_argument_value: "integer constant" .

    $default  reduce using rule 84 (annotation_argument_value)


State 168

   85 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 169

   83 annotation_argument_value: "name" .

    $default  reduce using rule 83 (annotation_argument_value)


State 170

   82 annotation_argument_value: string_constant .

    $default  reduce using rule 82 (annotation_argument_value)


State 171

   88 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 88 (annotation_argument_value_list)


State 172

   89 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 223
    ')'  shift, and go to state 224


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  591 single_alias: optional_public_or_private_alias "name" $@39 . '=' type_declaration

    '='  shift, and go to state 225


State 175

  593 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 593 (alias_list)


State 176

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 . '{' $@86 bitfield_alias_bits $@87 '}'

    '{'  shift, and go to state 226


State 177

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 . '{' $@78 tuple_alias_type_list $@79 '}'

    '{'  shift, and go to state 227


State 178

  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 . '{' $@82 variant_alias_type_list $@83 '}'

    '{'  shift, and go to state 228


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  107 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 107 (annotation_declaration_basic)


State 181

  125 function_name: "operator" . '!'
  126              | "operator" . '~'
  127              | "operator" . "+="
  128              | "operator" . "-="
  129              | "operator" . "*="
  130              | "operator" . "/="
  131              | "operator" . "%="
  132              | "operator" . "&="
  133              | "operator" . "|="
  134              | "operator" . "^="
  135              | "operator" . "&&="
  136              | "operator" . "||="
  137              | "operator" . "^^="
  138              | "operator" . "&&"
  139              | "operator" . "||"
  140              | "operator" . "^^"
  141              | "operator" . '+'
  142              | "operator" . '-'
  143              | "operator" . '*'
  144              | "operator" . '/'
  145              | "operator" . '%'
  146              | "operator" . '<'
  147              | "operator" . '>'
  148              | "operator" . ".."
  149              | "operator" . "=="
  150              | "operator" . "!="
  151              | "operator" . "<="
  152              | "operator" . ">="
  153              | "operator" . '&'
  154              | "operator" . '|'
  155              | "operator" . '^'
  158              | "operator" . "++"
  159              | "operator" . "--"
  160              | "operator" . "<<"
  161              | "operator" . ">>"
  162              | "operator" . "<<="
  163              | "operator" . ">>="
  164              | "operator" . "<<<"
  165              | "operator" . ">>>"
  166              | "operator" . "<<<="
  167              | "operator" . ">>>="
  168              | "operator" . '[' ']'
  169              | "operator" . "?[" ']'
  170              | "operator" . '.'
  171              | "operator" . "?."
  172              | "operator" . '.' "name"
  173              | "operator" . '.' "name" ":="
  174              | "operator" . "?." "name"
  175              | "operator" . ":="
  176              | "operator" . "delete"
  177              | "operator" . "??"
  178              | "operator" . "is"
  179              | "operator" . "as"
  180              | "operator" . "is" "name"
  181              | "operator" . "as" "name"
  182              | "operator" . '?' "as"
  183              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 229
    "as"      shift, and go to state 230
    "delete"  shift, and go to state 231
    "+="      shift, and go to state 232
    "-="      shift, and go to state 233
    "/="      shift, and go to state 234
    "*="      shift, and go to state 235
    "%="      shift, and go to state 236
    "&="      shift, and go to state 237
    "|="      shift, and go to state 238
    "^="      shift, and go to state 239
    "<<"      shift, and go to state 240
    ">>"      shift, and go to state 241
    "++"      shift, and go to state 242
    "--"      shift, and go to state 243
    "<="      shift, and go to state 244
    "<<="     shift, and go to state 245
    ">>="     shift, and go to state 246
    ">="      shift, and go to state 247
    "=="      shift, and go to state 248
    "!="      shift, and go to state 249
    "??"      shift, and go to state 250
    "?."      shift, and go to state 251
    "?["      shift, and go to state 252
    ":="      shift, and go to state 253
    "<<<"     shift, and go to state 254
    ">>>"     shift, and go to state 255
    "<<<="    shift, and go to state 256
    ">>>="    shift, and go to state 257
    "&&"      shift, and go to state 258
    "||"      shift, and go to state 259
    "^^"      shift, and go to state 260
    "&&="     shift, and go to state 261
    "||="     shift, and go to state 262
    "^^="     shift, and go to state 263
    ".."      shift, and go to state 264
    '?'       shift, and go to state 265
    '|'       shift, and go to state 266
    '^'       shift, and go to state 267
    '&'       shift, and go to state 268
    '<'       shift, and go to state 269
    '>'       shift, and go to state 270
    '-'       shift, and go to state 271
    '+'       shift, and go to state 272
    '*'       shift, and go to state 273
    '/'       shift, and go to state 274
    '%'       shift, and go to state 275
    '~'       shift, and go to state 276
    '!'       shift, and go to state 277
    '.'       shift, and go to state 278
    '['       shift, and go to state 279


State 182

  184 function_name: "bool" .

    $default  reduce using rule 184 (function_name)


State 183

  185 function_name: "string" .

    $default  reduce using rule 185 (function_name)


State 184

  186 function_name: "int" .

    $default  reduce using rule 186 (function_name)


State 185

  187 function_name: "int2" .

    $default  reduce using rule 187 (function_name)


State 186

  188 function_name: "int3" .

    $default  reduce using rule 188 (function_name)


State 187

  189 function_name: "int4" .

    $default  reduce using rule 189 (function_name)


State 188

  190 function_name: "uint" .

    $default  reduce using rule 190 (function_name)


State 189

  191 function_name: "uint2" .

    $default  reduce using rule 191 (function_name)


State 190

  192 function_name: "uint3" .

    $default  reduce using rule 192 (function_name)


State 191

  193 function_name: "uint4" .

    $default  reduce using rule 193 (function_name)


State 192

  194 function_name: "float" .

    $default  reduce using rule 194 (function_name)


State 193

  195 function_name: "float2" .

    $default  reduce using rule 195 (function_name)


State 194

  196 function_name: "float3" .

    $default  reduce using rule 196 (function_name)


State 195

  197 function_name: "float4" .

    $default  reduce using rule 197 (function_name)


State 196

  198 function_name: "range" .

    $default  reduce using rule 198 (function_name)


State 197

  199 function_name: "urange" .

    $default  reduce using rule 199 (function_name)


State 198

  200 function_name: "range64" .

    $default  reduce using rule 200 (function_name)


State 199

  201 function_name: "urange64" .

    $default  reduce using rule 201 (function_name)


State 200

  202 function_name: "int64" .

    $default  reduce using rule 202 (function_name)


State 201

  203 function_name: "uint64" .

    $default  reduce using rule 203 (function_name)


State 202

  204 function_name: "double" .

    $default  reduce using rule 204 (function_name)


State 203

  205 function_name: "int8" .

    $default  reduce using rule 205 (function_name)


State 204

  206 function_name: "uint8" .

    $default  reduce using rule 206 (function_name)


State 205

  207 function_name: "int16" .

    $default  reduce using rule 207 (function_name)


State 206

  208 function_name: "uint16" .

    $default  reduce using rule 208 (function_name)


State 207

  156 function_name: "++" . "operator"

    "operator"  shift, and go to state 280


State 208

  157 function_name: "--" . "operator"

    "operator"  shift, and go to state 281


State 209

  124 function_name: "name" .

    $default  reduce using rule 124 (function_name)


State 210

  213 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 283


State 211

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 285


State 212

  606 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' $@43 enum_list $@44 '}'

    "int"     shift, and go to state 286
    "uint"    shift, and go to state 287
    "int8"    shift, and go to state 288
    "uint8"   shift, and go to state 289
    "int16"   shift, and go to state 290
    "uint16"  shift, and go to state 291

    enum_basic_type_declaration  go to state 292


State 213

  603 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . $@41 enum_list $@42 '}'

    $default  reduce using rule 601 ($@41)

    $@41  go to state 293


State 214

  610 optional_sealed: "sealed" .

    $default  reduce using rule 610 (optional_sealed)


State 215

  611 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 294


State 216

  621 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name . $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 620 ($@46)

    $@46  go to state 295


State 217

  574 global_variable_declaration_list: global_variable_declaration_list . $@37 optional_field_annotation let_variable_declaration
  580 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 296

    $default  reduce using rule 573 ($@37)

    $@37  go to state 297


State 218

  511 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 298


State 219

  582 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 302


State 220

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 221

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 222

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 223

   89 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant            go to state 170
    annotation_argument_value  go to state 303


State 224

  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 100 (annotation_argument)


State 225

  591 single_alias: optional_public_or_private_alias "name" $@39 '=' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 351


State 226

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 '{' . $@86 bitfield_alias_bits $@87 '}'

    $default  reduce using rule 756 ($@86)

    $@86  go to state 352


State 227

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 '{' . $@78 tuple_alias_type_list $@79 '}'

    $default  reduce using rule 746 ($@78)

    $@78  go to state 353


State 228

  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 '{' . $@82 variant_alias_type_list $@83 '}'

    $default  reduce using rule 751 ($@82)

    $@82  go to state 354


State 229

  178 function_name: "operator" "is" .
  180              | "operator" "is" . "name"

    "name"  shift, and go to state 355

    $default  reduce using rule 178 (function_name)


State 230

  179 function_name: "operator" "as" .
  181              | "operator" "as" . "name"

    "name"  shift, and go to state 356

    $default  reduce using rule 179 (function_name)


State 231

  176 function_name: "operator" "delete" .

    $default  reduce using rule 176 (function_name)


State 232

  127 function_name: "operator" "+=" .

    $default  reduce using rule 127 (function_name)


State 233

  128 function_name: "operator" "-=" .

    $default  reduce using rule 128 (function_name)


State 234

  130 function_name: "operator" "/=" .

    $default  reduce using rule 130 (function_name)


State 235

  129 function_name: "operator" "*=" .

    $default  reduce using rule 129 (function_name)


State 236

  131 function_name: "operator" "%=" .

    $default  reduce using rule 131 (function_name)


State 237

  132 function_name: "operator" "&=" .

    $default  reduce using rule 132 (function_name)


State 238

  133 function_name: "operator" "|=" .

    $default  reduce using rule 133 (function_name)


State 239

  134 function_name: "operator" "^=" .

    $default  reduce using rule 134 (function_name)


State 240

  160 function_name: "operator" "<<" .

    $default  reduce using rule 160 (function_name)


State 241

  161 function_name: "operator" ">>" .

    $default  reduce using rule 161 (function_name)


State 242

  158 function_name: "operator" "++" .

    $default  reduce using rule 158 (function_name)


State 243

  159 function_name: "operator" "--" .

    $default  reduce using rule 159 (function_name)


State 244

  151 function_name: "operator" "<=" .

    $default  reduce using rule 151 (function_name)


State 245

  162 function_name: "operator" "<<=" .

    $default  reduce using rule 162 (function_name)


State 246

  163 function_name: "operator" ">>=" .

    $default  reduce using rule 163 (function_name)


State 247

  152 function_name: "operator" ">=" .

    $default  reduce using rule 152 (function_name)


State 248

  149 function_name: "operator" "==" .

    $default  reduce using rule 149 (function_name)


State 249

  150 function_name: "operator" "!=" .

    $default  reduce using rule 150 (function_name)


State 250

  177 function_name: "operator" "??" .

    $default  reduce using rule 177 (function_name)


State 251

  171 function_name: "operator" "?." .
  174              | "operator" "?." . "name"

    "name"  shift, and go to state 357

    $default  reduce using rule 171 (function_name)


State 252

  169 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 358


State 253

  175 function_name: "operator" ":=" .

    $default  reduce using rule 175 (function_name)


State 254

  164 function_name: "operator" "<<<" .

    $default  reduce using rule 164 (function_name)


State 255

  165 function_name: "operator" ">>>" .

    $default  reduce using rule 165 (function_name)


State 256

  166 function_name: "operator" "<<<=" .

    $default  reduce using rule 166 (function_name)


State 257

  167 function_name: "operator" ">>>=" .

    $default  reduce using rule 167 (function_name)


State 258

  138 function_name: "operator" "&&" .

    $default  reduce using rule 138 (function_name)


State 259

  139 function_name: "operator" "||" .

    $default  reduce using rule 139 (function_name)


State 260

  140 function_name: "operator" "^^" .

    $default  reduce using rule 140 (function_name)


State 261

  135 function_name: "operator" "&&=" .

    $default  reduce using rule 135 (function_name)


State 262

  136 function_name: "operator" "||=" .

    $default  reduce using rule 136 (function_name)


State 263

  137 function_name: "operator" "^^=" .

    $default  reduce using rule 137 (function_name)


State 264

  148 function_name: "operator" ".." .

    $default  reduce using rule 148 (function_name)


State 265

  182 function_name: "operator" '?' . "as"
  183              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 359


State 266

  154 function_name: "operator" '|' .

    $default  reduce using rule 154 (function_name)


State 267

  155 function_name: "operator" '^' .

    $default  reduce using rule 155 (function_name)


State 268

  153 function_name: "operator" '&' .

    $default  reduce using rule 153 (function_name)


State 269

  146 function_name: "operator" '<' .

    $default  reduce using rule 146 (function_name)


State 270

  147 function_name: "operator" '>' .

    $default  reduce using rule 147 (function_name)


State 271

  142 function_name: "operator" '-' .

    $default  reduce using rule 142 (function_name)


State 272

  141 function_name: "operator" '+' .

    $default  reduce using rule 141 (function_name)


State 273

  143 function_name: "operator" '*' .

    $default  reduce using rule 143 (function_name)


State 274

  144 function_name: "operator" '/' .

    $default  reduce using rule 144 (function_name)


State 275

  145 function_name: "operator" '%' .

    $default  reduce using rule 145 (function_name)


State 276

  126 function_name: "operator" '~' .

    $default  reduce using rule 126 (function_name)


State 277

  125 function_name: "operator" '!' .

    $default  reduce using rule 125 (function_name)


State 278

  170 function_name: "operator" '.' .
  172              | "operator" '.' . "name"
  173              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 360

    $default  reduce using rule 170 (function_name)


State 279

  168 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 361


State 280

  156 function_name: "++" "operator" .

    $default  reduce using rule 156 (function_name)


State 281

  157 function_name: "--" "operator" .

    $default  reduce using rule 157 (function_name)


State 282

  120 optional_function_argument_list: '(' . ')'
  121                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218
    ')'   shift, and go to state 363

    $default  reduce using rule 510 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 365
    function_argument_list         go to state 366


State 283

  213 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 368


State 284

  216 expression_block: '{' . expressions '}'
  217                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 241 (expressions)

    expressions  go to state 369


State 285

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 215 (function_declaration)


State 286

  654 enum_basic_type_declaration: "int" .

    $default  reduce using rule 654 (enum_basic_type_declaration)


State 287

  657 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 657 (enum_basic_type_declaration)


State 288

  655 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 655 (enum_basic_type_declaration)


State 289

  658 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 658 (enum_basic_type_declaration)


State 290

  656 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 656 (enum_basic_type_declaration)


State 291

  659 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 659 (enum_basic_type_declaration)


State 292

  606 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' $@43 enum_list $@44 '}'

    '{'  shift, and go to state 370


State 293

  603 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@41 . enum_list $@42 '}'

    $default  reduce using rule 583 (enum_list)

    enum_list  go to state 371


State 294

  611 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 372

    $default  reduce using rule 607 (optional_structure_parent)

    optional_structure_parent  go to state 373


State 295

  621 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 . optional_struct_variable_declaration_list

    '{'  shift, and go to state 374

    $default  reduce using rule 617 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 375


State 296

  580 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 580 (global_let)


State 297

  574 global_variable_declaration_list: global_variable_declaration_list $@37 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 510 (optional_field_annotation)

    optional_field_annotation  go to state 376


State 298

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  511 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 377


State 299

  563 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 378


State 300

  562 let_variable_name_with_pos_list: "name" .
  564                                | "name" . "aka" "name"

    "aka"  shift, and go to state 379

    $default  reduce using rule 562 (let_variable_name_with_pos_list)


State 301

  565 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  566                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  567 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  568                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  569                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  570                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  571                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 380
    ':'  shift, and go to state 381
    '&'  shift, and go to state 382

    $default  reduce using rule 560 (optional_ref)

    optional_ref  go to state 383


State 302

  582 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 582 (global_let)


State 303

   89 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 304

  684 type_declaration_no_options: "type" . '<' $@49 type_declaration '>' $@50

    '<'  shift, and go to state 384


State 305

  707 type_declaration_no_options: "array" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 385


State 306

  710 type_declaration_no_options: "table" . '<' $@56 table_type_pair '>' $@57

    '<'  shift, and go to state 386


State 307

  685 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 387


State 308

  713 type_declaration_no_options: "iterator" . '<' $@58 type_declaration '>' $@59

    '<'  shift, and go to state 388


State 309

  703 type_declaration_no_options: "smart_ptr" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 389


State 310

  627 basic_type_declaration: "bool" .

    $default  reduce using rule 627 (basic_type_declaration)


State 311

  647 basic_type_declaration: "void" .

    $default  reduce using rule 647 (basic_type_declaration)


State 312

  628 basic_type_declaration: "string" .

    $default  reduce using rule 628 (basic_type_declaration)


State 313

  661 auto_type_declaration: "auto" .
  662                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 390

    '('       [reduce using rule 661 (auto_type_declaration)]
    $default  reduce using rule 661 (auto_type_declaration)


State 314

  629 basic_type_declaration: "int" .

    $default  reduce using rule 629 (basic_type_declaration)


State 315

  633 basic_type_declaration: "int2" .

    $default  reduce using rule 633 (basic_type_declaration)


State 316

  634 basic_type_declaration: "int3" .

    $default  reduce using rule 634 (basic_type_declaration)


State 317

  635 basic_type_declaration: "int4" .

    $default  reduce using rule 635 (basic_type_declaration)


State 318

  636 basic_type_declaration: "uint" .

    $default  reduce using rule 636 (basic_type_declaration)


State 319

  653 basic_type_declaration: "bitfield" .
  671 bitfield_type_declaration: "bitfield" . '<' $@47 bitfield_bits '>' $@48

    '<'  shift, and go to state 391

    $default  reduce using rule 653 (basic_type_declaration)


State 320

  640 basic_type_declaration: "uint2" .

    $default  reduce using rule 640 (basic_type_declaration)


State 321

  641 basic_type_declaration: "uint3" .

    $default  reduce using rule 641 (basic_type_declaration)


State 322

  642 basic_type_declaration: "uint4" .

    $default  reduce using rule 642 (basic_type_declaration)


State 323

  643 basic_type_declaration: "float" .

    $default  reduce using rule 643 (basic_type_declaration)


State 324

  644 basic_type_declaration: "float2" .

    $default  reduce using rule 644 (basic_type_declaration)


State 325

  645 basic_type_declaration: "float3" .

    $default  reduce using rule 645 (basic_type_declaration)


State 326

  646 basic_type_declaration: "float4" .

    $default  reduce using rule 646 (basic_type_declaration)


State 327

  648 basic_type_declaration: "range" .

    $default  reduce using rule 648 (basic_type_declaration)


State 328

  649 basic_type_declaration: "urange" .

    $default  reduce using rule 649 (basic_type_declaration)


State 329

  650 basic_type_declaration: "range64" .

    $default  reduce using rule 650 (basic_type_declaration)


State 330

  651 basic_type_declaration: "urange64" .

    $default  reduce using rule 651 (basic_type_declaration)


State 331

  714 type_declaration_no_options: "block" .
  717                            | "block" . '<' $@60 type_declaration '>' $@61
  720                            | "block" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 392

    $default  reduce using rule 714 (type_declaration_no_options)


State 332

  632 basic_type_declaration: "int64" .

    $default  reduce using rule 632 (basic_type_declaration)


State 333

  639 basic_type_declaration: "uint64" .

    $default  reduce using rule 639 (basic_type_declaration)


State 334

  652 basic_type_declaration: "double" .

    $default  reduce using rule 652 (basic_type_declaration)


State 335

  721 type_declaration_no_options: "function" .
  724                            | "function" . '<' $@64 type_declaration '>' $@65
  727                            | "function" . '<' $@66 optional_function_argument_list optional_function_type '>' $@67

    '<'  shift, and go to state 393

    $default  reduce using rule 721 (type_declaration_no_options)


State 336

  728 type_declaration_no_options: "lambda" .
  731                            | "lambda" . '<' $@68 type_declaration '>' $@69
  734                            | "lambda" . '<' $@70 optional_function_argument_list optional_function_type '>' $@71

    '<'  shift, and go to state 394

    $default  reduce using rule 728 (type_declaration_no_options)


State 337

  630 basic_type_declaration: "int8" .

    $default  reduce using rule 630 (basic_type_declaration)


State 338

  637 basic_type_declaration: "uint8" .

    $default  reduce using rule 637 (basic_type_declaration)


State 339

  631 basic_type_declaration: "int16" .

    $default  reduce using rule 631 (basic_type_declaration)


State 340

  638 basic_type_declaration: "uint16" .

    $default  reduce using rule 638 (basic_type_declaration)


State 341

  737 type_declaration_no_options: "tuple" . '<' $@72 tuple_type_list '>' $@73

    '<'  shift, and go to state 395


State 342

  740 type_declaration_no_options: "variant" . '<' $@74 variant_type_list '>' $@75

    '<'  shift, and go to state 396


State 343

  663 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 397


State 344

  686 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  688                            | '$' . name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 398


State 345

  660 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 660 (structure_type_declaration)


State 346

  676 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 676 (type_declaration_no_options)


State 347

  679 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 679 (type_declaration_no_options)


State 348

  677 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 677 (type_declaration_no_options)


State 349

  678 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 678 (type_declaration_no_options)


State 350

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  741 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 741 (type_declaration)

    dim_list  go to state 409


State 351

  591 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration .
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 591 (single_alias)


State 352

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 '{' $@86 . bitfield_alias_bits $@87 '}'

    $default  reduce using rule 666 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 411


State 353

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 '{' $@78 . tuple_alias_type_list $@79 '}'

    $default  reduce using rule 540 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 412


State 354

  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 '{' $@82 . variant_alias_type_list $@83 '}'

    $default  reduce using rule 546 (variant_alias_type_list)

    variant_alias_type_list  go to state 413


State 355

  180 function_name: "operator" "is" "name" .

    $default  reduce using rule 180 (function_name)


State 356

  181 function_name: "operator" "as" "name" .

    $default  reduce using rule 181 (function_name)


State 357

  174 function_name: "operator" "?." "name" .

    $default  reduce using rule 174 (function_name)


State 358

  169 function_name: "operator" "?[" ']' .

    $default  reduce using rule 169 (function_name)


State 359

  182 function_name: "operator" '?' "as" .
  183              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 414

    $default  reduce using rule 182 (function_name)


State 360

  172 function_name: "operator" '.' "name" .
  173              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 415

    $default  reduce using rule 172 (function_name)


State 361

  168 function_name: "operator" '[' ']' .

    $default  reduce using rule 168 (function_name)


State 362

  533 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 416


State 363

  120 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 120 (optional_function_argument_list)


State 364

  531 function_argument_declaration: optional_field_annotation . variable_declaration
  532                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 417
    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_declaration         go to state 420
    variable_name_with_pos_list  go to state 421


State 365

  534 function_argument_list: function_argument_declaration .

    $default  reduce using rule 534 (function_argument_list)


State 366

  121 optional_function_argument_list: '(' function_argument_list . ')'
  535 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 422
    ';'  shift, and go to state 423


State 367

  123 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 424


State 368

  213 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 213 (function_declaration_header)


State 369

  216 expression_block: '{' expressions . '}'
  217                 | '{' expressions . '}' "finally" '{' expressions '}'
  242 expressions: expressions . expression_any
  243            | expressions . error

    error                             shift, and go to state 425
    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 428
    "if"                              shift, and go to state 429
    "static_if"                       shift, and go to state 430
    "for"                             shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 438
    "null"                            shift, and go to state 439
    "break"                           shift, and go to state 440
    "try"                             shift, and go to state 441
    "table"                           shift, and go to state 442
    "delete"                          shift, and go to state 443
    "deref"                           shift, and go to state 444
    "with"                            shift, and go to state 445
    "assume"                          shift, and go to state 446
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 449
    "continue"                        shift, and go to state 450
    "pass"                            shift, and go to state 451
    "reinterpret"                     shift, and go to state 452
    "label"                           shift, and go to state 453
    "goto"                            shift, and go to state 454
    "unsafe"                          shift, and go to state 455
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "yield"                           shift, and go to state 462
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 485
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    ';'                               shift, and go to state 497
    '{'                               shift, and go to state 498
    '}'                               shift, and go to state 499

    string_builder             go to state 500
    expr_reader                go to state 501
    expression_label           go to state 502
    expression_goto            go to state 503
    if_or_static_if            go to state 504
    expression_if_one_liner    go to state 505
    expression_if_then_else    go to state 506
    expression_for_loop        go to state 507
    expression_unsafe          go to state 508
    expression_while_loop      go to state 509
    expression_with            go to state 510
    expression_with_alias      go to state 511
    expr_call_pipe             go to state 512
    expression_any             go to state 513
    expr_keyword               go to state 514
    expression_keyword         go to state 515
    expr_pipe                  go to state 516
    name_in_namespace          go to state 517
    expression_delete          go to state 518
    expr_new                   go to state 519
    expression_break           go to state 520
    expression_continue        go to state 521
    expression_return_no_pipe  go to state 522
    expression_return          go to state 523
    expression_yield_no_pipe   go to state 524
    expression_yield           go to state 525
    expression_try_catch       go to state 526
    kwd_let                    go to state 527
    expression_let             go to state 528
    expr_cast                  go to state 529
    expr_type_decl             go to state 530
    expr_type_info             go to state 531
    block_or_lambda            go to state 532
    expr_full_block            go to state 533
    expr_numeric_const         go to state 534
    expr_assign                go to state 535
    expr_assign_pipe           go to state 536
    expr_named_call            go to state 537
    expr_method_call           go to state 538
    func_addr_expr             go to state 539
    expr_field                 go to state 540
    expr_call                  go to state 541
    expr                       go to state 542
    expr_mtag                  go to state 543
    basic_type_declaration     go to state 544
    make_decl                  go to state 545
    make_struct_decl           go to state 546
    make_tuple_call            go to state 547
    make_dim_decl              go to state 548
    make_table_decl            go to state 549
    array_comprehension        go to state 550


State 370

  606 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . $@43 enum_list $@44 '}'

    $default  reduce using rule 604 ($@43)

    $@43  go to state 551


State 371

  584 enum_list: enum_list . ';'
  585          | enum_list . "name" ';'
  586          | enum_list . "name" '=' expr ';'
  603 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@41 enum_list . $@42 '}'

    "name"  shift, and go to state 552
    ';'     shift, and go to state 553

    $default  reduce using rule 602 ($@42)

    $@42  go to state 554


State 372

  608 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 555


State 373

  611 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 611 (structure_name)


State 374

  618 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 523 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 556


State 375

  621 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list .

    $default  reduce using rule 621 (structure_declaration)


State 376

  574 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 557


State 377

  511 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 558


State 378

  563 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 562
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 379

  564 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 563


State 380

  565 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  566                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 564


State 381

  567 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  568                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'
  569                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 565


State 382

  561 optional_ref: '&' .

    $default  reduce using rule 561 (optional_ref)


State 383

  570 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  571                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 566
    ":="  shift, and go to state 567
    '='   shift, and go to state 568

    copy_or_move_or_clone  go to state 569


State 384

  684 type_declaration_no_options: "type" '<' . $@49 type_declaration '>' $@50

    $default  reduce using rule 682 ($@49)

    $@49  go to state 570


State 385

  707 type_declaration_no_options: "array" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 705 ($@54)

    $@54  go to state 571


State 386

  710 type_declaration_no_options: "table" '<' . $@56 table_type_pair '>' $@57

    $default  reduce using rule 708 ($@56)

    $@56  go to state 572


State 387

  685 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 573
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 388

  713 type_declaration_no_options: "iterator" '<' . $@58 type_declaration '>' $@59

    $default  reduce using rule 711 ($@58)

    $@58  go to state 574


State 389

  703 type_declaration_no_options: "smart_ptr" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 701 ($@52)

    $@52  go to state 575


State 390

  662 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 576


State 391

  671 bitfield_type_declaration: "bitfield" '<' . $@47 bitfield_bits '>' $@48

    $default  reduce using rule 669 ($@47)

    $@47  go to state 577


State 392

  717 type_declaration_no_options: "block" '<' . $@60 type_declaration '>' $@61
  720                            | "block" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 718 ($@62)
    '>'       reduce using rule 718 ($@62)
    '('       reduce using rule 718 ($@62)
    $default  reduce using rule 715 ($@60)

    $@60  go to state 578
    $@62  go to state 579


State 393

  724 type_declaration_no_options: "function" '<' . $@64 type_declaration '>' $@65
  727                            | "function" '<' . $@66 optional_function_argument_list optional_function_type '>' $@67

    ':'       reduce using rule 725 ($@66)
    '>'       reduce using rule 725 ($@66)
    '('       reduce using rule 725 ($@66)
    $default  reduce using rule 722 ($@64)

    $@64  go to state 580
    $@66  go to state 581


State 394

  731 type_declaration_no_options: "lambda" '<' . $@68 type_declaration '>' $@69
  734                            | "lambda" '<' . $@70 optional_function_argument_list optional_function_type '>' $@71

    ':'       reduce using rule 732 ($@70)
    '>'       reduce using rule 732 ($@70)
    '('       reduce using rule 732 ($@70)
    $default  reduce using rule 729 ($@68)

    $@68  go to state 582
    $@70  go to state 583


State 395

  737 type_declaration_no_options: "tuple" '<' . $@72 tuple_type_list '>' $@73

    $default  reduce using rule 735 ($@72)

    $@72  go to state 584


State 396

  740 type_declaration_no_options: "variant" '<' . $@74 variant_type_list '>' $@75

    $default  reduce using rule 738 ($@74)

    $@74  go to state 585


State 397

  663 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 586
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 398

  686 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  688                            | '$' name_in_namespace . '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 587
    '('  shift, and go to state 588


State 399

  691 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 691 (type_declaration_no_options)


State 400

  696 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 696 (type_declaration_no_options)


State 401

  690 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 690 (type_declaration_no_options)


State 402

  698 type_declaration_no_options: type_declaration_no_options "==" . "const"
  699                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 589
    '&'      shift, and go to state 590


State 403

  704 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 704 (type_declaration_no_options)


State 404

  700 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 700 (type_declaration_no_options)


State 405

  693 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 693 (type_declaration_no_options)


State 406

  689 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  692                            | type_declaration_no_options '-' . "const"
  694                            | type_declaration_no_options '-' . '&'
  697                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 591
    '&'      shift, and go to state 592
    '['      shift, and go to state 593
    '#'      shift, and go to state 594


State 407

  674 dim_list: '[' . expr ']'
  681 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    ']'                               shift, and go to state 595
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 596
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 408

  695 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 695 (type_declaration_no_options)


State 409

  675 dim_list: dim_list . '[' expr ']'
  680 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 597

    '['       [reduce using rule 680 (type_declaration_no_options)]
    $default  reduce using rule 680 (type_declaration_no_options)


State 410

  742 type_declaration: type_declaration '|' . type_declaration_no_options
  743                 | type_declaration '|' . '#'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344
    '#'          shift, and go to state 598

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 599


State 411

  667 bitfield_alias_bits: bitfield_alias_bits . ';'
  668                    | bitfield_alias_bits . "name" ';'
  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 '{' $@86 bitfield_alias_bits . $@87 '}'

    "name"  shift, and go to state 600
    ';'     shift, and go to state 601

    $default  reduce using rule 757 ($@87)

    $@87  go to state 602


State 412

  541 tuple_alias_type_list: tuple_alias_type_list . ';'
  542                      | tuple_alias_type_list . tuple_type ';'
  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 '{' $@78 tuple_alias_type_list . $@79 '}'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 603
    '$'          shift, and go to state 344
    ';'          shift, and go to state 604

    $default  reduce using rule 747 ($@79)

    name_in_namespace            go to state 345
    tuple_type                   go to state 605
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 606
    $@79                         go to state 607


State 413

  547 variant_alias_type_list: variant_alias_type_list . ';'
  548                        | variant_alias_type_list . variant_type ';'
  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 '{' $@82 variant_alias_type_list . $@83 '}'

    "name"  shift, and go to state 608
    ';'     shift, and go to state 609

    $default  reduce using rule 752 ($@83)

    variant_type  go to state 610
    $@83          go to state 611


State 414

  183 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 183 (function_name)


State 415

  173 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 173 (function_name)


State 416

  533 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 612
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 417

  532 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_declaration         go to state 613
    variable_name_with_pos_list  go to state 421


State 418

  623 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 614


State 419

  622 variable_name_with_pos_list: "name" .
  624                            | "name" . "aka" "name"

    "aka"  shift, and go to state 615

    $default  reduce using rule 622 (variable_name_with_pos_list)


State 420

  531 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 531 (function_argument_declaration)


State 421

  551 variable_declaration: variable_name_with_pos_list .
  552                     | variable_name_with_pos_list . '&'
  553                     | variable_name_with_pos_list . ':' type_declaration
  554                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  555                     | variable_name_with_pos_list . copy_or_move expr
  556                     | variable_name_with_pos_list . copy_or_move expr_pipe
  625 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  626                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 616
    ','   shift, and go to state 617
    '='   shift, and go to state 618
    ':'   shift, and go to state 619
    '&'   shift, and go to state 620

    $default  reduce using rule 551 (variable_declaration)

    copy_or_move  go to state 621


State 422

  121 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 121 (optional_function_argument_list)


State 423

  535 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218

    $default  reduce using rule 510 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 622


State 424

  123 optional_function_type: ':' type_declaration .
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 123 (optional_function_type)


State 425

  243 expressions: expressions error .

    $default  reduce using rule 243 (expressions)


State 426

  796 make_struct_decl: "struct" . '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    '<'  shift, and go to state 623


State 427

  799 make_struct_decl: "class" . '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    '<'  shift, and go to state 624


State 428

   78 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 625
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 429

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 430

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 431

   76 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 75 ($@4)

    $@4  go to state 626


State 432

  416 expr: "true" .

    $default  reduce using rule 416 (expr)


State 433

  417 expr: "false" .

    $default  reduce using rule 417 (expr)


State 434

  271 expr_new: "new" . new_type_declaration
  272         | "new" . new_type_declaration '(' ')'
  273         | "new" . new_type_declaration '(' expr_list ')'
  274         | "new" . new_type_declaration '(' make_struct_dim ')'
  275         | "new" . make_decl

    "struct"       shift, and go to state 426
    "class"        shift, and go to state 427
    "array"        shift, and go to state 437
    "table"        shift, and go to state 442
    "fixed_array"  shift, and go to state 456
    "default"      shift, and go to state 457
    "tuple"        shift, and go to state 459
    "variant"      shift, and go to state 460
    "::"           shift, and go to state 58
    "[["           shift, and go to state 475
    "[{"           shift, and go to state 476
    "{{"           shift, and go to state 477
    "name"         shift, and go to state 59
    '<'            shift, and go to state 627
    '['            shift, and go to state 493
    '{'            shift, and go to state 498

    name_in_namespace           go to state 345
    new_type_declaration        go to state 628
    structure_type_declaration  go to state 629
    make_decl                   go to state 630
    make_struct_decl            go to state 546
    make_tuple_call             go to state 547
    make_dim_decl               go to state 548
    make_table_decl             go to state 549
    array_comprehension         go to state 550


State 435

  314 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  315               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  316               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 631


State 436

  313 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 632


State 437

  820 make_dim_decl: "array" . '(' expr_list optional_comma ')'
  823              | "array" . '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 633
    '('  shift, and go to state 634


State 438

  278 expression_return_no_pipe: "return" .
  279                          | "return" . expr_list
  280                          | "return" . "<-" expr_list
  282 expression_return: "return" . expr_pipe
  283                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 635
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 278 (expression_return_no_pipe)

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 636
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 637
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 639
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 439

  410 expr: "null" .

    $default  reduce using rule 410 (expr)


State 440

  276 expression_break: "break" .

    $default  reduce using rule 276 (expression_break)


State 441

  289 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 640


State 442

  834 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  835                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  836                | "table" . '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 641
    '('  shift, and go to state 642


State 443

  265 expression_delete: "delete" . expr
  266                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "explicit"                        shift, and go to state 643
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 644
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 444

  460 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 645


State 445

   79 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 646
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 446

   81 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 647


State 447

  304 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 648


State 448

  307 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 649


State 449

  461 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 650


State 450

  277 expression_continue: "continue" .

    $default  reduce using rule 277 (expression_continue)


State 451

  240 expression_any: "pass" . ';'

    ';'  shift, and go to state 651


State 452

  310 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 652


State 453

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 653


State 454

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "label"                           shift, and go to state 654
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 655
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 455

   77 expression_unsafe: "unsafe" . expression_block
  492 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 656
    '{'  shift, and go to state 284

    expression_block  go to state 657


State 456

  824 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  827              | "fixed_array" . '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 658
    '('  shift, and go to state 659


State 457

  805 make_struct_decl: "default" . '<' $@94 type_declaration_no_options '>' $@95

    '<'  shift, and go to state 660


State 458

  653 basic_type_declaration: "bitfield" .

    $default  reduce using rule 653 (basic_type_declaration)


State 459

  811 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  814                | "tuple" . '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

    '<'  shift, and go to state 661
    '('  shift, and go to state 662


State 460

  802 make_struct_decl: "variant" . '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    '<'  shift, and go to state 663


State 461

  462 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  463     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 664


State 462

  284 expression_yield_no_pipe: "yield" . expr
  285                         | "yield" . "<-" expr
  287 expression_yield: "yield" . expr_pipe
  288                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 665
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 666
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 667
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 463

  446 expr: "++" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 668
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 464

  447 expr: "--" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 669
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 465

  260 expr_pipe: "$ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 673


State 466

  258 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 674


State 467

  259 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 675


State 468

  494 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 676


State 469

  495 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 677


State 470

  496 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 678


State 471

  497 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 679


State 472

  498 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 680


State 473

  500 expr_mtag: "$c" . '(' expr ')' '(' ')'
  501          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 681


State 474

  499 expr_mtag: "..." .

    $default  reduce using rule 499 (expr_mtag)


State 475

  788 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  789                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  790                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  791                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  818 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  842 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 682
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 683


State 476

  792 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  793                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  819 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  843 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 684
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 685


State 477

  833 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  845 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 686
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 688
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table              go to state 689
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 478

  338 expr_numeric_const: "integer constant" .

    $default  reduce using rule 338 (expr_numeric_const)


State 479

  340 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 340 (expr_numeric_const)


State 480

  339 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 339 (expr_numeric_const)


State 481

  341 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 341 (expr_numeric_const)


State 482

  342 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 342 (expr_numeric_const)


State 483

  343 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 343 (expr_numeric_const)


State 484

  344 expr_numeric_const: "double constant" .

    $default  reduce using rule 344 (expr_numeric_const)


State 485

  244 expr_keyword: "keyword" . expr expression_block
  253 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '<'                               shift, and go to state 690
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 691
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 486

  256 expression_keyword: "type function" . '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    '<'  shift, and go to state 692


State 487

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 693


State 488

  423 expr: '-' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 694
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 489

  422 expr: '+' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 695
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 490

  459 expr: '*' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 696
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 491

  421 expr: '~' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 697
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 492

  420 expr: '!' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 698
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 493

  817 make_dim_decl: '[' . expr_list optional_comma ']'
  841 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 700
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 494

  450 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 702
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 495

  322 block_or_lambda: '$' .

    $default  reduce using rule 322 (block_or_lambda)


State 496

  323 block_or_lambda: '@' .
  324                | '@' . '@'
  391 func_addr_expr: '@' . '@' func_addr_name
  394               | '@' . '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  397               | '@' . '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  509 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 703

    $default  reduce using rule 323 (block_or_lambda)


State 497

  220 expression_any: ';' .

    $default  reduce using rule 220 (expression_any)


State 498

  832 make_table_decl: '{' . expr_map_tuple_list optional_comma '}'
  844 array_comprehension: '{' . "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 704
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 705
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    expr_map_tuple_list     go to state 706
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 499

  216 expression_block: '{' expressions '}' .
  217                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 707

    $default  reduce using rule 216 (expression_block)


State 500

  414 expr: string_builder .

    $default  reduce using rule 414 (expr)


State 501

  413 expr: expr_reader .

    $default  reduce using rule 413 (expr)


State 502

  238 expression_any: expression_label . ';'

    ';'  shift, and go to state 708


State 503

  239 expression_any: expression_goto . ';'

    ';'  shift, and go to state 709


State 504

   72 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 710
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 505

   74 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner ';'

    "if"  shift, and go to state 711


State 506

  236 expression_any: expression_if_then_else .

    $default  reduce using rule 236 (expression_any)


State 507

  231 expression_any: expression_for_loop .

    $default  reduce using rule 231 (expression_any)


State 508

  228 expression_any: expression_unsafe .

    $default  reduce using rule 228 (expression_any)


State 509

  227 expression_any: expression_while_loop .

    $default  reduce using rule 227 (expression_any)


State 510

  229 expression_any: expression_with .

    $default  reduce using rule 229 (expression_any)


State 511

  230 expression_any: expression_with_alias .

    $default  reduce using rule 230 (expression_any)


State 512

  261 expr_pipe: expr_call_pipe .

    $default  reduce using rule 261 (expr_pipe)


State 513

  242 expressions: expressions expression_any .

    $default  reduce using rule 242 (expressions)


State 514

  222 expression_any: expr_keyword .

    $default  reduce using rule 222 (expression_any)


State 515

  219 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  493 expr: expression_keyword .

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670

    '$'       [reduce using rule 493 (expr)]
    '@'       [reduce using rule 493 (expr)]
    $default  reduce using rule 493 (expr)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 713


State 516

  221 expression_any: expr_pipe .

    $default  reduce using rule 221 (expression_any)


State 517

  385 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  386                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  405 expr_call: name_in_namespace . '(' ')'
  406          | name_in_namespace . '(' make_struct_dim ')'
  407          | name_in_namespace . '(' expr_list ')'
  411 expr: name_in_namespace .
  491     | name_in_namespace . "name"

    "name"  shift, and go to state 714
    '('     shift, and go to state 715

    "name"    [reduce using rule 411 (expr)]
    '('       [reduce using rule 411 (expr)]
    $default  reduce using rule 411 (expr)


State 518

  225 expression_any: expression_delete . ';'

    ';'  shift, and go to state 716


State 519

  484 expr: expr_new .

    $default  reduce using rule 484 (expr)


State 520

   70 expression_if_one_liner: expression_break .
  232 expression_any: expression_break . ';'

    ';'  shift, and go to state 717

    $default  reduce using rule 70 (expression_if_one_liner)


State 521

   71 expression_if_one_liner: expression_continue .
  233 expression_any: expression_continue . ';'

    ';'  shift, and go to state 718

    $default  reduce using rule 71 (expression_if_one_liner)


State 522

   68 expression_if_one_liner: expression_return_no_pipe .
  281 expression_return: expression_return_no_pipe . ';'

    ';'  shift, and go to state 719

    $default  reduce using rule 68 (expression_if_one_liner)


State 523

  234 expression_any: expression_return .

    $default  reduce using rule 234 (expression_any)


State 524

   69 expression_if_one_liner: expression_yield_no_pipe .
  286 expression_yield: expression_yield_no_pipe . ';'

    ';'  shift, and go to state 720

    $default  reduce using rule 69 (expression_if_one_liner)


State 525

  235 expression_any: expression_yield .

    $default  reduce using rule 235 (expression_any)


State 526

  237 expression_any: expression_try_catch .

    $default  reduce using rule 237 (expression_any)


State 527

  300 expression_let: kwd_let . optional_in_scope let_variable_declaration
  301               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 721

    $default  reduce using rule 293 (optional_in_scope)

    optional_in_scope  go to state 722


State 528

  226 expression_any: expression_let .

    $default  reduce using rule 226 (expression_any)


State 529

  483 expr: expr_cast .

    $default  reduce using rule 483 (expr)


State 530

  482 expr: expr_type_decl .

    $default  reduce using rule 482 (expr)


State 531

  481 expr: expr_type_info .

    $default  reduce using rule 481 (expr)


State 532

  335 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 723


State 533

  487 expr: expr_full_block .

    $default  reduce using rule 487 (expr)


State 534

  412 expr: expr_numeric_const .

    $default  reduce using rule 412 (expr)


State 535

  224 expression_any: expr_assign . ';'
  257 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 724
    ';'    shift, and go to state 725


State 536

  223 expression_any: expr_assign_pipe .

    $default  reduce using rule 223 (expression_any)


State 537

  486 expr: expr_named_call .

    $default  reduce using rule 486 (expr)


State 538

  485 expr: expr_method_call .

    $default  reduce using rule 485 (expr)


State 539

  457 expr: func_addr_expr .

    $default  reduce using rule 457 (expr)


State 540

  418 expr: expr_field .

    $default  reduce using rule 418 (expr)


State 541

  458 expr: expr_call .

    $default  reduce using rule 458 (expr)


State 542

   67 expression_if_one_liner: expr .
  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  345 expr_assign: expr .
  346            | expr . '=' expr
  347            | expr . "<-" expr
  348            | expr . ":=" expr
  349            | expr . "&=" expr
  350            | expr . "|=" expr
  351            | expr . "^=" expr
  352            | expr . "&&=" expr
  353            | expr . "||=" expr
  354            | expr . "^^=" expr
  355            | expr . "+=" expr
  356            | expr . "-=" expr
  357            | expr . "*=" expr
  358            | expr . "/=" expr
  359            | expr . "%=" expr
  360            | expr . "<<=" expr
  361            | expr . ">>=" expr
  362            | expr . "<<<=" expr
  363            | expr . ">>>=" expr
  368 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  369                 | expr . "<-" expr_assign_pipe_right
  370                 | expr . "&=" expr_assign_pipe_right
  371                 | expr . "|=" expr_assign_pipe_right
  372                 | expr . "^=" expr_assign_pipe_right
  373                 | expr . "&&=" expr_assign_pipe_right
  374                 | expr . "||=" expr_assign_pipe_right
  375                 | expr . "^^=" expr_assign_pipe_right
  376                 | expr . "+=" expr_assign_pipe_right
  377                 | expr . "-=" expr_assign_pipe_right
  378                 | expr . "*=" expr_assign_pipe_right
  379                 | expr . "/=" expr_assign_pipe_right
  380                 | expr . "%=" expr_assign_pipe_right
  381                 | expr . "<<=" expr_assign_pipe_right
  382                 | expr . ">>=" expr_assign_pipe_right
  383                 | expr . "<<<=" expr_assign_pipe_right
  384                 | expr . ">>>=" expr_assign_pipe_right
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 728
    "-="    shift, and go to state 729
    "/="    shift, and go to state 730
    "*="    shift, and go to state 731
    "%="    shift, and go to state 732
    "&="    shift, and go to state 733
    "|="    shift, and go to state 734
    "^="    shift, and go to state 735
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 741
    ">>="   shift, and go to state 742
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 747
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 756
    ">>>="  shift, and go to state 757
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 761
    "||="   shift, and go to state 762
    "^^="   shift, and go to state 763
    ".."    shift, and go to state 764
    '='     shift, and go to state 765
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670

    "if"      reduce using rule 67 (expression_if_one_liner)
    $default  reduce using rule 345 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 543

  419 expr: expr_mtag .

    $default  reduce using rule 419 (expr)


State 544

  408 expr_call: basic_type_declaration . '(' ')'
  409          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 780


State 545

  415 expr: make_decl .

    $default  reduce using rule 415 (expr)


State 546

  759 make_decl: make_struct_decl .

    $default  reduce using rule 759 (make_decl)


State 547

  763 make_decl: make_tuple_call .

    $default  reduce using rule 763 (make_decl)


State 548

  760 make_decl: make_dim_decl .

    $default  reduce using rule 760 (make_decl)


State 549

  761 make_decl: make_table_decl .

    $default  reduce using rule 761 (make_decl)


State 550

  762 make_decl: array_comprehension .

    $default  reduce using rule 762 (make_decl)


State 551

  606 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@43 . enum_list $@44 '}'

    $default  reduce using rule 583 (enum_list)

    enum_list  go to state 781


State 552

  585 enum_list: enum_list "name" . ';'
  586          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 782
    ';'  shift, and go to state 783


State 553

  584 enum_list: enum_list ';' .

    $default  reduce using rule 584 (enum_list)


State 554

  603 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@41 enum_list $@42 . '}'

    '}'  shift, and go to state 784


State 555

  608 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 608 (optional_structure_parent)


State 556

  525 struct_variable_declaration_list: struct_variable_declaration_list . $@34 structure_variable_declaration ';'
  527                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header ';'
  529                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  530                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  618 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 785
    '}'  shift, and go to state 786

    "def"     reduce using rule 117 (optional_annotation_list)
    $default  reduce using rule 524 ($@34)

    optional_annotation_list  go to state 787
    $@34                      go to state 788


State 557

  574 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 574 (global_variable_declaration_list)


State 558

  511 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 511 (optional_field_annotation)


State 559

  492 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 656


State 560

  253 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    '<'  shift, and go to state 690


State 561

  493 expr: expression_keyword .

    $default  reduce using rule 493 (expr)


State 562

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  563 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 789


State 563

  564 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 564 (let_variable_name_with_pos_list)


State 564

  565 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  566                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 790

    $default  reduce using rule 565 (let_variable_name_with_pos_list)


State 565

  567 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  568                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  569                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 566
    "??"        shift, and go to state 403
    ":="        shift, and go to state 567
    '='         shift, and go to state 568
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    ';'         shift, and go to state 791
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 792
    dim_list               go to state 409


State 566

  558 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 558 (copy_or_move_or_clone)


State 567

  559 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 559 (copy_or_move_or_clone)


State 568

  557 copy_or_move_or_clone: '=' .

    $default  reduce using rule 557 (copy_or_move_or_clone)


State 569

  570 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  571                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 793
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 794
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 570

  684 type_declaration_no_options: "type" '<' $@49 . type_declaration '>' $@50

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 795


State 571

  707 type_declaration_no_options: "array" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 796


State 572

  710 type_declaration_no_options: "table" '<' $@56 . table_type_pair '>' $@57

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    table_type_pair              go to state 797
    type_declaration_no_options  go to state 350
    type_declaration             go to state 798


State 573

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  685 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 799


State 574

  713 type_declaration_no_options: "iterator" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 800


State 575

  703 type_declaration_no_options: "smart_ptr" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 801


State 576

  662 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 802


State 577

  671 bitfield_type_declaration: "bitfield" '<' $@47 . bitfield_bits '>' $@48

    "name"  shift, and go to state 803

    bitfield_bits  go to state 804


State 578

  717 type_declaration_no_options: "block" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 805


State 579

  720 type_declaration_no_options: "block" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 806


State 580

  724 type_declaration_no_options: "function" '<' $@64 . type_declaration '>' $@65

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 807


State 581

  727 type_declaration_no_options: "function" '<' $@66 . optional_function_argument_list optional_function_type '>' $@67

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 808


State 582

  731 type_declaration_no_options: "lambda" '<' $@68 . type_declaration '>' $@69

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 809


State 583

  734 type_declaration_no_options: "lambda" '<' $@70 . optional_function_argument_list optional_function_type '>' $@71

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 810


State 584

  737 type_declaration_no_options: "tuple" '<' $@72 . tuple_type_list '>' $@73

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 603
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 811
    tuple_type_list              go to state 812
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 606


State 585

  740 type_declaration_no_options: "variant" '<' $@74 . variant_type_list '>' $@75

    "name"  shift, and go to state 608

    variant_type       go to state 813
    variant_type_list  go to state 814


State 586

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  663 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 815


State 587

  688 type_declaration_no_options: '$' name_in_namespace '<' . $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 687 ($@51)

    $@51  go to state 816


State 588

  686 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 245 (optional_expr_list)

    string_builder          go to state 500
    expr_reader             go to state 501
    optional_expr_list      go to state 817
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 818
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 589

  698 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 698 (type_declaration_no_options)


State 590

  699 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 699 (type_declaration_no_options)


State 591

  692 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 692 (type_declaration_no_options)


State 592

  694 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 694 (type_declaration_no_options)


State 593

  689 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 819


State 594

  697 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 697 (type_declaration_no_options)


State 595

  681 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 681 (type_declaration_no_options)


State 596

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  674 dim_list: '[' expr . ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 820


State 597

  675 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 821
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 598

  743 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 743 (type_declaration)


State 599

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  742 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 742 (type_declaration)

    dim_list  go to state 409


State 600

  668 bitfield_alias_bits: bitfield_alias_bits "name" . ';'

    ';'  shift, and go to state 822


State 601

  667 bitfield_alias_bits: bitfield_alias_bits ';' .

    $default  reduce using rule 667 (bitfield_alias_bits)


State 602

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 '{' $@86 bitfield_alias_bits $@87 . '}'

    '}'  shift, and go to state 823


State 603

  262 name_in_namespace: "name" .
  263                  | "name" . "::" "name"
  537 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 98
    ':'   shift, and go to state 824

    $default  reduce using rule 262 (name_in_namespace)


State 604

  541 tuple_alias_type_list: tuple_alias_type_list ';' .

    $default  reduce using rule 541 (tuple_alias_type_list)


State 605

  542 tuple_alias_type_list: tuple_alias_type_list tuple_type . ';'

    ';'  shift, and go to state 825


State 606

  536 tuple_type: type_declaration .
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 536 (tuple_type)


State 607

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 '{' $@78 tuple_alias_type_list $@79 . '}'

    '}'  shift, and go to state 826


State 608

  543 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 827


State 609

  547 variant_alias_type_list: variant_alias_type_list ';' .

    $default  reduce using rule 547 (variant_alias_type_list)


State 610

  548 variant_alias_type_list: variant_alias_type_list variant_type . ';'

    ';'  shift, and go to state 828


State 611

  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 '{' $@82 variant_alias_type_list $@83 . '}'

    '}'  shift, and go to state 829


State 612

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  533 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 830


State 613

  532 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 532 (function_argument_declaration)


State 614

  623 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 831
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 615

  624 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 832


State 616

  550 copy_or_move: "<-" .

    $default  reduce using rule 550 (copy_or_move)


State 617

  625 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  626                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 833


State 618

  549 copy_or_move: '=' .

    $default  reduce using rule 549 (copy_or_move)


State 619

  553 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  554                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 834


State 620

  552 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 552 (variable_declaration)


State 621

  555 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  556                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 835
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 836
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 622

  535 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 535 (function_argument_list)


State 623

  796 make_struct_decl: "struct" '<' . $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    $default  reduce using rule 794 ($@88)

    $@88  go to state 837


State 624

  799 make_struct_decl: "class" '<' . $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    $default  reduce using rule 797 ($@90)

    $@90  go to state 838


State 625

   78 expression_while_loop: "while" expr . expression_block
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '{'    shift, and go to state 284

    expression_block  go to state 839


State 626

   76 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 840


State 627

  269 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 267 ($@11)

    $@11  go to state 841


State 628

  271 expr_new: "new" new_type_declaration .
  272         | "new" new_type_declaration . '(' ')'
  273         | "new" new_type_declaration . '(' expr_list ')'
  274         | "new" new_type_declaration . '(' make_struct_dim ')'

    '('  shift, and go to state 842

    '('       [reduce using rule 271 (expr_new)]
    $default  reduce using rule 271 (expr_new)


State 629

  270 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 270 (new_type_declaration)


State 630

  275 expr_new: "new" make_decl .

    $default  reduce using rule 275 (expr_new)


State 631

  314 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  315               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  316               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 843


State 632

  313 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 311 ($@19)

    $@19  go to state 844


State 633

  823 make_dim_decl: "array" '<' . $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    $default  reduce using rule 821 ($@98)

    $@98  go to state 845


State 634

  820 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 846
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 635

  280 expression_return_no_pipe: "return" "<-" . expr_list
  283 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 847
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 848
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 639
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 636

  282 expression_return: "return" expr_pipe .

    $default  reduce using rule 282 (expression_return)


State 637

  279 expression_return_no_pipe: "return" expr_list .
  318 expr_list: expr_list . ',' expr

    ','  shift, and go to state 849

    $default  reduce using rule 279 (expression_return_no_pipe)


State 638

  257 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 724


State 639

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  317 expr_list: expr .
  345 expr_assign: expr .
  346            | expr . '=' expr
  347            | expr . "<-" expr
  348            | expr . ":=" expr
  349            | expr . "&=" expr
  350            | expr . "|=" expr
  351            | expr . "^=" expr
  352            | expr . "&&=" expr
  353            | expr . "||=" expr
  354            | expr . "^^=" expr
  355            | expr . "+=" expr
  356            | expr . "-=" expr
  357            | expr . "*=" expr
  358            | expr . "/=" expr
  359            | expr . "%=" expr
  360            | expr . "<<=" expr
  361            | expr . ">>=" expr
  362            | expr . "<<<=" expr
  363            | expr . ">>>=" expr
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 850
    "-="    shift, and go to state 851
    "/="    shift, and go to state 852
    "*="    shift, and go to state 853
    "%="    shift, and go to state 854
    "&="    shift, and go to state 855
    "|="    shift, and go to state 856
    "^="    shift, and go to state 857
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 858
    ">>="   shift, and go to state 859
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 860
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 861
    ">>>="  shift, and go to state 862
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 863
    "||="   shift, and go to state 864
    "^^="   shift, and go to state 865
    ".."    shift, and go to state 764
    '='     shift, and go to state 866
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670

    " <|"     reduce using rule 345 (expr_assign)
    $default  reduce using rule 317 (expr_list)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 640

  289 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 867


State 641

  835 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  836                | "table" '<' . type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 868


State 642

  834 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 705
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    expr_map_tuple_list     go to state 869
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 643

  266 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 870
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 644

  265 expression_delete: "delete" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 265 (expression_delete)


State 645

  460 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 871
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 646

   79 expression_with: "with" expr . expression_block
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '{'    shift, and go to state 284

    expression_block  go to state 872


State 647

   81 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 873


State 648

  304 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 302 ($@13)

    $@13  go to state 874


State 649

  307 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 305 ($@15)

    $@15  go to state 875


State 650

  461 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 876
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 651

  240 expression_any: "pass" ';' .

    $default  reduce using rule 240 (expression_any)


State 652

  310 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 308 ($@17)

    $@17  go to state 877


State 653

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 878


State 654

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 879


State 655

   56 expression_goto: "goto" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 56 (expression_goto)


State 656

  492 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 880
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 657

   77 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 77 (expression_unsafe)


State 658

  827 make_dim_decl: "fixed_array" '<' . $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

    $default  reduce using rule 825 ($@100)

    $@100  go to state 881


State 659

  824 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 882
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 660

  805 make_struct_decl: "default" '<' . $@94 type_declaration_no_options '>' $@95

    $default  reduce using rule 803 ($@94)

    $@94  go to state 883


State 661

  814 make_tuple_call: "tuple" '<' . $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

    $default  reduce using rule 812 ($@96)

    $@96  go to state 884


State 662

  811 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 885
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 663

  802 make_struct_decl: "variant" '<' . $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    $default  reduce using rule 800 ($@92)

    $@92  go to state 886


State 664

  462 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  463     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 887


State 665

  285 expression_yield_no_pipe: "yield" "<-" . expr
  288 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 888
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 889
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 666

  287 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 287 (expression_yield)


State 667

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  284 expression_yield_no_pipe: "yield" expr .
  345 expr_assign: expr .
  346            | expr . '=' expr
  347            | expr . "<-" expr
  348            | expr . ":=" expr
  349            | expr . "&=" expr
  350            | expr . "|=" expr
  351            | expr . "^=" expr
  352            | expr . "&&=" expr
  353            | expr . "||=" expr
  354            | expr . "^^=" expr
  355            | expr . "+=" expr
  356            | expr . "-=" expr
  357            | expr . "*=" expr
  358            | expr . "/=" expr
  359            | expr . "%=" expr
  360            | expr . "<<=" expr
  361            | expr . ">>=" expr
  362            | expr . "<<<=" expr
  363            | expr . ">>>=" expr
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 850
    "-="    shift, and go to state 851
    "/="    shift, and go to state 852
    "*="    shift, and go to state 853
    "%="    shift, and go to state 854
    "&="    shift, and go to state 855
    "|="    shift, and go to state 856
    "^="    shift, and go to state 857
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 858
    ">>="   shift, and go to state 859
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 860
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 861
    ">>>="  shift, and go to state 862
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 863
    "||="   shift, and go to state 864
    "^^="   shift, and go to state 865
    ".."    shift, and go to state 764
    '='     shift, and go to state 866
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670

    " <|"     reduce using rule 345 (expr_assign)
    $default  reduce using rule 284 (expression_yield_no_pipe)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 668

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  446     | "++" expr .
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 446 (expr)


State 669

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  447     | "--" expr .
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 447 (expr)


State 670

  323 block_or_lambda: '@' .
  324                | '@' . '@'

    '@'  shift, and go to state 890

    $default  reduce using rule 323 (block_or_lambda)


State 671

  333 expr_block: expression_block .

    $default  reduce using rule 333 (expr_block)


State 672

  334 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 891


State 673

  260 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 260 (expr_pipe)


State 674

  258 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 258 (expr_pipe)


State 675

  259 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 259 (expr_pipe)


State 676

  494 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 892
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 677

  495 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 893
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 678

  496 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 894
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 679

  497 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 895
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 680

  498 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 896
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 681

  500 expr_mtag: "$c" '(' . expr ')' '(' ')'
  501          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 897
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 682

  842 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 898


State 683

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  788 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  789                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  790                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  791                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  818 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "const"                           shift, and go to state 399
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "where"                           shift, and go to state 899
    "reinterpret"                     shift, and go to state 452
    "implicit"                        shift, and go to state 400
    "explicit"                        shift, and go to state 401
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "=="                              shift, and go to state 402
    "??"                              shift, and go to state 403
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 900
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 901
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '?'                               shift, and go to state 404
    '&'                               shift, and go to state 405
    '-'                               shift, and go to state 902
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 903
    '('                               shift, and go to state 904
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498
    '#'                               shift, and go to state 408

    $default  reduce using rule 774 (optional_block)

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 905
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    dim_list                go to state 409
    make_decl               go to state 545
    make_struct_fields      go to state 906
    make_struct_dim         go to state 907
    optional_block          go to state 908
    make_struct_decl        go to state 546
    make_tuple              go to state 909
    make_tuple_call         go to state 547
    make_dim                go to state 910
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 684

  843 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 911


State 685

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  792 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  793                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  819 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "const"                           shift, and go to state 399
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "implicit"                        shift, and go to state 400
    "explicit"                        shift, and go to state 401
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "=="                              shift, and go to state 402
    "??"                              shift, and go to state 403
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 900
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 901
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '?'                               shift, and go to state 404
    '&'                               shift, and go to state 405
    '-'                               shift, and go to state 902
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 903
    '('                               shift, and go to state 912
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498
    '#'                               shift, and go to state 408

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 905
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    dim_list                go to state 409
    make_decl               go to state 545
    make_struct_fields      go to state 906
    make_struct_dim         go to state 913
    make_struct_decl        go to state 546
    make_tuple              go to state 909
    make_tuple_call         go to state 547
    make_dim                go to state 914
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 686

  845 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 915


State 687

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  809 make_map_tuple: expr . "=>" expr
  810               | expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "=>"   shift, and go to state 916
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 810 (make_map_tuple)


State 688

  828 make_table: make_map_tuple .

    $default  reduce using rule 828 (make_table)


State 689

  829 make_table: make_table . ';' make_map_tuple
  833 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    ";}}"  shift, and go to state 917
    ';'    shift, and go to state 918
    '}'    shift, and go to state 919

    optional_trailing_semicolon_cur_cur  go to state 920


State 690

  253 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options_list '>' $@8 expr

    $default  reduce using rule 251 ($@7)

    $@7  go to state 921


State 691

  244 expr_keyword: "keyword" expr . expression_block
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '{'    shift, and go to state 284

    expression_block  go to state 922


State 692

  256 expression_keyword: "type function" '<' . $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    $default  reduce using rule 254 ($@9)

    $@9  go to state 923


State 693

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 924
    "{"                   shift, and go to state 925

    character_sequence  go to state 926


State 694

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  423 expr: '-' expr .
  424     | expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 423 (expr)


State 695

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  422 expr: '+' expr .
  424     | expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 422 (expr)


State 696

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  459     | '*' expr .
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 459 (expr)


State 697

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  421 expr: '~' expr .
  424     | expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 421 (expr)


State 698

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  420 expr: '!' expr .
  424     | expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 420 (expr)


State 699

  841 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 927


State 700

  318 expr_list: expr_list . ',' expr
  817 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 928

    $default  reduce using rule 839 (optional_comma)

    optional_comma  go to state 929


State 701

  317 expr_list: expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 317 (expr_list)


State 702

  318 expr_list: expr_list . ',' expr
  450 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 928

    $default  reduce using rule 839 (optional_comma)

    optional_comma  go to state 930


State 703

  324 block_or_lambda: '@' '@' .
  391 func_addr_expr: '@' '@' . func_addr_name
  394               | '@' '@' . '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  397               | '@' '@' . '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  509 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 931
    "$c"    shift, and go to state 932
    "name"  shift, and go to state 59
    '<'     shift, and go to state 933

    $default  reduce using rule 324 (block_or_lambda)

    name_in_namespace  go to state 934
    func_addr_name     go to state 935


State 704

  844 array_comprehension: '{' "for" . variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 936


State 705

  830 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 830 (expr_map_tuple_list)


State 706

  831 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  832 make_table_decl: '{' expr_map_tuple_list . optional_comma '}'

    ','  shift, and go to state 937

    $default  reduce using rule 839 (optional_comma)

    optional_comma  go to state 938


State 707

  217 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 939


State 708

  238 expression_any: expression_label ';' .

    $default  reduce using rule 238 (expression_any)


State 709

  239 expression_any: expression_goto ';' .

    $default  reduce using rule 239 (expression_any)


State 710

   72 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '{'    shift, and go to state 284

    expression_block  go to state 940


State 711

   74 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner ';'

    $default  reduce using rule 73 ($@3)

    $@3  go to state 941


State 712

  337 expr_full_block_assumed_piped: block_or_lambda . $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 336 ($@21)

    $@21  go to state 942


State 713

  219 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 219 (expr_call_pipe)


State 714

  491 expr: name_in_namespace "name" .

    $default  reduce using rule 491 (expr)


State 715

  385 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  386                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  405 expr_call: name_in_namespace '(' . ')'
  406          | name_in_namespace '(' . make_struct_dim ')'
  407          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 900
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 901
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 943
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 944
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 945
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_fields      go to state 906
    make_struct_dim         go to state 946
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 716

  225 expression_any: expression_delete ';' .

    $default  reduce using rule 225 (expression_any)


State 717

  232 expression_any: expression_break ';' .

    $default  reduce using rule 232 (expression_any)


State 718

  233 expression_any: expression_continue ';' .

    $default  reduce using rule 233 (expression_any)


State 719

  281 expression_return: expression_return_no_pipe ';' .

    $default  reduce using rule 281 (expression_return)


State 720

  286 expression_yield: expression_yield_no_pipe ';' .

    $default  reduce using rule 286 (expression_yield)


State 721

  292 optional_in_scope: "inscope" .

    $default  reduce using rule 292 (optional_in_scope)


State 722

  300 expression_let: kwd_let optional_in_scope . let_variable_declaration
  301               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 299
    "[["    shift, and go to state 947
    "name"  shift, and go to state 300
    '('     shift, and go to state 948

    tuple_expansion_variable_declaration  go to state 949
    let_variable_name_with_pos_list       go to state 301
    let_variable_declaration              go to state 950


State 723

  335 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 951

    $default  reduce using rule 331 (optional_capture_list)

    optional_capture_list  go to state 952


State 724

  257 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 953


State 725

  224 expression_any: expr_assign ';' .

    $default  reduce using rule 224 (expression_any)


State 726

  468 expr: expr "is" . "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr "is" . basic_type_declaration
  470     | expr "is" . "name"
  508 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 954
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 458
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 955
    "name"      shift, and go to state 956

    basic_type_declaration  go to state 957


State 727

  471 expr: expr "as" . "name"
  474     | expr "as" . "type" '<' $@30 type_declaration '>' $@31
  475     | expr "as" . basic_type_declaration
  506 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 958
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 458
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 959
    "name"      shift, and go to state 960

    basic_type_declaration  go to state 961


State 728

  355 expr_assign: expr "+=" . expr
  376 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 962
    "@ <|"                            shift, and go to state 963
    "@@ <|"                           shift, and go to state 964
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 965
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 966
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 967
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 729

  356 expr_assign: expr "-=" . expr
  377 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 962
    "@ <|"                            shift, and go to state 963
    "@@ <|"                           shift, and go to state 964
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 965
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 968
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 969
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 730

  358 expr_assign: expr "/=" . expr
  379 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 962
    "@ <|"                            shift, and go to state 963
    "@@ <|"                           shift, and go to state 964
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 965
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 970
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 971
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 731

  357 expr_assign: expr "*=" . expr
  378 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 962
    "@ <|"                            shift, and go to state 963
    "@@ <|"                           shift, and go to state 964
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 965
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 972
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 973
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 732

  359 expr_assign: expr "%=" . expr
  380 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 962
    "@ <|"                            shift, and go to state 963
    "@@ <|"                           shift, and go to state 964
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 965
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 974
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 975
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 733

  349 expr_assign: expr "&=" . expr
  370 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 962
    "@ <|"                            shift, and go to state 963
    "@@ <|"                           shift, and go to state 964
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 965
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 976
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 977
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 734

  350 expr_assign: expr "|=" . expr
  371 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 962
    "@ <|"                            shift, and go to state 963
    "@@ <|"                           shift, and go to state 964
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 965
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 978
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 979
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 735

  351 expr_assign: expr "^=" . expr
  372 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 962
    "@ <|"                            shift, and go to state 963
    "@@ <|"                           shift, and go to state 964
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 965
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 980
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 981
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 736

  424 expr: expr "<<" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 982
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 737

  425 expr: expr ">>" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 983
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 738

  448 expr: expr "++" .

    $default  reduce using rule 448 (expr)


State 739

  449 expr: expr "--" .

    $default  reduce using rule 449 (expr)


State 740

  437 expr: expr "<=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 984
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 741

  360 expr_assign: expr "<<=" . expr
  381 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 962
    "@ <|"                            shift, and go to state 963
    "@@ <|"                           shift, and go to state 964
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 965
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 985
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 986
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 742

  361 expr_assign: expr ">>=" . expr
  382 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 962
    "@ <|"                            shift, and go to state 963
    "@@ <|"                           shift, and go to state 964
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 965
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 987
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 988
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 743

  438 expr: expr ">=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 989
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 744

  435 expr: expr "==" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 990
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 745

  436 expr: expr "!=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 991
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 746

  387 expr_method_call: expr "->" . "name" '(' ')'
  388                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 992


State 747

  347 expr_assign: expr "<-" . expr
  369 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 962
    "@ <|"                            shift, and go to state 963
    "@@ <|"                           shift, and go to state 964
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 965
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 993
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 994
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 748

  464 expr: expr "??" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 995
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 749

  455 expr: expr "?." . "name"
  503 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 996
    "name"  shift, and go to state 997


State 750

  453 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 998
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 751

  488 expr: expr "<|" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 999
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 752

  489 expr: expr "|>" . expr
  490     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1000
    expr_mtag               go to state 543
    basic_type_declaration  go to state 1001
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 753

  348 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1002
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 754

  426 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1003
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 755

  427 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1004
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 756

  362 expr_assign: expr "<<<=" . expr
  383 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 962
    "@ <|"                            shift, and go to state 963
    "@@ <|"                           shift, and go to state 964
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 965
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 1005
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1006
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 757

  363 expr_assign: expr ">>>=" . expr
  384 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 962
    "@ <|"                            shift, and go to state 963
    "@@ <|"                           shift, and go to state 964
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 965
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 1007
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1008
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 758

  442 expr: expr "&&" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1009
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 759

  443 expr: expr "||" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1010
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 760

  444 expr: expr "^^" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1011
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 761

  352 expr_assign: expr "&&=" . expr
  373 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 962
    "@ <|"                            shift, and go to state 963
    "@@ <|"                           shift, and go to state 964
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 965
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 1012
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1013
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 762

  353 expr_assign: expr "||=" . expr
  374 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 962
    "@ <|"                            shift, and go to state 963
    "@@ <|"                           shift, and go to state 964
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 965
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 1014
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1015
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 763

  354 expr_assign: expr "^^=" . expr
  375 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 962
    "@ <|"                            shift, and go to state 963
    "@@ <|"                           shift, and go to state 964
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 965
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 1016
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1017
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 764

  445 expr: expr ".." . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1018
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 765

  346 expr_assign: expr '=' . expr
  368 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 962
    "@ <|"                            shift, and go to state 963
    "@@ <|"                           shift, and go to state 964
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 965
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 1019
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1020
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 766

  465 expr: expr '?' . expr ':' expr
  476     | expr '?' . "as" "name"
  479     | expr '?' . "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr '?' . "as" basic_type_declaration
  507 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "as"                              shift, and go to state 1021
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1022
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 767

  440 expr: expr '|' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1023
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 768

  441 expr: expr '^' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1024
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 769

  439 expr: expr '&' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1025
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 770

  433 expr: expr '<' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1026
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 771

  434 expr: expr '>' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1027
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 772

  429 expr: expr '-' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1028
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 773

  428 expr: expr '+' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1029
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 774

  430 expr: expr '*' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1030
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 775

  431 expr: expr '/' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1031
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 776

  432 expr: expr '%' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1032
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 777

  398 expr_field: expr '.' . "name"
  399           | expr '.' . '.' "name"
  400           | expr '.' . "name" '(' ')'
  401           | expr '.' . "name" '(' expr_list ')'
  404           | expr '.' . $@26 error $@27
  452 expr: expr '.' . '[' expr ']'
  454     | expr '.' . "?[" expr ']'
  456     | expr '.' . "?." "name"
  502 expr_mtag: expr '.' . "$f" '(' expr ')'
  504          | expr '.' . '.' "$f" '(' expr ')'
  505          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 1033
    "?["    shift, and go to state 1034
    "$f"    shift, and go to state 1035
    "name"  shift, and go to state 1036
    '.'     shift, and go to state 1037
    '['     shift, and go to state 1038

    $default  reduce using rule 402 ($@26)

    $@26  go to state 1039


State 778

  451 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1040
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 779

  218 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 218 (expr_call_pipe)


State 780

  408 expr_call: basic_type_declaration '(' . ')'
  409          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1041
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1042
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 781

  584 enum_list: enum_list . ';'
  585          | enum_list . "name" ';'
  586          | enum_list . "name" '=' expr ';'
  606 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@43 enum_list . $@44 '}'

    "name"  shift, and go to state 552
    ';'     shift, and go to state 553

    $default  reduce using rule 605 ($@44)

    $@44  go to state 1043


State 782

  586 enum_list: enum_list "name" '=' . expr ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1044
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 783

  585 enum_list: enum_list "name" ';' .

    $default  reduce using rule 585 (enum_list)


State 784

  603 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@41 enum_list $@42 '}' .

    $default  reduce using rule 603 (enum_declaration)


State 785

  118 optional_annotation_list: '[' . annotation_list ']'
  530 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 1045
    name_in_namespace             go to state 70


State 786

  618 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 618 (optional_struct_variable_declaration_list)


State 787

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header ';'
  529                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "def"  shift, and go to state 1046


State 788

  525 struct_variable_declaration_list: struct_variable_declaration_list $@34 . structure_variable_declaration ';'

    "[["  shift, and go to state 218

    $default  reduce using rule 510 (optional_field_annotation)

    optional_field_annotation       go to state 1047
    structure_variable_declaration  go to state 1048


State 789

  563 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 563 (let_variable_name_with_pos_list)


State 790

  566 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1049


State 791

  567 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 567 (let_variable_declaration)


State 792

  568 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'
  569                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 1050
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1051
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 793

  571 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 571 (let_variable_declaration)


State 794

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  345 expr_assign: expr .
  346            | expr . '=' expr
  347            | expr . "<-" expr
  348            | expr . ":=" expr
  349            | expr . "&=" expr
  350            | expr . "|=" expr
  351            | expr . "^=" expr
  352            | expr . "&&=" expr
  353            | expr . "||=" expr
  354            | expr . "^^=" expr
  355            | expr . "+=" expr
  356            | expr . "-=" expr
  357            | expr . "*=" expr
  358            | expr . "/=" expr
  359            | expr . "%=" expr
  360            | expr . "<<=" expr
  361            | expr . ">>=" expr
  362            | expr . "<<<=" expr
  363            | expr . ">>>=" expr
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  570 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 850
    "-="    shift, and go to state 851
    "/="    shift, and go to state 852
    "*="    shift, and go to state 853
    "%="    shift, and go to state 854
    "&="    shift, and go to state 855
    "|="    shift, and go to state 856
    "^="    shift, and go to state 857
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 858
    ">>="   shift, and go to state 859
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 860
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 861
    ">>>="  shift, and go to state 862
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 863
    "||="   shift, and go to state 864
    "^^="   shift, and go to state 865
    ".."    shift, and go to state 764
    '='     shift, and go to state 866
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670
    ';'     shift, and go to state 1052

    $default  reduce using rule 345 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 795

  684 type_declaration_no_options: "type" '<' $@49 type_declaration . '>' $@50
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1053


State 796

  707 type_declaration_no_options: "array" '<' $@54 type_declaration . '>' $@55
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1054


State 797

  710 type_declaration_no_options: "table" '<' $@56 table_type_pair . '>' $@57

    '>'  shift, and go to state 1055


State 798

  672 table_type_pair: type_declaration .
  673                | type_declaration . ';' type_declaration
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    ';'  shift, and go to state 1056

    $default  reduce using rule 672 (table_type_pair)


State 799

  685 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 685 (type_declaration_no_options)


State 800

  713 type_declaration_no_options: "iterator" '<' $@58 type_declaration . '>' $@59
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1057


State 801

  703 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration . '>' $@53
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1058


State 802

  662 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 662 (auto_type_declaration)


State 803

  664 bitfield_bits: "name" .

    $default  reduce using rule 664 (bitfield_bits)


State 804

  665 bitfield_bits: bitfield_bits . ';' "name"
  671 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits . '>' $@48

    '>'  shift, and go to state 1059
    ';'  shift, and go to state 1060


State 805

  717 type_declaration_no_options: "block" '<' $@60 type_declaration . '>' $@61
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1061


State 806

  720 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1062


State 807

  724 type_declaration_no_options: "function" '<' $@64 type_declaration . '>' $@65
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1063


State 808

  727 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list . optional_function_type '>' $@67

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1064


State 809

  731 type_declaration_no_options: "lambda" '<' $@68 type_declaration . '>' $@69
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1065


State 810

  734 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list . optional_function_type '>' $@71

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1066


State 811

  538 tuple_type_list: tuple_type .

    $default  reduce using rule 538 (tuple_type_list)


State 812

  539 tuple_type_list: tuple_type_list . ';' tuple_type
  737 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list . '>' $@73

    '>'  shift, and go to state 1067
    ';'  shift, and go to state 1068


State 813

  544 variant_type_list: variant_type .

    $default  reduce using rule 544 (variant_type_list)


State 814

  545 variant_type_list: variant_type_list . ';' variant_type
  740 type_declaration_no_options: "variant" '<' $@74 variant_type_list . '>' $@75

    '>'  shift, and go to state 1069
    ';'  shift, and go to state 1070


State 815

  663 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 663 (auto_type_declaration)


State 816

  688 type_declaration_no_options: '$' name_in_namespace '<' $@51 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1071
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1072


State 817

  686 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1073


State 818

  246 optional_expr_list: expr_list .
  318 expr_list: expr_list . ',' expr

    ','  shift, and go to state 849

    $default  reduce using rule 246 (optional_expr_list)


State 819

  689 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 689 (type_declaration_no_options)


State 820

  674 dim_list: '[' expr ']' .

    $default  reduce using rule 674 (dim_list)


State 821

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  675 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 1074


State 822

  668 bitfield_alias_bits: bitfield_alias_bits "name" ';' .

    $default  reduce using rule 668 (bitfield_alias_bits)


State 823

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 '{' $@86 bitfield_alias_bits $@87 '}' .

    $default  reduce using rule 758 (bitfield_alias_declaration)


State 824

  537 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1075


State 825

  542 tuple_alias_type_list: tuple_alias_type_list tuple_type ';' .

    $default  reduce using rule 542 (tuple_alias_type_list)


State 826

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 '{' $@78 tuple_alias_type_list $@79 '}' .

    $default  reduce using rule 748 (tuple_alias_declaration)


State 827

  543 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1076


State 828

  548 variant_alias_type_list: variant_alias_type_list variant_type ';' .

    $default  reduce using rule 548 (variant_alias_type_list)


State 829

  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 '{' $@82 variant_alias_type_list $@83 '}' .

    $default  reduce using rule 753 (variant_alias_declaration)


State 830

  533 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 533 (function_argument_declaration)


State 831

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  623 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1077


State 832

  624 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 624 (variable_name_with_pos_list)


State 833

  625 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  626                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1078

    $default  reduce using rule 625 (variable_name_with_pos_list)


State 834

  553 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  554                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 616
    '='   shift, and go to state 618
    '|'   shift, and go to state 410

    $default  reduce using rule 553 (variable_declaration)

    copy_or_move  go to state 1079


State 835

  556 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 556 (variable_declaration)


State 836

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  345 expr_assign: expr .
  346            | expr . '=' expr
  347            | expr . "<-" expr
  348            | expr . ":=" expr
  349            | expr . "&=" expr
  350            | expr . "|=" expr
  351            | expr . "^=" expr
  352            | expr . "&&=" expr
  353            | expr . "||=" expr
  354            | expr . "^^=" expr
  355            | expr . "+=" expr
  356            | expr . "-=" expr
  357            | expr . "*=" expr
  358            | expr . "/=" expr
  359            | expr . "%=" expr
  360            | expr . "<<=" expr
  361            | expr . ">>=" expr
  362            | expr . "<<<=" expr
  363            | expr . ">>>=" expr
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  555 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 850
    "-="    shift, and go to state 851
    "/="    shift, and go to state 852
    "*="    shift, and go to state 853
    "%="    shift, and go to state 854
    "&="    shift, and go to state 855
    "|="    shift, and go to state 856
    "^="    shift, and go to state 857
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 858
    ">>="   shift, and go to state 859
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 860
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 861
    ">>>="  shift, and go to state 862
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 863
    "||="   shift, and go to state 864
    "^^="   shift, and go to state 865
    ".."    shift, and go to state 764
    '='     shift, and go to state 866
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670

    " <|"     reduce using rule 345 (expr_assign)
    $default  reduce using rule 555 (variable_declaration)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 837

  796 make_struct_decl: "struct" '<' $@88 . type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1080


State 838

  799 make_struct_decl: "class" '<' $@90 . type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1081


State 839

   78 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 78 (expression_while_loop)


State 840

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  625 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  626                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1082
    ','   shift, and go to state 617


State 841

  269 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1083


State 842

  272 expr_new: "new" new_type_declaration '(' . ')'
  273         | "new" new_type_declaration '(' . expr_list ')'
  274         | "new" new_type_declaration '(' . make_struct_dim ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 900
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 901
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1084
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1085
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_fields      go to state 906
    make_struct_dim         go to state 1086
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 843

  314 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  315               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  316               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '<'                               shift, and go to state 1087
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1088
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 844

  313 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1089


State 845

  823 make_dim_decl: "array" '<' $@98 . type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1090


State 846

  318 expr_list: expr_list . ',' expr
  820 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 928

    $default  reduce using rule 839 (optional_comma)

    optional_comma  go to state 1091


State 847

  283 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 283 (expression_return)


State 848

  280 expression_return_no_pipe: "return" "<-" expr_list .
  318 expr_list: expr_list . ',' expr

    ','  shift, and go to state 849

    $default  reduce using rule 280 (expression_return_no_pipe)


State 849

  318 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1092
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 850

  355 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1093
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 851

  356 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1094
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 852

  358 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1095
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 853

  357 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1096
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 854

  359 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1097
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 855

  349 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1098
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 856

  350 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1099
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 857

  351 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1100
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 858

  360 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1101
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 859

  361 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1102
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 860

  347 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1103
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 861

  362 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1104
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 862

  363 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1105
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 863

  352 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1106
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 864

  353 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1107
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 865

  354 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1108
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 866

  346 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1109
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 867

  289 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1110


State 868

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  835 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  836                | "table" '<' type_declaration_no_options . ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1111
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    ';'         shift, and go to state 1112
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 869

  831 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  834 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 937

    $default  reduce using rule 839 (optional_comma)

    optional_comma  go to state 1113


State 870

  266 expression_delete: "delete" "explicit" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 266 (expression_delete)


State 871

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  460     | "deref" '(' expr . ')'
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1114


State 872

   79 expression_with: "with" expr expression_block .

    $default  reduce using rule 79 (expression_with)


State 873

   81 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 80 ($@5)

    $@5  go to state 1115


State 874

  304 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1116


State 875

  307 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1117


State 876

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  461     | "addr" '(' expr . ')'
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1118


State 877

  310 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1119


State 878

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 879

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 880

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  492     | "unsafe" '(' expr . ')'
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1120


State 881

  827 make_dim_decl: "fixed_array" '<' $@100 . type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1121


State 882

  318 expr_list: expr_list . ',' expr
  824 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 928

    $default  reduce using rule 839 (optional_comma)

    optional_comma  go to state 1122


State 883

  805 make_struct_decl: "default" '<' $@94 . type_declaration_no_options '>' $@95

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1123


State 884

  814 make_tuple_call: "tuple" '<' $@96 . type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1124


State 885

  318 expr_list: expr_list . ',' expr
  811 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 928

    $default  reduce using rule 839 (optional_comma)

    optional_comma  go to state 1125


State 886

  802 make_struct_decl: "variant" '<' $@92 . type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1126


State 887

  462 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  463     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1127
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 888

  288 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 288 (expression_yield)


State 889

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  285 expression_yield_no_pipe: "yield" "<-" expr .
  345 expr_assign: expr .
  346            | expr . '=' expr
  347            | expr . "<-" expr
  348            | expr . ":=" expr
  349            | expr . "&=" expr
  350            | expr . "|=" expr
  351            | expr . "^=" expr
  352            | expr . "&&=" expr
  353            | expr . "||=" expr
  354            | expr . "^^=" expr
  355            | expr . "+=" expr
  356            | expr . "-=" expr
  357            | expr . "*=" expr
  358            | expr . "/=" expr
  359            | expr . "%=" expr
  360            | expr . "<<=" expr
  361            | expr . ">>=" expr
  362            | expr . "<<<=" expr
  363            | expr . ">>>=" expr
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 850
    "-="    shift, and go to state 851
    "/="    shift, and go to state 852
    "*="    shift, and go to state 853
    "%="    shift, and go to state 854
    "&="    shift, and go to state 855
    "|="    shift, and go to state 856
    "^="    shift, and go to state 857
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 858
    ">>="   shift, and go to state 859
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 860
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 861
    ">>>="  shift, and go to state 862
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 863
    "||="   shift, and go to state 864
    "^^="   shift, and go to state 865
    ".."    shift, and go to state 764
    '='     shift, and go to state 866
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670

    " <|"     reduce using rule 345 (expr_assign)
    $default  reduce using rule 285 (expression_yield_no_pipe)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 890

  324 block_or_lambda: '@' '@' .

    $default  reduce using rule 324 (block_or_lambda)


State 891

  334 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 951

    $default  reduce using rule 331 (optional_capture_list)

    optional_capture_list  go to state 1128


State 892

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  494 expr_mtag: "$$" '(' expr . ')'
  502          | expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1129


State 893

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  495 expr_mtag: "$i" '(' expr . ')'
  502          | expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1130


State 894

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  496 expr_mtag: "$v" '(' expr . ')'
  502          | expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1131


State 895

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  497 expr_mtag: "$b" '(' expr . ')'
  502          | expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1132


State 896

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  498 expr_mtag: "$a" '(' expr . ')'
  502          | expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1133


State 897

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  500 expr_mtag: "$c" '(' expr . ')' '(' ')'
  501          | "$c" '(' expr . ')' '(' expr_list ')'
  502          | expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1134


State 898

  625 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  626                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  842 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1135
    ','   shift, and go to state 617


State 899

  775 optional_block: "where" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1136


State 900

  768 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  769                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1137


State 901

  262 name_in_namespace: "name" .
  263                  | "name" . "::" "name"
  764 make_struct_fields: "name" . copy_or_move expr
  765                   | "name" . ":=" expr

    "<-"  shift, and go to state 616
    ":="  shift, and go to state 1138
    "::"  shift, and go to state 98
    '='   shift, and go to state 618

    $default  reduce using rule 262 (name_in_namespace)

    copy_or_move  go to state 1139


State 902

  423 expr: '-' . expr
  689 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  692                            | type_declaration_no_options '-' . "const"
  694                            | type_declaration_no_options '-' . '&'
  697                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "const"                           shift, and go to state 591
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '&'                               shift, and go to state 592
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 1140
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498
    '#'                               shift, and go to state 594

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 694
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 903

  674 dim_list: '[' . expr ']'
  681 type_declaration_no_options: type_declaration_no_options '[' . ']'
  817 make_dim_decl: '[' . expr_list optional_comma ']'
  841 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    ']'                               shift, and go to state 595
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 700
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1141
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 904

  450 expr: '(' . expr_list optional_comma ')'
  790 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  791                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1142
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 702
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 905

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  806 make_tuple: expr .
  807           | expr . "=>" expr

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "=>"   shift, and go to state 1143
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 806 (make_tuple)


State 906

  766 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  767                   | make_struct_fields . ',' "name" ":=" expr
  770                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  771                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  772 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1144

    $default  reduce using rule 772 (make_struct_dim)


State 907

  773 make_struct_dim: make_struct_dim . ';' make_struct_fields
  788 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 899
    ';'      shift, and go to state 1145

    $default  reduce using rule 774 (optional_block)

    optional_block  go to state 1146


State 908

  789 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1147
    ",]]"  shift, and go to state 1148
    ']'    shift, and go to state 1149

    optional_trailing_delim_sqr_sqr  go to state 1150


State 909

  808 make_tuple: make_tuple . ',' expr
  815 make_dim: make_tuple .

    ','  shift, and go to state 1151

    $default  reduce using rule 815 (make_dim)


State 910

  816 make_dim: make_dim . ';' make_tuple
  818 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    ";]]"  shift, and go to state 1152
    ']'    shift, and go to state 1153
    ';'    shift, and go to state 1154

    optional_trailing_semicolon_sqr_sqr  go to state 1155


State 911

  625 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  626                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  843 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 1156
    ','   shift, and go to state 617


State 912

  450 expr: '(' . expr_list optional_comma ')'
  793 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1157
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 702
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 913

  773 make_struct_dim: make_struct_dim . ';' make_struct_fields
  792 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 899
    ';'      shift, and go to state 1145

    $default  reduce using rule 774 (optional_block)

    optional_block  go to state 1158


State 914

  816 make_dim: make_dim . ';' make_tuple
  819 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    ";}]"  shift, and go to state 1159
    ';'    shift, and go to state 1154
    '}'    shift, and go to state 1160

    optional_trailing_semicolon_cur_sqr  go to state 1161


State 915

  625 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  626                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  845 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "in"  shift, and go to state 1162
    ','   shift, and go to state 617


State 916

  809 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1163
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 917

  777 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 777 (optional_trailing_semicolon_cur_cur)


State 918

  829 make_table: make_table ';' . make_map_tuple

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 1164
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 919

  776 optional_trailing_semicolon_cur_cur: '}' . '}'

    '}'  shift, and go to state 1165


State 920

  833 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 833 (make_table_decl)


State 921

  253 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options_list '>' $@8 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1166
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1072


State 922

  244 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 244 (expr_keyword)


State 923

  256 expression_keyword: "type function" '<' $@9 . type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1167
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1072


State 924

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 925

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1168
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 926

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 927

  625 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  626                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  841 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1169
    ','   shift, and go to state 617


State 928

  318 expr_list: expr_list ',' . expr
  840 optional_comma: ',' .

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 840 (optional_comma)

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1092
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 929

  817 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1170


State 930

  450 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1171


State 931

  390 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1172


State 932

  509 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1173


State 933

  394 func_addr_expr: '@' '@' '<' . $@22 type_declaration_no_options '>' $@23 func_addr_name
  397               | '@' '@' '<' . $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    ':'       reduce using rule 395 ($@24)
    '>'       reduce using rule 395 ($@24)
    '('       reduce using rule 395 ($@24)
    $default  reduce using rule 392 ($@22)

    $@22  go to state 1174
    $@24  go to state 1175


State 934

  389 func_addr_name: name_in_namespace .

    $default  reduce using rule 389 (func_addr_name)


State 935

  391 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 391 (func_addr_expr)


State 936

  625 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  626                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  844 array_comprehension: '{' "for" variable_name_with_pos_list . "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1176
    ','   shift, and go to state 617


State 937

  831 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  840 optional_comma: ',' .

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 840 (optional_comma)

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 1177
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 938

  832 make_table_decl: '{' expr_map_tuple_list optional_comma . '}'

    '}'  shift, and go to state 1178


State 939

  217 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 241 (expressions)

    expressions  go to state 1179


State 940

   72 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1180
    "elif"         shift, and go to state 1181
    "static_elif"  shift, and go to state 1182

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1183
    expression_else      go to state 1184


State 941

   74 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1185
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 942

  337 expr_full_block_assumed_piped: block_or_lambda $@21 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 14

    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 1186


State 943

  385 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  817 make_dim_decl: '[' . expr_list optional_comma ']'
  841 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 900
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 901
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 700
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_fields      go to state 1187
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 944

  405 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 405 (expr_call)


State 945

  318 expr_list: expr_list . ',' expr
  386 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  407 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1188
    ')'  shift, and go to state 1189


State 946

  406 expr_call: name_in_namespace '(' make_struct_dim . ')'
  773 make_struct_dim: make_struct_dim . ';' make_struct_fields

    ')'  shift, and go to state 1190
    ';'  shift, and go to state 1145


State 947

  296 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  298                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

    "name"  shift, and go to state 1191

    tuple_expansion  go to state 1192


State 948

  297 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  299                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr ';'

    "name"  shift, and go to state 1191

    tuple_expansion  go to state 1193


State 949

  301 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 301 (expression_let)


State 950

  300 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 300 (expression_let)


State 951

  332 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1194
    ":="  shift, and go to state 1195
    '='   shift, and go to state 1196
    '&'   shift, and go to state 1197

    capture_entry  go to state 1198
    capture_list   go to state 1199


State 952

  335 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1200


State 953

  257 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 257 (expr_pipe)


State 954

  468 expr: expr "is" "type" . '<' $@28 type_declaration_no_options '>' $@29

    '<'  shift, and go to state 1201


State 955

  508 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1202


State 956

  470 expr: expr "is" "name" .

    $default  reduce using rule 470 (expr)


State 957

  469 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 469 (expr)


State 958

  474 expr: expr "as" "type" . '<' $@30 type_declaration '>' $@31

    '<'  shift, and go to state 1203


State 959

  506 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1204


State 960

  471 expr: expr "as" "name" .

    $default  reduce using rule 471 (expr)


State 961

  475 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 475 (expr)


State 962

  366 expr_assign_pipe_right: "$ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1205


State 963

  364 expr_assign_pipe_right: "@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1206


State 964

  365 expr_assign_pipe_right: "@@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1207


State 965

  367 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 367 (expr_assign_pipe_right)


State 966

  376 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 376 (expr_assign_pipe)


State 967

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  355 expr_assign: expr "+=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 355 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 968

  377 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 377 (expr_assign_pipe)


State 969

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  356 expr_assign: expr "-=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 356 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 970

  379 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 379 (expr_assign_pipe)


State 971

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_assign: expr "/=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 358 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 972

  378 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 378 (expr_assign_pipe)


State 973

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  357 expr_assign: expr "*=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 357 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 974

  380 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 380 (expr_assign_pipe)


State 975

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  359 expr_assign: expr "%=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 359 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 976

  370 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 370 (expr_assign_pipe)


State 977

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  349 expr_assign: expr "&=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 349 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 978

  371 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 371 (expr_assign_pipe)


State 979

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  350 expr_assign: expr "|=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 350 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 980

  372 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 372 (expr_assign_pipe)


State 981

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  351 expr_assign: expr "^=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 351 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 982

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  424     | expr "<<" expr .
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '-'   shift, and go to state 772
    '+'   shift, and go to state 773
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 424 (expr)


State 983

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  425     | expr ">>" expr .
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '-'   shift, and go to state 772
    '+'   shift, and go to state 773
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 425 (expr)


State 984

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  437     | expr "<=" expr .
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 437 (expr)


State 985

  381 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 381 (expr_assign_pipe)


State 986

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  360 expr_assign: expr "<<=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 360 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 987

  382 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 382 (expr_assign_pipe)


State 988

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  361 expr_assign: expr ">>=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 361 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 989

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  438     | expr ">=" expr .
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 438 (expr)


State 990

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  435     | expr "==" expr .
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 435 (expr)


State 991

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  436     | expr "!=" expr .
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 436 (expr)


State 992

  387 expr_method_call: expr "->" "name" . '(' ')'
  388                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1208


State 993

  369 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 369 (expr_assign_pipe)


State 994

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  347 expr_assign: expr "<-" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 347 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 995

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  464     | expr "??" expr .
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 464 (expr)


State 996

  503 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1209


State 997

  455 expr: expr "?." "name" .

    $default  reduce using rule 455 (expr)


State 998

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  453     | expr "?[" expr . ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 1210


State 999

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  488     | expr "<|" expr .
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 488 (expr)


State 1000

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  489     | expr "|>" expr .
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 489 (expr)


State 1001

  408 expr_call: basic_type_declaration . '(' ')'
  409          | basic_type_declaration . '(' expr_list ')'
  490 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 780

    $default  reduce using rule 490 (expr)


State 1002

  348 expr_assign: expr ":=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 348 (expr_assign)


State 1003

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  426     | expr "<<<" expr .
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '-'   shift, and go to state 772
    '+'   shift, and go to state 773
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 426 (expr)


State 1004

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  427     | expr ">>>" expr .
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '-'   shift, and go to state 772
    '+'   shift, and go to state 773
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 427 (expr)


State 1005

  383 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 383 (expr_assign_pipe)


State 1006

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  362 expr_assign: expr "<<<=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 362 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 1007

  384 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 384 (expr_assign_pipe)


State 1008

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  363 expr_assign: expr ">>>=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 363 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 1009

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  442     | expr "&&" expr .
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 442 (expr)


State 1010

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  443     | expr "||" expr .
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "^^"   shift, and go to state 760
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 443 (expr)


State 1011

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  444     | expr "^^" expr .
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 444 (expr)


State 1012

  373 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 373 (expr_assign_pipe)


State 1013

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  352 expr_assign: expr "&&=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 352 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 1014

  374 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 374 (expr_assign_pipe)


State 1015

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  353 expr_assign: expr "||=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 353 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 1016

  375 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 375 (expr_assign_pipe)


State 1017

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  354 expr_assign: expr "^^=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 354 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 1018

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  445     | expr ".." expr .
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    ".."  error (nonassociative)

    $default  reduce using rule 445 (expr)


State 1019

  368 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 368 (expr_assign_pipe)


State 1020

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  346 expr_assign: expr '=' expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 346 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 1021

  476 expr: expr '?' "as" . "name"
  479     | expr '?' "as" . "type" '<' $@32 type_declaration '>' $@33
  480     | expr '?' "as" . basic_type_declaration
  507 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1211
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 458
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 1212
    "name"      shift, and go to state 1213

    basic_type_declaration  go to state 1214


State 1022

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  465     | expr '?' expr . ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    ':'    shift, and go to state 1215
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778


State 1023

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  440     | expr '|' expr .
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 440 (expr)


State 1024

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  441     | expr '^' expr .
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 441 (expr)


State 1025

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  439     | expr '&' expr .
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 439 (expr)


State 1026

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  433     | expr '<' expr .
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 433 (expr)


State 1027

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  434     | expr '>' expr .
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 434 (expr)


State 1028

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  429     | expr '-' expr .
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 429 (expr)


State 1029

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  428     | expr '+' expr .
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 428 (expr)


State 1030

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  430     | expr '*' expr .
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 430 (expr)


State 1031

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  431     | expr '/' expr .
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 431 (expr)


State 1032

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  432     | expr '%' expr .
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 432 (expr)


State 1033

  456 expr: expr '.' "?." . "name"
  505 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1216
    "name"  shift, and go to state 1217


State 1034

  454 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1218
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1035

  502 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1219


State 1036

  398 expr_field: expr '.' "name" .
  400           | expr '.' "name" . '(' ')'
  401           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1220

    '('       [reduce using rule 398 (expr_field)]
    $default  reduce using rule 398 (expr_field)


State 1037

  399 expr_field: expr '.' '.' . "name"
  504 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1221
    "name"  shift, and go to state 1222


State 1038

  452 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1223
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1039

  404 expr_field: expr '.' $@26 . error $@27

    error  shift, and go to state 1224


State 1040

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  451     | expr '[' expr . ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 1225


State 1041

  408 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 408 (expr_call)


State 1042

  318 expr_list: expr_list . ',' expr
  409 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 849
    ')'  shift, and go to state 1226


State 1043

  606 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@43 enum_list $@44 . '}'

    '}'  shift, and go to state 1227


State 1044

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  586 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1228


State 1045

  116 annotation_list: annotation_list . ',' annotation_declaration
  118 optional_annotation_list: '[' annotation_list . ']'
  530 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 107
    ']'  shift, and go to state 1229


State 1046

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header ';'
  529                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "public"   shift, and go to state 1230
    "private"  shift, and go to state 1231

    $default  reduce using rule 517 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1232


State 1047

  522 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1233

    $default  reduce using rule 520 (optional_static_member_variable)

    optional_static_member_variable  go to state 1234


State 1048

  525 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration . ';'

    ';'  shift, and go to state 1235


State 1049

  566 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 566 (let_variable_name_with_pos_list)


State 1050

  569 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 569 (let_variable_declaration)


State 1051

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  345 expr_assign: expr .
  346            | expr . '=' expr
  347            | expr . "<-" expr
  348            | expr . ":=" expr
  349            | expr . "&=" expr
  350            | expr . "|=" expr
  351            | expr . "^=" expr
  352            | expr . "&&=" expr
  353            | expr . "||=" expr
  354            | expr . "^^=" expr
  355            | expr . "+=" expr
  356            | expr . "-=" expr
  357            | expr . "*=" expr
  358            | expr . "/=" expr
  359            | expr . "%=" expr
  360            | expr . "<<=" expr
  361            | expr . ">>=" expr
  362            | expr . "<<<=" expr
  363            | expr . ">>>=" expr
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  568 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 850
    "-="    shift, and go to state 851
    "/="    shift, and go to state 852
    "*="    shift, and go to state 853
    "%="    shift, and go to state 854
    "&="    shift, and go to state 855
    "|="    shift, and go to state 856
    "^="    shift, and go to state 857
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 858
    ">>="   shift, and go to state 859
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 860
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 861
    ">>>="  shift, and go to state 862
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 863
    "||="   shift, and go to state 864
    "^^="   shift, and go to state 865
    ".."    shift, and go to state 764
    '='     shift, and go to state 866
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670
    ';'     shift, and go to state 1236

    $default  reduce using rule 345 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 1052

  570 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 570 (let_variable_declaration)


State 1053

  684 type_declaration_no_options: "type" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 683 ($@50)

    $@50  go to state 1237


State 1054

  707 type_declaration_no_options: "array" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 706 ($@55)

    $@55  go to state 1238


State 1055

  710 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' . $@57

    $default  reduce using rule 709 ($@57)

    $@57  go to state 1239


State 1056

  673 table_type_pair: type_declaration ';' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1240


State 1057

  713 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 712 ($@59)

    $@59  go to state 1241


State 1058

  703 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 702 ($@53)

    $@53  go to state 1242


State 1059

  671 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' . $@48

    $default  reduce using rule 670 ($@48)

    $@48  go to state 1243


State 1060

  665 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1244


State 1061

  717 type_declaration_no_options: "block" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 716 ($@61)

    $@61  go to state 1245


State 1062

  720 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1246


State 1063

  724 type_declaration_no_options: "function" '<' $@64 type_declaration '>' . $@65

    $default  reduce using rule 723 ($@65)

    $@65  go to state 1247


State 1064

  727 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type . '>' $@67

    '>'  shift, and go to state 1248


State 1065

  731 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' . $@69

    $default  reduce using rule 730 ($@69)

    $@69  go to state 1249


State 1066

  734 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type . '>' $@71

    '>'  shift, and go to state 1250


State 1067

  737 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' . $@73

    $default  reduce using rule 736 ($@73)

    $@73  go to state 1251


State 1068

  539 tuple_type_list: tuple_type_list ';' . tuple_type

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 603
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 1252
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 606


State 1069

  740 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' . $@75

    $default  reduce using rule 739 ($@75)

    $@75  go to state 1253


State 1070

  545 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 608

    variant_type  go to state 1254


State 1071

  250 type_declaration_no_options_list: type_declaration_no_options_list . ';' type_declaration
  688 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    '>'  shift, and go to state 1255
    ';'  shift, and go to state 1256


State 1072

  249 type_declaration_no_options_list: type_declaration .
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 249 (type_declaration_no_options_list)


State 1073

  686 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 686 (type_declaration_no_options)


State 1074

  675 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 675 (dim_list)


State 1075

  537 tuple_type: "name" ':' type_declaration .
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 537 (tuple_type)


State 1076

  543 variant_type: "name" ':' type_declaration .
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 543 (variant_type)


State 1077

  623 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 623 (variable_name_with_pos_list)


State 1078

  626 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1257


State 1079

  554 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1258
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1080

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  796 make_struct_decl: "struct" '<' $@88 type_declaration_no_options . '>' $@89 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1259
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1081

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  799 make_struct_decl: "class" '<' $@90 type_declaration_no_options . '>' $@91 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1260
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1082

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1261
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1083

  269 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1262


State 1084

  272 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 272 (expr_new)


State 1085

  273 expr_new: "new" new_type_declaration '(' expr_list . ')'
  318 expr_list: expr_list . ',' expr

    ','  shift, and go to state 849
    ')'  shift, and go to state 1263


State 1086

  274 expr_new: "new" new_type_declaration '(' make_struct_dim . ')'
  773 make_struct_dim: make_struct_dim . ';' make_struct_fields

    ')'  shift, and go to state 1264
    ';'  shift, and go to state 1145


State 1087

  315 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  316               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 1265


State 1088

  314 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1266


State 1089

  313 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1267


State 1090

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  823 make_dim_decl: "array" '<' $@98 type_declaration_no_options . '>' $@99 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1268
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1091

  820 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1269


State 1092

  318 expr_list: expr_list ',' expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 318 (expr_list)


State 1093

  355 expr_assign: expr "+=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 355 (expr_assign)


State 1094

  356 expr_assign: expr "-=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 356 (expr_assign)


State 1095

  358 expr_assign: expr "/=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 358 (expr_assign)


State 1096

  357 expr_assign: expr "*=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 357 (expr_assign)


State 1097

  359 expr_assign: expr "%=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 359 (expr_assign)


State 1098

  349 expr_assign: expr "&=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 349 (expr_assign)


State 1099

  350 expr_assign: expr "|=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 350 (expr_assign)


State 1100

  351 expr_assign: expr "^=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 351 (expr_assign)


State 1101

  360 expr_assign: expr "<<=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 360 (expr_assign)


State 1102

  361 expr_assign: expr ">>=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 361 (expr_assign)


State 1103

  347 expr_assign: expr "<-" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 347 (expr_assign)


State 1104

  362 expr_assign: expr "<<<=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 362 (expr_assign)


State 1105

  363 expr_assign: expr ">>>=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 363 (expr_assign)


State 1106

  352 expr_assign: expr "&&=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 352 (expr_assign)


State 1107

  353 expr_assign: expr "||=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 353 (expr_assign)


State 1108

  354 expr_assign: expr "^^=" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 354 (expr_assign)


State 1109

  346 expr_assign: expr '=' expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 346 (expr_assign)


State 1110

  289 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 289 (expression_try_catch)


State 1111

  835 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1270


State 1112

  836 make_table_decl: "table" '<' type_declaration_no_options ';' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1271


State 1113

  834 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1272


State 1114

  460 expr: "deref" '(' expr ')' .

    $default  reduce using rule 460 (expr)


State 1115

   81 expression_with_alias: "assume" "name" '=' $@5 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1273
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1116

  304 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1274
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1117

  307 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1275
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1118

  461 expr: "addr" '(' expr ')' .

    $default  reduce using rule 461 (expr)


State 1119

  310 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1276
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1120

  492 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 492 (expr)


State 1121

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  827 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options . '>' $@101 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1277
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1122

  824 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1278


State 1123

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  805 make_struct_decl: "default" '<' $@94 type_declaration_no_options . '>' $@95

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1279
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1124

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  814 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options . '>' $@97 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1280
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1125

  811 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1281


State 1126

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  802 make_struct_decl: "variant" '<' $@92 type_declaration_no_options . '>' $@93 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1282
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1127

  462 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  463     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 951

    $default  reduce using rule 331 (optional_capture_list)

    optional_capture_list  go to state 1283


State 1128

  334 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1284


State 1129

  494 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 494 (expr_mtag)


State 1130

  495 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 495 (expr_mtag)


State 1131

  496 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 496 (expr_mtag)


State 1132

  497 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 497 (expr_mtag)


State 1133

  498 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 498 (expr_mtag)


State 1134

  500 expr_mtag: "$c" '(' expr ')' . '(' ')'
  501          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1285


State 1135

  842 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1286
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1136

  775 optional_block: "where" expr_block .

    $default  reduce using rule 775 (optional_block)


State 1137

  768 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  769                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1287
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1138

  765 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1288
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1139

  764 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1289
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1140

  689 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  817 make_dim_decl: '[' . expr_list optional_comma ']'
  841 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    ']'                               shift, and go to state 819
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 700
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1141

  317 expr_list: expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  674 dim_list: '[' expr . ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 820

    ']'       [reduce using rule 317 (expr_list)]
    $default  reduce using rule 317 (expr_list)


State 1142

  790 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  791                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 899
    "$f"     shift, and go to state 900
    "name"   shift, and go to state 1290

    $default  reduce using rule 774 (optional_block)

    make_struct_fields  go to state 906
    make_struct_dim     go to state 1291
    optional_block      go to state 1292


State 1143

  807 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1293
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1144

  766 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  767                   | make_struct_fields ',' . "name" ":=" expr
  770                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  771                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1294
    "name"  shift, and go to state 1295


State 1145

  773 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "$f"    shift, and go to state 900
    "name"  shift, and go to state 1290

    make_struct_fields  go to state 1296


State 1146

  788 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1147
    ",]]"  shift, and go to state 1148
    ']'    shift, and go to state 1149

    optional_trailing_delim_sqr_sqr  go to state 1297


State 1147

  783 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 783 (optional_trailing_delim_sqr_sqr)


State 1148

  784 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 784 (optional_trailing_delim_sqr_sqr)


State 1149

  782 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1298


State 1150

  789 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 789 (make_struct_decl)


State 1151

  808 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1299
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1152

  781 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 781 (optional_trailing_semicolon_sqr_sqr)


State 1153

  780 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1300


State 1154

  816 make_dim: make_dim ';' . make_tuple

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 905
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple              go to state 1301
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1155

  818 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 818 (make_dim_decl)


State 1156

  843 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1302
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1157

  793 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 900
    "name"  shift, and go to state 1290

    make_struct_fields  go to state 906
    make_struct_dim     go to state 1303


State 1158

  792 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1304
    ",}]"  shift, and go to state 1305
    '}'    shift, and go to state 1306

    optional_trailing_delim_cur_sqr  go to state 1307


State 1159

  779 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 779 (optional_trailing_semicolon_cur_sqr)


State 1160

  778 optional_trailing_semicolon_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1308


State 1161

  819 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 819 (make_dim_decl)


State 1162

  845 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1309
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1163

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  809 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 809 (make_map_tuple)


State 1164

  829 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 829 (make_table)


State 1165

  776 optional_trailing_semicolon_cur_cur: '}' '}' .

    $default  reduce using rule 776 (optional_trailing_semicolon_cur_cur)


State 1166

  250 type_declaration_no_options_list: type_declaration_no_options_list . ';' type_declaration
  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list . '>' $@8 expr

    '>'  shift, and go to state 1310
    ';'  shift, and go to state 1256


State 1167

  250 type_declaration_no_options_list: type_declaration_no_options_list . ';' type_declaration
  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list . '>' $@10 optional_expr_list_in_braces

    '>'  shift, and go to state 1311
    ';'  shift, and go to state 1256


State 1168

   30 string_builder_body: string_builder_body "{" expr . "}"
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    "}"    shift, and go to state 1312
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778


State 1169

  841 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1313
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1170

  817 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 817 (make_dim_decl)


State 1171

  450 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 450 (expr)


State 1172

  390 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1314
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1173

  509 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1315
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1174

  394 func_addr_expr: '@' '@' '<' $@22 . type_declaration_no_options '>' $@23 func_addr_name

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1316


State 1175

  397 func_addr_expr: '@' '@' '<' $@24 . optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1317


State 1176

  844 array_comprehension: '{' "for" variable_name_with_pos_list "in" . expr_list ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1318
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1177

  831 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 831 (expr_map_tuple_list)


State 1178

  832 make_table_decl: '{' expr_map_tuple_list optional_comma '}' .

    $default  reduce using rule 832 (make_table_decl)


State 1179

  217 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  242 expressions: expressions . expression_any
  243            | expressions . error

    error                             shift, and go to state 425
    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 428
    "if"                              shift, and go to state 429
    "static_if"                       shift, and go to state 430
    "for"                             shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 438
    "null"                            shift, and go to state 439
    "break"                           shift, and go to state 440
    "try"                             shift, and go to state 441
    "table"                           shift, and go to state 442
    "delete"                          shift, and go to state 443
    "deref"                           shift, and go to state 444
    "with"                            shift, and go to state 445
    "assume"                          shift, and go to state 446
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 449
    "continue"                        shift, and go to state 450
    "pass"                            shift, and go to state 451
    "reinterpret"                     shift, and go to state 452
    "label"                           shift, and go to state 453
    "goto"                            shift, and go to state 454
    "unsafe"                          shift, and go to state 455
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "yield"                           shift, and go to state 462
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 485
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    ';'                               shift, and go to state 497
    '{'                               shift, and go to state 498
    '}'                               shift, and go to state 1319

    string_builder             go to state 500
    expr_reader                go to state 501
    expression_label           go to state 502
    expression_goto            go to state 503
    if_or_static_if            go to state 504
    expression_if_one_liner    go to state 505
    expression_if_then_else    go to state 506
    expression_for_loop        go to state 507
    expression_unsafe          go to state 508
    expression_while_loop      go to state 509
    expression_with            go to state 510
    expression_with_alias      go to state 511
    expr_call_pipe             go to state 512
    expression_any             go to state 513
    expr_keyword               go to state 514
    expression_keyword         go to state 515
    expr_pipe                  go to state 516
    name_in_namespace          go to state 517
    expression_delete          go to state 518
    expr_new                   go to state 519
    expression_break           go to state 520
    expression_continue        go to state 521
    expression_return_no_pipe  go to state 522
    expression_return          go to state 523
    expression_yield_no_pipe   go to state 524
    expression_yield           go to state 525
    expression_try_catch       go to state 526
    kwd_let                    go to state 527
    expression_let             go to state 528
    expr_cast                  go to state 529
    expr_type_decl             go to state 530
    expr_type_info             go to state 531
    block_or_lambda            go to state 532
    expr_full_block            go to state 533
    expr_numeric_const         go to state 534
    expr_assign                go to state 535
    expr_assign_pipe           go to state 536
    expr_named_call            go to state 537
    expr_method_call           go to state 538
    func_addr_expr             go to state 539
    expr_field                 go to state 540
    expr_call                  go to state 541
    expr                       go to state 542
    expr_mtag                  go to state 543
    basic_type_declaration     go to state 544
    make_decl                  go to state 545
    make_struct_decl           go to state 546
    make_tuple_call            go to state 547
    make_dim_decl              go to state 548
    make_table_decl            go to state 549
    array_comprehension        go to state 550


State 1180

   60 expression_else: "else" . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1320


State 1181

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1182

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1183

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1321
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1184

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 72 (expression_if_then_else)


State 1185

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner ';'
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1322
    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    ".."    shift, and go to state 764
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1323


State 1186

  337 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "[["  shift, and go to state 951

    $default  reduce using rule 331 (optional_capture_list)

    optional_capture_list  go to state 1324


State 1187

  385 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  766 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  767                   | make_struct_fields . ',' "name" ":=" expr
  770                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  771                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1144
    ']'  shift, and go to state 1325


State 1188

  318 expr_list: expr_list ',' . expr
  386 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 1326
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1092
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1189

  407 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 407 (expr_call)


State 1190

  406 expr_call: name_in_namespace '(' make_struct_dim ')' .

    $default  reduce using rule 406 (expr_call)


State 1191

  294 tuple_expansion: "name" .

    $default  reduce using rule 294 (tuple_expansion)


State 1192

  295 tuple_expansion: tuple_expansion . ',' "name"
  296 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  298                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 1327
    ']'  shift, and go to state 1328


State 1193

  295 tuple_expansion: tuple_expansion . ',' "name"
  297 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  299                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 1327
    ')'  shift, and go to state 1329


State 1194

  327 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1330


State 1195

  328 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1331


State 1196

  326 capture_entry: '=' . "name"

    "name"  shift, and go to state 1332


State 1197

  325 capture_entry: '&' . "name"

    "name"  shift, and go to state 1333


State 1198

  329 capture_list: capture_entry .

    $default  reduce using rule 329 (capture_list)


State 1199

  330 capture_list: capture_list . ',' capture_entry
  332 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1334
    ']'  shift, and go to state 1335


State 1200

  335 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1336


State 1201

  468 expr: expr "is" "type" '<' . $@28 type_declaration_no_options '>' $@29

    $default  reduce using rule 466 ($@28)

    $@28  go to state 1337


State 1202

  508 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1338
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1203

  474 expr: expr "as" "type" '<' . $@30 type_declaration '>' $@31

    $default  reduce using rule 472 ($@30)

    $@30  go to state 1339


State 1204

  506 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1340
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1205

  366 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 366 (expr_assign_pipe_right)


State 1206

  364 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 364 (expr_assign_pipe_right)


State 1207

  365 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 365 (expr_assign_pipe_right)


State 1208

  387 expr_method_call: expr "->" "name" '(' . ')'
  388                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1341
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1342
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1209

  503 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1343
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1210

  453 expr: expr "?[" expr ']' .

    $default  reduce using rule 453 (expr)


State 1211

  479 expr: expr '?' "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 1344


State 1212

  507 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1345


State 1213

  476 expr: expr '?' "as" "name" .

    $default  reduce using rule 476 (expr)


State 1214

  480 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 480 (expr)


State 1215

  465 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1346
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1216

  505 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1347


State 1217

  456 expr: expr '.' "?." "name" .

    $default  reduce using rule 456 (expr)


State 1218

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  454     | expr '.' "?[" expr . ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 1348


State 1219

  502 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1349
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1220

  400 expr_field: expr '.' "name" '(' . ')'
  401           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1350
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1351
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1221

  504 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1352


State 1222

  399 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 399 (expr_field)


State 1223

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  452     | expr '.' '[' expr . ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 1353


State 1224

  404 expr_field: expr '.' $@26 error . $@27

    $default  reduce using rule 403 ($@27)

    $@27  go to state 1354


State 1225

  451 expr: expr '[' expr ']' .

    $default  reduce using rule 451 (expr)


State 1226

  409 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 409 (expr_call)


State 1227

  606 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@43 enum_list $@44 '}' .

    $default  reduce using rule 606 (enum_declaration)


State 1228

  586 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 586 (enum_list)


State 1229

  118 optional_annotation_list: '[' annotation_list ']' .
  530 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1355

    $default  reduce using rule 118 (optional_annotation_list)


State 1230

  518 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 518 (optional_public_or_private_member_variable)


State 1231

  519 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 519 (optional_public_or_private_member_variable)


State 1232

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@35 function_declaration_header ';'
  529                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "abstract"  shift, and go to state 1356
    "static"    shift, and go to state 1233

    $default  reduce using rule 520 (optional_static_member_variable)

    optional_static_member_variable  go to state 1357


State 1233

  521 optional_static_member_variable: "static" .

    $default  reduce using rule 521 (optional_static_member_variable)


State 1234

  522 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1358
    "sealed"    shift, and go to state 1359

    $default  reduce using rule 512 (optional_override)

    optional_override  go to state 1360


State 1235

  525 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration ';' .

    $default  reduce using rule 525 (struct_variable_declaration_list)


State 1236

  568 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 568 (let_variable_declaration)


State 1237

  684 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 684 (type_declaration_no_options)


State 1238

  707 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 707 (type_declaration_no_options)


State 1239

  710 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57 .

    $default  reduce using rule 710 (type_declaration_no_options)


State 1240

  673 table_type_pair: type_declaration ';' type_declaration .
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 673 (table_type_pair)


State 1241

  713 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 713 (type_declaration_no_options)


State 1242

  703 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 703 (type_declaration_no_options)


State 1243

  671 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48 .

    $default  reduce using rule 671 (bitfield_type_declaration)


State 1244

  665 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 665 (bitfield_bits)


State 1245

  717 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 717 (type_declaration_no_options)


State 1246

  720 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 719 ($@63)

    $@63  go to state 1361


State 1247

  724 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65 .

    $default  reduce using rule 724 (type_declaration_no_options)


State 1248

  727 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' . $@67

    $default  reduce using rule 726 ($@67)

    $@67  go to state 1362


State 1249

  731 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69 .

    $default  reduce using rule 731 (type_declaration_no_options)


State 1250

  734 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' . $@71

    $default  reduce using rule 733 ($@71)

    $@71  go to state 1363


State 1251

  737 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73 .

    $default  reduce using rule 737 (type_declaration_no_options)


State 1252

  539 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 539 (tuple_type_list)


State 1253

  740 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75 .

    $default  reduce using rule 740 (type_declaration_no_options)


State 1254

  545 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 545 (variant_type_list)


State 1255

  688 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1364


State 1256

  250 type_declaration_no_options_list: type_declaration_no_options_list ';' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1365


State 1257

  626 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 626 (variable_name_with_pos_list)


State 1258

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  554 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 554 (variable_declaration)


State 1259

  796 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' . $@89 '(' make_struct_dim ')'

    $default  reduce using rule 795 ($@89)

    $@89  go to state 1366


State 1260

  799 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' . $@91 '(' make_struct_dim ')'

    $default  reduce using rule 798 ($@91)

    $@91  go to state 1367


State 1261

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  318 expr_list: expr_list . ',' expr

    ','  shift, and go to state 849
    '{'  shift, and go to state 284

    expression_block  go to state 1368


State 1262

  269 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 268 ($@12)

    $@12  go to state 1369


State 1263

  273 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 273 (expr_new)


State 1264

  274 expr_new: "new" new_type_declaration '(' make_struct_dim ')' .

    $default  reduce using rule 274 (expr_new)


State 1265

  315 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  316               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1370
    ';'  shift, and go to state 1371


State 1266

  314 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 314 (expr_type_info)


State 1267

  313 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 312 ($@20)

    $@20  go to state 1372


State 1268

  823 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' . $@99 '(' expr_list optional_comma ')'

    $default  reduce using rule 822 ($@99)

    $@99  go to state 1373


State 1269

  820 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 820 (make_dim_decl)


State 1270

  835 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 705
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    expr_map_tuple_list     go to state 1374
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1271

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  836 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1375
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1272

  834 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 834 (make_table_decl)


State 1273

   81 expression_with_alias: "assume" "name" '=' $@5 expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 81 (expression_with_alias)


State 1274

  304 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 303 ($@14)

    $@14  go to state 1376


State 1275

  307 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 306 ($@16)

    $@16  go to state 1377


State 1276

  310 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 309 ($@18)

    $@18  go to state 1378


State 1277

  827 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' . $@101 '(' expr_list optional_comma ')'

    $default  reduce using rule 826 ($@101)

    $@101  go to state 1379


State 1278

  824 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 824 (make_dim_decl)


State 1279

  805 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' . $@95

    $default  reduce using rule 804 ($@95)

    $@95  go to state 1380


State 1280

  814 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' . $@97 '(' make_struct_dim ')'

    $default  reduce using rule 813 ($@97)

    $@97  go to state 1381


State 1281

  811 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 811 (make_tuple_call)


State 1282

  802 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' . $@93 '(' make_struct_dim ')'

    $default  reduce using rule 801 ($@93)

    $@93  go to state 1382


State 1283

  462 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  463     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1383


State 1284

  334 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1384


State 1285

  500 expr_mtag: "$c" '(' expr ')' '(' . ')'
  501          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1385
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1386
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1286

  318 expr_list: expr_list . ',' expr
  842 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 849
    ';'  shift, and go to state 1387


State 1287

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  768 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  769                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1388


State 1288

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  765 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 765 (make_struct_fields)


State 1289

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  764 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 764 (make_struct_fields)


State 1290

  764 make_struct_fields: "name" . copy_or_move expr
  765                   | "name" . ":=" expr

    "<-"  shift, and go to state 616
    ":="  shift, and go to state 1138
    '='   shift, and go to state 618

    copy_or_move  go to state 1139


State 1291

  773 make_struct_dim: make_struct_dim . ';' make_struct_fields
  791 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 899
    ';'      shift, and go to state 1145

    $default  reduce using rule 774 (optional_block)

    optional_block  go to state 1389


State 1292

  790 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1147
    ",]]"  shift, and go to state 1148
    ']'    shift, and go to state 1149

    optional_trailing_delim_sqr_sqr  go to state 1390


State 1293

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  807 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 807 (make_tuple)


State 1294

  770 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  771                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1391


State 1295

  766 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  767                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 616
    ":="  shift, and go to state 1392
    '='   shift, and go to state 618

    copy_or_move  go to state 1393


State 1296

  766 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  767                   | make_struct_fields . ',' "name" ":=" expr
  770                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  771                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  773 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 1144

    $default  reduce using rule 773 (make_struct_dim)


State 1297

  788 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 788 (make_struct_decl)


State 1298

  782 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 782 (optional_trailing_delim_sqr_sqr)


State 1299

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  808 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 808 (make_tuple)


State 1300

  780 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 780 (optional_trailing_semicolon_sqr_sqr)


State 1301

  808 make_tuple: make_tuple . ',' expr
  816 make_dim: make_dim ';' make_tuple .

    ','  shift, and go to state 1151

    $default  reduce using rule 816 (make_dim)


State 1302

  318 expr_list: expr_list . ',' expr
  843 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 849
    ';'  shift, and go to state 1394


State 1303

  773 make_struct_dim: make_struct_dim . ';' make_struct_fields
  793 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 899
    ';'      shift, and go to state 1145

    $default  reduce using rule 774 (optional_block)

    optional_block  go to state 1395


State 1304

  786 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 786 (optional_trailing_delim_cur_sqr)


State 1305

  787 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 787 (optional_trailing_delim_cur_sqr)


State 1306

  785 optional_trailing_delim_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1396


State 1307

  792 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 792 (make_struct_decl)


State 1308

  778 optional_trailing_semicolon_cur_sqr: '}' ']' .

    $default  reduce using rule 778 (optional_trailing_semicolon_cur_sqr)


State 1309

  318 expr_list: expr_list . ',' expr
  845 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . ';' make_map_tuple array_comprehension_where '}' '}'

    ','  shift, and go to state 849
    ';'  shift, and go to state 1397


State 1310

  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' . $@8 expr

    $default  reduce using rule 252 ($@8)

    $@8  go to state 1398


State 1311

  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' . $@10 optional_expr_list_in_braces

    $default  reduce using rule 255 ($@10)

    $@10  go to state 1399


State 1312

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1313

  318 expr_list: expr_list . ',' expr
  841 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']'

    ','  shift, and go to state 849
    ';'  shift, and go to state 1400


State 1314

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  390 func_addr_name: "$i" '(' expr . ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1401


State 1315

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  509          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1402


State 1316

  394 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options . '>' $@23 func_addr_name
  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1403
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1317

  397 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list . optional_function_type '>' $@25 func_addr_name

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1404


State 1318

  318 expr_list: expr_list . ',' expr
  844 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list . ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 849
    ';'  shift, and go to state 1405


State 1319

  217 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 217 (expression_block)


State 1320

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1321

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '{'    shift, and go to state 284

    expression_block  go to state 1406


State 1322

   66 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 65 ($@2)

    $@2  go to state 1407


State 1323

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . ';'

    ';'  shift, and go to state 1408


State 1324

  337 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1409


State 1325

  385 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1410


State 1326

  386 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  817 make_dim_decl: '[' . expr_list optional_comma ']'
  841 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 900
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 901
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 700
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_fields      go to state 1411
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1327

  295 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1412


State 1328

  296 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  298                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr ';'

    ']'  shift, and go to state 1413


State 1329

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  299                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr ';'

    ':'  shift, and go to state 1414
    '&'  shift, and go to state 382

    $default  reduce using rule 560 (optional_ref)

    optional_ref  go to state 1415


State 1330

  327 capture_entry: "<-" "name" .

    $default  reduce using rule 327 (capture_entry)


State 1331

  328 capture_entry: ":=" "name" .

    $default  reduce using rule 328 (capture_entry)


State 1332

  326 capture_entry: '=' "name" .

    $default  reduce using rule 326 (capture_entry)


State 1333

  325 capture_entry: '&' "name" .

    $default  reduce using rule 325 (capture_entry)


State 1334

  330 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1194
    ":="  shift, and go to state 1195
    '='   shift, and go to state 1196
    '&'   shift, and go to state 1197

    capture_entry  go to state 1416


State 1335

  332 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1417


State 1336

  335 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1418
    '{'   shift, and go to state 284

    expression_block       go to state 1419
    block_or_simple_block  go to state 1420


State 1337

  468 expr: expr "is" "type" '<' $@28 . type_declaration_no_options '>' $@29

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1421


State 1338

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  508          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1422


State 1339

  474 expr: expr "as" "type" '<' $@30 . type_declaration '>' $@31

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1423


State 1340

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  506          | expr "as" "$f" '(' expr . ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1424


State 1341

  387 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 387 (expr_method_call)


State 1342

  318 expr_list: expr_list . ',' expr
  388 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 849
    ')'  shift, and go to state 1425


State 1343

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  503          | expr "?." "$f" '(' expr . ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1426


State 1344

  479 expr: expr '?' "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 477 ($@32)

    $@32  go to state 1427


State 1345

  507 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1428
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1346

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  465     | expr '?' expr ':' expr .
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 465 (expr)


State 1347

  505 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1429
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1348

  454 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 454 (expr)


State 1349

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  502          | expr '.' "$f" '(' expr . ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1430


State 1350

  400 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 400 (expr_field)


State 1351

  318 expr_list: expr_list . ',' expr
  401 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 849
    ')'  shift, and go to state 1431


State 1352

  504 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1432
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1353

  452 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 452 (expr)


State 1354

  404 expr_field: expr '.' $@26 error $@27 .

    $default  reduce using rule 404 (expr_field)


State 1355

  530 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 530 (struct_variable_declaration_list)


State 1356

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@35 function_declaration_header ';'

    "const"  shift, and go to state 1433

    $default  reduce using rule 515 (optional_constant)

    optional_constant  go to state 1434


State 1357

  529 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@36 function_declaration_header expression_block

    "override"  shift, and go to state 1358
    "sealed"    shift, and go to state 1359

    $default  reduce using rule 512 (optional_override)

    optional_override  go to state 1435


State 1358

  513 optional_override: "override" .

    $default  reduce using rule 513 (optional_override)


State 1359

  514 optional_override: "sealed" .

    $default  reduce using rule 514 (optional_override)


State 1360

  522 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1230
    "private"  shift, and go to state 1231

    $default  reduce using rule 517 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1436


State 1361

  720 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 720 (type_declaration_no_options)


State 1362

  727 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67 .

    $default  reduce using rule 727 (type_declaration_no_options)


State 1363

  734 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71 .

    $default  reduce using rule 734 (type_declaration_no_options)


State 1364

  688 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 245 (optional_expr_list)

    string_builder          go to state 500
    expr_reader             go to state 501
    optional_expr_list      go to state 1437
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 818
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1365

  250 type_declaration_no_options_list: type_declaration_no_options_list ';' type_declaration .
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 250 (type_declaration_no_options_list)


State 1366

  796 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 . '(' make_struct_dim ')'

    '('  shift, and go to state 1438


State 1367

  799 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 . '(' make_struct_dim ')'

    '('  shift, and go to state 1439


State 1368

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 76 (expression_for_loop)


State 1369

  269 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 269 (new_type_declaration)


State 1370

  315 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1440
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1371

  316 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1441


State 1372

  313 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 313 (expr_type_decl)


State 1373

  823 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1442


State 1374

  831 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  835 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 937

    $default  reduce using rule 839 (optional_comma)

    optional_comma  go to state 1443


State 1375

  836 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1444


State 1376

  304 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1445
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1377

  307 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1446
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1378

  310 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1447
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1379

  827 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1448


State 1380

  805 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 .

    $default  reduce using rule 805 (make_struct_decl)


State 1381

  814 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 . '(' make_struct_dim ')'

    '('  shift, and go to state 1449


State 1382

  802 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 . '(' make_struct_dim ')'

    '('  shift, and go to state 1450


State 1383

  462 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  463     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1451
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1452
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1384

  334 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1418
    '{'   shift, and go to state 284

    expression_block       go to state 1419
    block_or_simple_block  go to state 1453


State 1385

  500 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 500 (expr_mtag)


State 1386

  318 expr_list: expr_list . ',' expr
  501 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 849
    ')'  shift, and go to state 1454


State 1387

  842 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1455
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1388

  768 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  769                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 616
    ":="  shift, and go to state 1456
    '='   shift, and go to state 618

    copy_or_move  go to state 1457


State 1389

  791 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1147
    ",]]"  shift, and go to state 1148
    ']'    shift, and go to state 1149

    optional_trailing_delim_sqr_sqr  go to state 1458


State 1390

  790 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 790 (make_struct_decl)


State 1391

  770 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  771                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1459
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1392

  767 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1460
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1393

  766 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1461
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1394

  843 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1462
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1395

  793 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1304
    ",}]"  shift, and go to state 1305
    '}'    shift, and go to state 1306

    optional_trailing_delim_cur_sqr  go to state 1463


State 1396

  785 optional_trailing_delim_cur_sqr: '}' ']' .

    $default  reduce using rule 785 (optional_trailing_delim_cur_sqr)


State 1397

  845 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' . make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 1464
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1398

  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1465
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1399

  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 . optional_expr_list_in_braces

    '('  shift, and go to state 1466

    '('       [reduce using rule 247 (optional_expr_list_in_braces)]
    $default  reduce using rule 247 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1467


State 1400

  841 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1468
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1401

  390 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 390 (func_addr_name)


State 1402

  509 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 509 (expr_mtag)


State 1403

  394 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' . $@23 func_addr_name

    $default  reduce using rule 393 ($@23)

    $@23  go to state 1469


State 1404

  397 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type . '>' $@25 func_addr_name

    '>'  shift, and go to state 1470


State 1405

  844 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 1471
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1406

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1180
    "elif"         shift, and go to state 1181
    "static_elif"  shift, and go to state 1182

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1183
    expression_else      go to state 1472


State 1407

   66 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 1473
    "null"                            shift, and go to state 439
    "break"                           shift, and go to state 440
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "continue"                        shift, and go to state 450
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "yield"                           shift, and go to state 1474
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder             go to state 500
    expr_reader                go to state 501
    expression_if_one_liner    go to state 1475
    expression_keyword         go to state 561
    name_in_namespace          go to state 517
    expr_new                   go to state 519
    expression_break           go to state 1476
    expression_continue        go to state 1477
    expression_return_no_pipe  go to state 1478
    expression_yield_no_pipe   go to state 1479
    expr_cast                  go to state 529
    expr_type_decl             go to state 530
    expr_type_info             go to state 531
    block_or_lambda            go to state 532
    expr_full_block            go to state 533
    expr_numeric_const         go to state 534
    expr_named_call            go to state 537
    expr_method_call           go to state 538
    func_addr_expr             go to state 539
    expr_field                 go to state 540
    expr_call                  go to state 541
    expr                       go to state 1480
    expr_mtag                  go to state 543
    basic_type_declaration     go to state 544
    make_decl                  go to state 545
    make_struct_decl           go to state 546
    make_tuple_call            go to state 547
    make_dim_decl              go to state 548
    make_table_decl            go to state 549
    array_comprehension        go to state 550


State 1408

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';' .

    $default  reduce using rule 74 (expression_if_then_else)


State 1409

  337 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1481


State 1410

  385 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 385 (expr_named_call)


State 1411

  386 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  766 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  767                   | make_struct_fields . ',' "name" ":=" expr
  770                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  771                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1144
    ']'  shift, and go to state 1482


State 1412

  295 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 295 (tuple_expansion)


State 1413

  296 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  298                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr ';'

    ':'  shift, and go to state 1483
    '&'  shift, and go to state 382

    $default  reduce using rule 560 (optional_ref)

    optional_ref  go to state 1484


State 1414

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1485


State 1415

  299 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 566
    ":="  shift, and go to state 567
    '='   shift, and go to state 568

    copy_or_move_or_clone  go to state 1486


State 1416

  330 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 330 (capture_list)


State 1417

  332 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 332 (optional_capture_list)


State 1418

  320 block_or_simple_block: "=>" . expr
  321                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 1487
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1488
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1419

  319 block_or_simple_block: expression_block .

    $default  reduce using rule 319 (block_or_simple_block)


State 1420

  335 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 335 (expr_full_block)


State 1421

  468 expr: expr "is" "type" '<' $@28 type_declaration_no_options . '>' $@29
  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1489
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1422

  508 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 508 (expr_mtag)


State 1423

  474 expr: expr "as" "type" '<' $@30 type_declaration . '>' $@31
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1490


State 1424

  506 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 506 (expr_mtag)


State 1425

  388 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 388 (expr_method_call)


State 1426

  503 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 503 (expr_mtag)


State 1427

  479 expr: expr '?' "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1491


State 1428

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  507          | expr '?' "as" "$f" '(' expr . ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1492


State 1429

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  505          | expr '.' "?." "$f" '(' expr . ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1493


State 1430

  502 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 502 (expr_mtag)


State 1431

  401 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 401 (expr_field)


State 1432

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  504          | expr '.' '.' "$f" '(' expr . ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1494


State 1433

  516 optional_constant: "const" .

    $default  reduce using rule 516 (optional_constant)


State 1434

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@35 function_declaration_header ';'

    $default  reduce using rule 526 ($@35)

    $@35  go to state 1495


State 1435

  529 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@36 function_declaration_header expression_block

    "const"  shift, and go to state 1433

    $default  reduce using rule 515 (optional_constant)

    optional_constant  go to state 1496


State 1436

  522 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_declaration         go to state 1497
    variable_name_with_pos_list  go to state 421


State 1437

  688 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1498


State 1438

  796 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 900
    "name"  shift, and go to state 1290

    make_struct_fields  go to state 906
    make_struct_dim     go to state 1499


State 1439

  799 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 900
    "name"  shift, and go to state 1290

    make_struct_fields  go to state 906
    make_struct_dim     go to state 1500


State 1440

  315 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1501


State 1441

  316 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1502


State 1442

  823 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1503
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1443

  835 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1504


State 1444

  836 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 705
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    expr_map_tuple_list     go to state 1505
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1445

  304 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 304 (expr_cast)


State 1446

  307 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 307 (expr_cast)


State 1447

  310 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 310 (expr_cast)


State 1448

  827 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1506
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1449

  814 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 900
    "name"  shift, and go to state 1290

    make_struct_fields  go to state 906
    make_struct_dim     go to state 1507


State 1450

  802 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 900
    "name"  shift, and go to state 1290

    make_struct_fields  go to state 906
    make_struct_dim     go to state 1508


State 1451

  462 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 462 (expr)


State 1452

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  463     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1509


State 1453

  334 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 334 (expr_block)


State 1454

  501 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 501 (expr_mtag)


State 1455

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  842 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1510

    $default  reduce using rule 837 (array_comprehension_where)

    array_comprehension_where  go to state 1511


State 1456

  769 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1512
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1457

  768 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1513
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1458

  791 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 791 (make_struct_decl)


State 1459

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  770 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  771                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1514


State 1460

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  767 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 767 (make_struct_fields)


State 1461

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  766 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 766 (make_struct_fields)


State 1462

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  843 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1510

    $default  reduce using rule 837 (array_comprehension_where)

    array_comprehension_where  go to state 1515


State 1463

  793 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 793 (make_struct_decl)


State 1464

  845 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple . array_comprehension_where '}' '}'

    ';'  shift, and go to state 1510

    $default  reduce using rule 837 (array_comprehension_where)

    array_comprehension_where  go to state 1516


State 1465

  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 253 (expression_keyword)


State 1466

  248 optional_expr_list_in_braces: '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 245 (optional_expr_list)

    string_builder          go to state 500
    expr_reader             go to state 501
    optional_expr_list      go to state 1517
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 818
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1467

  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces .

    $default  reduce using rule 256 (expression_keyword)


State 1468

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  841 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1510

    $default  reduce using rule 837 (array_comprehension_where)

    array_comprehension_where  go to state 1518


State 1469

  394 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 931
    "name"  shift, and go to state 59

    name_in_namespace  go to state 934
    func_addr_name     go to state 1519


State 1470

  397 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' . $@25 func_addr_name

    $default  reduce using rule 396 ($@25)

    $@25  go to state 1520


State 1471

  844 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1510

    $default  reduce using rule 837 (array_comprehension_where)

    array_comprehension_where  go to state 1521


State 1472

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1473

  278 expression_return_no_pipe: "return" .
  279                          | "return" . expr_list
  280                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 1522
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 278 (expression_return_no_pipe)

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 637
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1474

  284 expression_yield_no_pipe: "yield" . expr
  285                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 1523
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1524
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1475

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 66 (expression_else_one_liner)


State 1476

   70 expression_if_one_liner: expression_break .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1477

   71 expression_if_one_liner: expression_continue .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1478

   68 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1479

   69 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1480

   67 expression_if_one_liner: expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 67 (expression_if_one_liner)


State 1481

  337 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1525


State 1482

  386 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1526


State 1483

  296 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1527


State 1484

  298 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 566
    ":="  shift, and go to state 567
    '='   shift, and go to state 568

    copy_or_move_or_clone  go to state 1528


State 1485

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 566
    "??"        shift, and go to state 403
    ":="        shift, and go to state 567
    '='         shift, and go to state 568
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 1529
    dim_list               go to state 409


State 1486

  299 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1530
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1487

  321 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1531
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1488

  320 block_or_simple_block: "=>" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    ".."  error (nonassociative)

    $default  reduce using rule 320 (block_or_simple_block)


State 1489

  468 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' . $@29

    $default  reduce using rule 467 ($@29)

    $@29  go to state 1532


State 1490

  474 expr: expr "as" "type" '<' $@30 type_declaration '>' . $@31

    $default  reduce using rule 473 ($@31)

    $@31  go to state 1533


State 1491

  479 expr: expr '?' "as" "type" '<' $@32 type_declaration . '>' $@33
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1534


State 1492

  507 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 507 (expr_mtag)


State 1493

  505 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 505 (expr_mtag)


State 1494

  504 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 504 (expr_mtag)


State 1495

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 . function_declaration_header ';'

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1535


State 1496

  529 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@36 function_declaration_header expression_block

    $default  reduce using rule 528 ($@36)

    $@36  go to state 1536


State 1497

  522 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 522 (structure_variable_declaration)


State 1498

  688 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 688 (type_declaration_no_options)


State 1499

  773 make_struct_dim: make_struct_dim . ';' make_struct_fields
  796 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1537
    ';'  shift, and go to state 1145


State 1500

  773 make_struct_dim: make_struct_dim . ';' make_struct_fields
  799 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1538
    ';'  shift, and go to state 1145


State 1501

  315 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 315 (expr_type_info)


State 1502

  316 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1539
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1503

  318 expr_list: expr_list . ',' expr
  823 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 928

    $default  reduce using rule 839 (optional_comma)

    optional_comma  go to state 1540


State 1504

  835 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 835 (make_table_decl)


State 1505

  831 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  836 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 937

    $default  reduce using rule 839 (optional_comma)

    optional_comma  go to state 1541


State 1506

  318 expr_list: expr_list . ',' expr
  827 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 928

    $default  reduce using rule 839 (optional_comma)

    optional_comma  go to state 1542


State 1507

  773 make_struct_dim: make_struct_dim . ';' make_struct_fields
  814 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1543
    ';'  shift, and go to state 1145


State 1508

  773 make_struct_dim: make_struct_dim . ';' make_struct_fields
  802 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1544
    ';'  shift, and go to state 1145


State 1509

  463 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 463 (expr)


State 1510

  838 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1545


State 1511

  842 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1546


State 1512

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  769 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 769 (make_struct_fields)


State 1513

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  768 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 768 (make_struct_fields)


State 1514

  770 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  771                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 616
    ":="  shift, and go to state 1547
    '='   shift, and go to state 618

    copy_or_move  go to state 1548


State 1515

  843 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1549


State 1516

  845 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where . '}' '}'

    '}'  shift, and go to state 1550


State 1517

  248 optional_expr_list_in_braces: '(' optional_expr_list . ')'

    ')'  shift, and go to state 1551


State 1518

  841 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1552


State 1519

  394 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name .

    $default  reduce using rule 394 (func_addr_expr)


State 1520

  397 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 931
    "name"  shift, and go to state 59

    name_in_namespace  go to state 934
    func_addr_name     go to state 1553


State 1521

  844 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1554


State 1522

  280 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 848
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1523

  285 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1555
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1524

  284 expression_yield_no_pipe: "yield" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 284 (expression_yield_no_pipe)


State 1525

  337 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 337 (expr_full_block_assumed_piped)


State 1526

  386 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 386 (expr_named_call)


State 1527

  296 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 566
    "??"        shift, and go to state 403
    ":="        shift, and go to state 567
    '='         shift, and go to state 568
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 1556
    dim_list               go to state 409


State 1528

  298 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1557
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1529

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1558
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1530

  299 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . ';'
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1559


State 1531

  321 block_or_simple_block: "=>" "<-" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 321 (block_or_simple_block)


State 1532

  468 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29 .

    $default  reduce using rule 468 (expr)


State 1533

  474 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31 .

    $default  reduce using rule 474 (expr)


State 1534

  479 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 478 ($@33)

    $@33  go to state 1560


State 1535

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header . ';'

    ';'  shift, and go to state 1561


State 1536

  529 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1562


State 1537

  796 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')' .

    $default  reduce using rule 796 (make_struct_decl)


State 1538

  799 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')' .

    $default  reduce using rule 799 (make_struct_decl)


State 1539

  316 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1563


State 1540

  823 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1564


State 1541

  836 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1565


State 1542

  827 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1566


State 1543

  814 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')' .

    $default  reduce using rule 814 (make_tuple_call)


State 1544

  802 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')' .

    $default  reduce using rule 802 (make_struct_decl)


State 1545

  838 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1567
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1546

  842 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1568


State 1547

  771 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1569
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1548

  770 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1570
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1549

  843 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1571


State 1550

  845 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' . '}'

    '}'  shift, and go to state 1572


State 1551

  248 optional_expr_list_in_braces: '(' optional_expr_list ')' .

    $default  reduce using rule 248 (optional_expr_list_in_braces)


State 1552

  841 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' .

    $default  reduce using rule 841 (array_comprehension)


State 1553

  397 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name .

    $default  reduce using rule 397 (func_addr_expr)


State 1554

  844 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 844 (array_comprehension)


State 1555

  285 expression_yield_no_pipe: "yield" "<-" expr .
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 285 (expression_yield_no_pipe)


State 1556

  296 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1573
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1557

  298 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . ';'
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1574


State 1558

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . ';'
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1575


State 1559

  299 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 299 (tuple_expansion_variable_declaration)


State 1560

  479 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 479 (expr)


State 1561

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header ';' .

    $default  reduce using rule 527 (struct_variable_declaration_list)


State 1562

  529 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1576


State 1563

  316 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 316 (expr_type_info)


State 1564

  823 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')' .

    $default  reduce using rule 823 (make_dim_decl)


State 1565

  836 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 836 (make_table_decl)


State 1566

  827 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')' .

    $default  reduce using rule 827 (make_dim_decl)


State 1567

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  838 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 838 (array_comprehension_where)


State 1568

  842 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 842 (array_comprehension)


State 1569

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  771 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 771 (make_struct_fields)


State 1570

  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'
  770 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 770 (make_struct_fields)


State 1571

  843 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 843 (array_comprehension)


State 1572

  845 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}' .

    $default  reduce using rule 845 (array_comprehension)


State 1573

  296 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . ';'
  387 expr_method_call: expr . "->" "name" '(' ')'
  388                 | expr . "->" "name" '(' expr_list ')'
  398 expr_field: expr . '.' "name"
  399           | expr . '.' '.' "name"
  400           | expr . '.' "name" '(' ')'
  401           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' $@26 error $@27
  424 expr: expr . "<<" expr
  425     | expr . ">>" expr
  426     | expr . "<<<" expr
  427     | expr . ">>>" expr
  428     | expr . '+' expr
  429     | expr . '-' expr
  430     | expr . '*' expr
  431     | expr . '/' expr
  432     | expr . '%' expr
  433     | expr . '<' expr
  434     | expr . '>' expr
  435     | expr . "==" expr
  436     | expr . "!=" expr
  437     | expr . "<=" expr
  438     | expr . ">=" expr
  439     | expr . '&' expr
  440     | expr . '|' expr
  441     | expr . '^' expr
  442     | expr . "&&" expr
  443     | expr . "||" expr
  444     | expr . "^^" expr
  445     | expr . ".." expr
  448     | expr . "++"
  449     | expr . "--"
  451     | expr . '[' expr ']'
  452     | expr . '.' '[' expr ']'
  453     | expr . "?[" expr ']'
  454     | expr . '.' "?[" expr ']'
  455     | expr . "?." "name"
  456     | expr . '.' "?." "name"
  464     | expr . "??" expr
  465     | expr . '?' expr ':' expr
  468     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  469     | expr . "is" basic_type_declaration
  470     | expr . "is" "name"
  471     | expr . "as" "name"
  474     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  475     | expr . "as" basic_type_declaration
  476     | expr . '?' "as" "name"
  479     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  480     | expr . '?' "as" basic_type_declaration
  488     | expr . "<|" expr
  489     | expr . "|>" expr
  490     | expr . "|>" basic_type_declaration
  502 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr . "?." "$f" '(' expr ')'
  504          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr . "as" "$f" '(' expr ')'
  507          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1577


State 1574

  298 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 298 (tuple_expansion_variable_declaration)


State 1575

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 297 (tuple_expansion_variable_declaration)


State 1576

  529 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block .

    $default  reduce using rule 529 (struct_variable_declaration_list)


State 1577

  296 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 296 (tuple_expansion_variable_declaration)
