Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 319 conflicts: 1 shift/reduce
State 416 conflicts: 1 shift/reduce
State 520 conflicts: 2 shift/reduce
State 522 conflicts: 2 shift/reduce
State 629 conflicts: 1 shift/reduce
State 825 conflicts: 1 shift/reduce
State 1052 conflicts: 1 shift/reduce
State 1168 conflicts: 1 shift/reduce
State 1448 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty

   65 $@2: %empty

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner

   67 expression_if_one_liner: expr
   68                        | expression_return_no_pipe
   69                        | expression_yield_no_pipe
   70                        | expression_break
   71                        | expression_continue

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else

   73 $@3: %empty

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression"

   75 $@4: %empty

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   77 expression_unsafe: "unsafe" expression_block

   78 expression_while_loop: "while" expr expression_block

   79 expression_with: "with" expr expression_block

   80 $@5: %empty

   81 expression_with_alias: "assume" "name" '=' $@5 expr

   82 annotation_argument_value: string_constant
   83                          | "name"
   84                          | "integer constant"
   85                          | "floating point constant"
   86                          | "true"
   87                          | "false"

   88 annotation_argument_value_list: annotation_argument_value
   89                               | annotation_argument_value_list ',' annotation_argument_value

   90 annotation_argument_name: "name"
   91                         | "type"
   92                         | "in"

   93 annotation_argument: annotation_argument_name '=' string_constant
   94                    | annotation_argument_name '=' "name"
   95                    | annotation_argument_name '=' "integer constant"
   96                    | annotation_argument_name '=' "floating point constant"
   97                    | annotation_argument_name '=' "true"
   98                    | annotation_argument_name '=' "false"
   99                    | annotation_argument_name
  100                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  101 annotation_argument_list: annotation_argument
  102                         | annotation_argument_list ',' annotation_argument

  103 metadata_argument_list: '@' annotation_argument
  104                       | metadata_argument_list '@' annotation_argument

  105 annotation_declaration_name: name_in_namespace
  106                            | "require"
  107                            | "private"

  108 annotation_declaration_basic: annotation_declaration_name
  109                             | annotation_declaration_name '(' annotation_argument_list ')'

  110 annotation_declaration: annotation_declaration_basic
  111                       | '!' annotation_declaration
  112                       | annotation_declaration "&&" annotation_declaration
  113                       | annotation_declaration "||" annotation_declaration
  114                       | annotation_declaration "^^" annotation_declaration
  115                       | '(' annotation_declaration ')'
  116                       | "|>" annotation_declaration

  117 annotation_list: annotation_declaration
  118                | annotation_list ',' annotation_declaration

  119 optional_annotation_list: %empty
  120                         | '[' annotation_list ']'

  121 optional_function_argument_list: %empty
  122                                | '(' ')'
  123                                | '(' function_argument_list ')'

  124 optional_function_type: %empty
  125                       | ':' type_declaration

  126 function_name: "name"
  127              | "operator" '!'
  128              | "operator" '~'
  129              | "operator" "+="
  130              | "operator" "-="
  131              | "operator" "*="
  132              | "operator" "/="
  133              | "operator" "%="
  134              | "operator" "&="
  135              | "operator" "|="
  136              | "operator" "^="
  137              | "operator" "&&="
  138              | "operator" "||="
  139              | "operator" "^^="
  140              | "operator" "&&"
  141              | "operator" "||"
  142              | "operator" "^^"
  143              | "operator" '+'
  144              | "operator" '-'
  145              | "operator" '*'
  146              | "operator" '/'
  147              | "operator" '%'
  148              | "operator" '<'
  149              | "operator" '>'
  150              | "operator" ".."
  151              | "operator" "=="
  152              | "operator" "!="
  153              | "operator" "<="
  154              | "operator" ">="
  155              | "operator" '&'
  156              | "operator" '|'
  157              | "operator" '^'
  158              | "++" "operator"
  159              | "--" "operator"
  160              | "operator" "++"
  161              | "operator" "--"
  162              | "operator" "<<"
  163              | "operator" ">>"
  164              | "operator" "<<="
  165              | "operator" ">>="
  166              | "operator" "<<<"
  167              | "operator" ">>>"
  168              | "operator" "<<<="
  169              | "operator" ">>>="
  170              | "operator" '[' ']'
  171              | "operator" "?[" ']'
  172              | "operator" '.'
  173              | "operator" "?."
  174              | "operator" '.' "name"
  175              | "operator" '.' "name" ":="
  176              | "operator" "?." "name"
  177              | "operator" ":="
  178              | "operator" "delete"
  179              | "operator" "??"
  180              | "operator" "is"
  181              | "operator" "as"
  182              | "operator" "is" "name"
  183              | "operator" "as" "name"
  184              | "operator" '?' "as"
  185              | "operator" '?' "as" "name"
  186              | "bool"
  187              | "string"
  188              | "int"
  189              | "int2"
  190              | "int3"
  191              | "int4"
  192              | "uint"
  193              | "uint2"
  194              | "uint3"
  195              | "uint4"
  196              | "float"
  197              | "float2"
  198              | "float3"
  199              | "float4"
  200              | "range"
  201              | "urange"
  202              | "range64"
  203              | "urange64"
  204              | "int64"
  205              | "uint64"
  206              | "double"
  207              | "int8"
  208              | "uint8"
  209              | "int16"
  210              | "uint16"

  211 global_function_declaration: optional_annotation_list "def" function_declaration

  212 optional_public_or_private_function: %empty
  213                                    | "private"
  214                                    | "public"

  215 function_declaration_header: function_name optional_function_argument_list optional_function_type

  216 $@6: %empty

  217 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  218 expression_block: "begin of code block" expressions "end of code block"
  219                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  220 expr_call_pipe: expr expr_full_block_assumed_piped
  221               | expression_keyword expr_full_block_assumed_piped
  222               | "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped

  223 expression_any: "end of expression"
  224               | expr_pipe
  225               | expr_keyword
  226               | expr_assign_pipe
  227               | expr_assign "end of expression"
  228               | expression_delete "end of expression"
  229               | expression_let
  230               | expression_while_loop
  231               | expression_unsafe
  232               | expression_with
  233               | expression_with_alias
  234               | expression_for_loop
  235               | expression_break "end of expression"
  236               | expression_continue "end of expression"
  237               | expression_return
  238               | expression_yield
  239               | expression_if_then_else
  240               | expression_try_catch
  241               | expression_label "end of expression"
  242               | expression_goto "end of expression"
  243               | "pass" "end of expression"

  244 expressions: %empty
  245            | expressions expression_any
  246            | expressions error

  247 expr_keyword: "keyword" expr expression_block

  248 optional_expr_list: %empty
  249                   | expr_list optional_comma

  250 optional_expr_list_in_braces: %empty
  251                             | '(' optional_expr_list optional_comma ')'

  252 type_declaration_no_options_list: type_declaration
  253                                 | type_declaration_no_options_list "end of expression" type_declaration

  254 $@7: %empty

  255 $@8: %empty

  256 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr

  257 $@9: %empty

  258 $@10: %empty

  259 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

  260 expr_pipe: expr_assign " <|" expr_block
  261          | "@ <|" expr_block
  262          | "@@ <|" expr_block
  263          | "$ <|" expr_block
  264          | expr_call_pipe

  265 name_in_namespace: "name"
  266                  | "name" "::" "name"
  267                  | "::" "name"

  268 expression_delete: "delete" expr
  269                  | "delete" "explicit" expr

  270 $@11: %empty

  271 $@12: %empty

  272 new_type_declaration: '<' $@11 type_declaration '>' $@12
  273                     | structure_type_declaration

  274 expr_new: "new" new_type_declaration
  275         | "new" new_type_declaration '(' use_initializer ')'
  276         | "new" new_type_declaration '(' expr_list ')'
  277         | "new" new_type_declaration '(' make_struct_single ')'
  278         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  279         | "new" make_decl

  280 expression_break: "break"

  281 expression_continue: "continue"

  282 expression_return_no_pipe: "return"
  283                          | "return" expr_list
  284                          | "return" "<-" expr_list

  285 expression_return: expression_return_no_pipe "end of expression"
  286                  | "return" expr_pipe
  287                  | "return" "<-" expr_pipe

  288 expression_yield_no_pipe: "yield" expr
  289                         | "yield" "<-" expr

  290 expression_yield: expression_yield_no_pipe "end of expression"
  291                 | "yield" expr_pipe
  292                 | "yield" "<-" expr_pipe

  293 expression_try_catch: "try" expression_block "recover" expression_block

  294 kwd_let_var_or_nothing: "let"
  295                       | "var"
  296                       | %empty

  297 kwd_let: "let"
  298        | "var"

  299 optional_in_scope: "inscope"
  300                  | %empty

  301 tuple_expansion: "name"
  302                | tuple_expansion ',' "name"

  303 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  304                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  305                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  306                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  307 expression_let: kwd_let optional_in_scope let_variable_declaration
  308               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  309 $@13: %empty

  310 $@14: %empty

  311 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  312 $@15: %empty

  313 $@16: %empty

  314 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  315 $@17: %empty

  316 $@18: %empty

  317 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  318 $@19: %empty

  319 $@20: %empty

  320 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  321 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  322               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  323               | "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'
  324               | "typeinfo" name_in_namespace '(' expr ')'
  325               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  326               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  327 expr_list: expr
  328          | expr_list ',' expr

  329 block_or_simple_block: expression_block
  330                      | "=>" expr
  331                      | "=>" "<-" expr

  332 block_or_lambda: '$'
  333                | '@'
  334                | '@' '@'

  335 capture_entry: '&' "name"
  336              | '=' "name"
  337              | "<-" "name"
  338              | ":=" "name"

  339 capture_list: capture_entry
  340             | capture_list ',' capture_entry

  341 optional_capture_list: %empty
  342                      | "[[" capture_list ']' ']'

  343 expr_block: expression_block
  344           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  345 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  346 $@21: %empty

  347 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  348 expr_numeric_const: "integer constant"
  349                   | "unsigned integer constant"
  350                   | "long integer constant"
  351                   | "unsigned long integer constant"
  352                   | "unsigned int8 constant"
  353                   | "floating point constant"
  354                   | "double constant"

  355 expr_assign: expr
  356            | expr '=' expr
  357            | expr "<-" expr
  358            | expr ":=" expr
  359            | expr "&=" expr
  360            | expr "|=" expr
  361            | expr "^=" expr
  362            | expr "&&=" expr
  363            | expr "||=" expr
  364            | expr "^^=" expr
  365            | expr "+=" expr
  366            | expr "-=" expr
  367            | expr "*=" expr
  368            | expr "/=" expr
  369            | expr "%=" expr
  370            | expr "<<=" expr
  371            | expr ">>=" expr
  372            | expr "<<<=" expr
  373            | expr ">>>=" expr

  374 expr_assign_pipe_right: "@ <|" expr_block
  375                       | "@@ <|" expr_block
  376                       | "$ <|" expr_block
  377                       | expr_call_pipe

  378 expr_assign_pipe: expr '=' expr_assign_pipe_right
  379                 | expr "<-" expr_assign_pipe_right
  380                 | expr "&=" expr_assign_pipe_right
  381                 | expr "|=" expr_assign_pipe_right
  382                 | expr "^=" expr_assign_pipe_right
  383                 | expr "&&=" expr_assign_pipe_right
  384                 | expr "||=" expr_assign_pipe_right
  385                 | expr "^^=" expr_assign_pipe_right
  386                 | expr "+=" expr_assign_pipe_right
  387                 | expr "-=" expr_assign_pipe_right
  388                 | expr "*=" expr_assign_pipe_right
  389                 | expr "/=" expr_assign_pipe_right
  390                 | expr "%=" expr_assign_pipe_right
  391                 | expr "<<=" expr_assign_pipe_right
  392                 | expr ">>=" expr_assign_pipe_right
  393                 | expr "<<<=" expr_assign_pipe_right
  394                 | expr ">>>=" expr_assign_pipe_right

  395 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  396                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  397 expr_method_call: expr "->" "name" '(' ')'
  398                 | expr "->" "name" '(' expr_list ')'

  399 func_addr_name: name_in_namespace
  400               | "$i" '(' expr ')'

  401 func_addr_expr: '@' '@' func_addr_name

  402 $@22: %empty

  403 $@23: %empty

  404 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name

  405 $@24: %empty

  406 $@25: %empty

  407 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

  408 expr_field: expr '.' "name"
  409           | expr '.' '.' "name"
  410           | expr '.' "name" '(' ')'
  411           | expr '.' "name" '(' expr_list ')'

  412 $@26: %empty

  413 $@27: %empty

  414 expr_field: expr '.' $@26 error $@27

  415 expr_call: name_in_namespace '(' ')'
  416          | name_in_namespace '(' make_struct_single ')'
  417          | name_in_namespace '(' expr_list ')'
  418          | basic_type_declaration '(' ')'
  419          | basic_type_declaration '(' expr_list ')'

  420 expr: "null"
  421     | name_in_namespace
  422     | expr_numeric_const
  423     | expr_reader
  424     | string_builder
  425     | make_decl
  426     | "true"
  427     | "false"
  428     | expr_field
  429     | expr_mtag
  430     | '!' expr
  431     | '~' expr
  432     | '+' expr
  433     | '-' expr
  434     | expr "<<" expr
  435     | expr ">>" expr
  436     | expr "<<<" expr
  437     | expr ">>>" expr
  438     | expr '+' expr
  439     | expr '-' expr
  440     | expr '*' expr
  441     | expr '/' expr
  442     | expr '%' expr
  443     | expr '<' expr
  444     | expr '>' expr
  445     | expr "==" expr
  446     | expr "!=" expr
  447     | expr "<=" expr
  448     | expr ">=" expr
  449     | expr '&' expr
  450     | expr '|' expr
  451     | expr '^' expr
  452     | expr "&&" expr
  453     | expr "||" expr
  454     | expr "^^" expr
  455     | expr ".." expr
  456     | "++" expr
  457     | "--" expr
  458     | expr "++"
  459     | expr "--"
  460     | '(' expr_list optional_comma ')'
  461     | expr '[' expr ']'
  462     | expr '.' '[' expr ']'
  463     | expr "?[" expr ']'
  464     | expr '.' "?[" expr ']'
  465     | expr "?." "name"
  466     | expr '.' "?." "name"
  467     | func_addr_expr
  468     | expr_call
  469     | '*' expr
  470     | "deref" '(' expr ')'
  471     | "addr" '(' expr ')'
  472     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  473     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  474     | expr "??" expr
  475     | expr '?' expr ':' expr

  476 $@28: %empty

  477 $@29: %empty

  478 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr "is" basic_type_declaration
  480     | expr "is" "name"
  481     | expr "as" "name"

  482 $@30: %empty

  483 $@31: %empty

  484 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr "as" basic_type_declaration
  486     | expr '?' "as" "name"

  487 $@32: %empty

  488 $@33: %empty

  489 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr '?' "as" basic_type_declaration
  491     | expr_type_info
  492     | expr_type_decl
  493     | expr_cast
  494     | expr_new
  495     | expr_method_call
  496     | expr_named_call
  497     | expr_full_block
  498     | expr "<|" expr
  499     | expr "|>" expr
  500     | expr "|>" basic_type_declaration
  501     | name_in_namespace "name"
  502     | "unsafe" '(' expr ')'
  503     | expression_keyword

  504 expr_mtag: "$$" '(' expr ')'
  505          | "$i" '(' expr ')'
  506          | "$v" '(' expr ')'
  507          | "$b" '(' expr ')'
  508          | "$a" '(' expr ')'
  509          | "..."
  510          | "$c" '(' expr ')' '(' ')'
  511          | "$c" '(' expr ')' '(' expr_list ')'
  512          | expr '.' "$f" '(' expr ')'
  513          | expr "?." "$f" '(' expr ')'
  514          | expr '.' '.' "$f" '(' expr ')'
  515          | expr '.' "?." "$f" '(' expr ')'
  516          | expr "as" "$f" '(' expr ')'
  517          | expr '?' "as" "$f" '(' expr ')'
  518          | expr "is" "$f" '(' expr ')'
  519          | '@' '@' "$c" '(' expr ')'

  520 optional_field_annotation: %empty
  521                          | "[[" annotation_argument_list ']' ']'
  522                          | metadata_argument_list

  523 optional_override: %empty
  524                  | "override"
  525                  | "sealed"

  526 optional_constant: %empty
  527                  | "const"

  528 optional_public_or_private_member_variable: %empty
  529                                           | "public"
  530                                           | "private"

  531 optional_static_member_variable: %empty
  532                                | "static"

  533 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  534 struct_variable_declaration_list: %empty

  535 $@34: %empty

  536 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression"

  537 $@35: %empty

  538 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"

  539 $@36: %empty

  540 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  541                                 | struct_variable_declaration_list '[' annotation_list ']' "end of expression"

  542 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  543                              | "$a" '(' expr ')'

  544 function_argument_list: function_argument_declaration
  545                       | function_argument_list "end of expression" function_argument_declaration

  546 tuple_type: type_declaration
  547           | "name" ':' type_declaration

  548 tuple_type_list: tuple_type
  549                | tuple_type_list "end of expression" tuple_type

  550 tuple_alias_type_list: %empty
  551                      | tuple_alias_type_list "end of expression"
  552                      | tuple_alias_type_list tuple_type "end of expression"

  553 variant_type: "name" ':' type_declaration

  554 variant_type_list: variant_type
  555                  | variant_type_list "end of expression" variant_type

  556 variant_alias_type_list: %empty
  557                        | variant_alias_type_list "end of expression"
  558                        | variant_alias_type_list variant_type "end of expression"

  559 copy_or_move: '='
  560             | "<-"

  561 variable_declaration: variable_name_with_pos_list
  562                     | variable_name_with_pos_list '&'
  563                     | variable_name_with_pos_list ':' type_declaration
  564                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  565                     | variable_name_with_pos_list copy_or_move expr
  566                     | variable_name_with_pos_list copy_or_move expr_pipe

  567 copy_or_move_or_clone: '='
  568                      | "<-"
  569                      | ":="

  570 optional_ref: %empty
  571             | '&'

  572 let_variable_name_with_pos_list: "name"
  573                                | "$i" '(' expr ')'
  574                                | "name" "aka" "name"
  575                                | let_variable_name_with_pos_list ',' "name"
  576                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  577 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  578                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  579                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  580                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  581                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  582 global_variable_declaration_list: %empty

  583 $@37: %empty

  584 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration

  585 optional_shared: %empty
  586                | "shared"

  587 optional_public_or_private_variable: %empty
  588                                    | "private"
  589                                    | "public"

  590 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  591 $@38: %empty

  592 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

  593 enum_list: %empty
  594          | enum_list "end of expression"
  595          | enum_list "name" "end of expression"
  596          | enum_list "name" '=' expr "end of expression"

  597 optional_public_or_private_alias: %empty
  598                                 | "private"
  599                                 | "public"

  600 $@39: %empty

  601 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration

  602 alias_list: single_alias "end of expression"
  603           | alias_list single_alias "end of expression"

  604 alias_declaration: "typedef" "begin of code block" alias_list "end of code block"

  605 $@40: %empty

  606 alias_declaration: "typedef" $@40 single_alias "end of expression"

  607 optional_public_or_private_enum: %empty
  608                                | "private"
  609                                | "public"

  610 enum_name: "name"

  611 $@41: %empty

  612 $@42: %empty

  613 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"

  614 $@43: %empty

  615 $@44: %empty

  616 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

  617 optional_structure_parent: %empty
  618                          | ':' name_in_namespace

  619 optional_sealed: %empty
  620                | "sealed"

  621 structure_name: optional_sealed "name" optional_structure_parent

  622 class_or_struct: "class"
  623                | "struct"

  624 optional_public_or_private_structure: %empty
  625                                     | "private"
  626                                     | "public"

  627 optional_struct_variable_declaration_list: %empty
  628                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  629 $@45: %empty

  630 $@46: %empty

  631 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

  632 variable_name_with_pos_list: "name"
  633                            | "$i" '(' expr ')'
  634                            | "name" "aka" "name"
  635                            | variable_name_with_pos_list ',' "name"
  636                            | variable_name_with_pos_list ',' "name" "aka" "name"

  637 basic_type_declaration: "bool"
  638                       | "string"
  639                       | "int"
  640                       | "int8"
  641                       | "int16"
  642                       | "int64"
  643                       | "int2"
  644                       | "int3"
  645                       | "int4"
  646                       | "uint"
  647                       | "uint8"
  648                       | "uint16"
  649                       | "uint64"
  650                       | "uint2"
  651                       | "uint3"
  652                       | "uint4"
  653                       | "float"
  654                       | "float2"
  655                       | "float3"
  656                       | "float4"
  657                       | "void"
  658                       | "range"
  659                       | "urange"
  660                       | "range64"
  661                       | "urange64"
  662                       | "double"
  663                       | "bitfield"

  664 enum_basic_type_declaration: "int"
  665                            | "int8"
  666                            | "int16"
  667                            | "uint"
  668                            | "uint8"
  669                            | "uint16"
  670                            | "int64"
  671                            | "uint64"

  672 structure_type_declaration: name_in_namespace

  673 auto_type_declaration: "auto"
  674                      | "auto" '(' "name" ')'
  675                      | "$t" '(' expr ')'

  676 bitfield_bits: "name"
  677              | bitfield_bits "end of expression" "name"

  678 bitfield_alias_bits: %empty
  679                    | bitfield_alias_bits "end of expression"
  680                    | bitfield_alias_bits "name" "end of expression"

  681 $@47: %empty

  682 $@48: %empty

  683 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48

  684 table_type_pair: type_declaration
  685                | type_declaration "end of expression" type_declaration

  686 dim_list: '[' expr ']'
  687         | dim_list '[' expr ']'

  688 type_declaration_no_options: basic_type_declaration
  689                            | auto_type_declaration
  690                            | bitfield_type_declaration
  691                            | structure_type_declaration
  692                            | type_declaration_no_options dim_list
  693                            | type_declaration_no_options '[' ']'

  694 $@49: %empty

  695 $@50: %empty

  696 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50
  697                            | "typedecl" '(' expr ')'
  698                            | '$' name_in_namespace '(' optional_expr_list ')'

  699 $@51: %empty

  700 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  701                            | type_declaration_no_options '-' '[' ']'
  702                            | type_declaration_no_options "explicit"
  703                            | type_declaration_no_options "const"
  704                            | type_declaration_no_options '-' "const"
  705                            | type_declaration_no_options '&'
  706                            | type_declaration_no_options '-' '&'
  707                            | type_declaration_no_options '#'
  708                            | type_declaration_no_options "implicit"
  709                            | type_declaration_no_options '-' '#'
  710                            | type_declaration_no_options "==" "const"
  711                            | type_declaration_no_options "==" '&'
  712                            | type_declaration_no_options '?'

  713 $@52: %empty

  714 $@53: %empty

  715 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53
  716                            | type_declaration_no_options "??"

  717 $@54: %empty

  718 $@55: %empty

  719 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55

  720 $@56: %empty

  721 $@57: %empty

  722 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57

  723 $@58: %empty

  724 $@59: %empty

  725 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59
  726                            | "block"

  727 $@60: %empty

  728 $@61: %empty

  729 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61

  730 $@62: %empty

  731 $@63: %empty

  732 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63
  733                            | "function"

  734 $@64: %empty

  735 $@65: %empty

  736 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65

  737 $@66: %empty

  738 $@67: %empty

  739 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67
  740                            | "lambda"

  741 $@68: %empty

  742 $@69: %empty

  743 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69

  744 $@70: %empty

  745 $@71: %empty

  746 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71

  747 $@72: %empty

  748 $@73: %empty

  749 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73

  750 $@74: %empty

  751 $@75: %empty

  752 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75

  753 type_declaration: type_declaration_no_options
  754                 | type_declaration '|' type_declaration_no_options
  755                 | type_declaration '|' '#'

  756 $@76: %empty

  757 $@77: %empty

  758 $@78: %empty

  759 $@79: %empty

  760 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

  761 $@80: %empty

  762 $@81: %empty

  763 $@82: %empty

  764 $@83: %empty

  765 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

  766 $@84: %empty

  767 $@85: %empty

  768 $@86: %empty

  769 $@87: %empty

  770 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

  771 make_decl: make_struct_decl
  772          | make_dim_decl
  773          | make_table_decl
  774          | array_comprehension
  775          | make_tuple_call

  776 make_struct_fields: "name" copy_or_move expr
  777                   | "name" ":=" expr
  778                   | make_struct_fields ',' "name" copy_or_move expr
  779                   | make_struct_fields ',' "name" ":=" expr
  780                   | "$f" '(' expr ')' copy_or_move expr
  781                   | "$f" '(' expr ')' ":=" expr
  782                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  783                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  784 make_variant_dim: make_struct_fields

  785 make_struct_single: make_struct_fields

  786 make_struct_dim: make_struct_fields
  787                | make_struct_dim "end of expression" make_struct_fields

  788 make_struct_dim_list: '(' make_struct_fields ')'
  789                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  790 make_struct_dim_decl: make_struct_fields
  791                     | make_struct_dim_list optional_comma

  792 optional_block: %empty
  793               | "where" expr_block

  794 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  795                                    | ";}}"

  796 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  797                                    | ";}]"

  798 optional_trailing_semicolon_sqr_sqr: ']' ']'
  799                                    | ";]]"

  800 optional_trailing_delim_sqr_sqr: ']' ']'
  801                                | ";]]"
  802                                | ",]]"

  803 optional_trailing_delim_cur_sqr: "end of code block" ']'
  804                                | ";}]"
  805                                | ",}]"

  806 use_initializer: %empty
  807                | "uninitialized"

  808 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  809                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  810                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  811                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  812                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  813                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  814 $@88: %empty

  815 $@89: %empty

  816 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim_decl ')'

  817 $@90: %empty

  818 $@91: %empty

  819 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim_decl ')'

  820 $@92: %empty

  821 $@93: %empty

  822 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

  823 $@94: %empty

  824 $@95: %empty

  825 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer

  826 make_tuple: expr
  827           | expr "=>" expr
  828           | make_tuple ',' expr

  829 make_map_tuple: expr "=>" expr
  830               | expr

  831 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  832 $@96: %empty

  833 $@97: %empty

  834 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim_decl ')'

  835 make_dim: make_tuple
  836         | make_dim "end of expression" make_tuple

  837 make_dim_decl: '[' expr_list optional_comma ']'
  838              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  839              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  840 $@98: %empty

  841 $@99: %empty

  842 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim_decl ')'

  843 $@100: %empty

  844 $@101: %empty

  845 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim_decl ')'

  846 $@102: %empty

  847 $@103: %empty

  848 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'
  849              | "array" '(' expr_list optional_comma ')'

  850 $@104: %empty

  851 $@105: %empty

  852 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'
  853              | "fixed_array" '(' expr_list optional_comma ')'

  854 $@106: %empty

  855 $@107: %empty

  856 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

  857 make_table: make_map_tuple
  858           | make_table "end of expression" make_map_tuple

  859 expr_map_tuple_list: make_map_tuple
  860                    | expr_map_tuple_list ',' make_map_tuple

  861 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  862                | "{{" make_table optional_trailing_semicolon_cur_cur
  863                | "table" '(' expr_map_tuple_list optional_comma ')'
  864                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  865                | "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  866 array_comprehension_where: %empty
  867                          | "end of expression" "where" expr

  868 optional_comma: %empty
  869               | ','

  870 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  871                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  872                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  873                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  874                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  875                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 111 127 430
    '#' (35) 707 709 755
    '$' (36) 20 332 698 700
    '%' (37) 35 42 147 442
    '&' (38) 155 335 449 562 571 705 706 711
    '(' (40) 100 109 115 122 123 251 275 276 277 278 304 306 321 322 323 324 325 326 395 396 397 398 400 410 411 415 416 417 418 419 460 470 471 472 473 502 504 505 506 507 508 510 511 512 513 514 515 516 517 518 519 543 573 633 674 675 697 698 700 780 781 782 783 788 789 810 811 813 816 819 822 831 834 842 845 848 849 852 853 856 863 864 865
    ')' (41) 100 109 115 122 123 251 275 276 277 278 304 306 321 322 323 324 325 326 395 396 397 398 400 410 411 415 416 417 418 419 460 470 471 472 473 502 504 505 506 507 508 510 511 512 513 514 515 516 517 518 519 543 573 633 674 675 697 698 700 780 781 782 783 788 789 810 811 813 816 819 822 831 834 842 845 848 849 852 853 856 863 864 865
    '*' (42) 145 440 469
    '+' (43) 143 432 438
    ',' (44) 51 89 102 118 302 328 340 396 575 576 635 636 778 779 782 783 789 828 860 869
    '-' (45) 144 433 439 701 704 706 709
    '.' (46) 43 172 174 175 408 409 410 411 414 462 464 466 512 514 515
    '/' (47) 44 146 441
    ':' (58) 53 54 125 303 304 475 547 553 563 564 577 578 579 616 618
    "end of expression" (59) 15 16 74 223 227 228 235 236 241 242 243 253 285 290 303 304 305 306 323 326 536 538 541 545 549 551 552 555 557 558 577 578 580 594 595 596 602 603 606 677 679 680 685 787 836 858 865 867 870 871 872 873 874 875
    '<' (60) 148 222 256 259 272 311 314 317 320 322 323 325 326 404 407 443 472 473 478 484 489 683 696 700 715 719 722 725 729 732 736 739 743 746 749 752 816 819 822 825 834 842 845 848 852 856 864 865
    '=' (61) 81 93 94 95 96 97 98 100 336 356 378 559 567 596 601
    '>' (62) 149 222 256 259 272 311 314 317 320 322 323 325 326 404 407 444 472 473 478 484 489 683 696 700 715 719 722 725 729 732 736 739 743 746 749 752 816 819 822 825 834 842 845 848 852 856 864 865
    '?' (63) 184 185 475 486 489 490 517 712
    '@' (64) 103 104 333 334 401 404 407 519
    '[' (91) 120 170 395 396 461 462 541 686 687 693 701 837 870 871
    ']' (93) 120 170 171 303 305 342 395 396 461 462 463 464 521 541 686 687 693 701 796 798 800 803 837 870 871 872 873
    '^' (94) 157 451
    "begin of code block" (123) 218 219 590 604 613 616 628 760 765 770 861 874
    '|' (124) 156 450 754 755
    "end of code block" (125) 218 219 590 604 613 616 628 760 765 770 794 796 803 861 873 874 875
    '~' (126) 128 431
    error (256) 246 414
    "lexer error" (258)
    "struct" (259) 623 816 842
    "class" (260) 622 819
    "let" (261) 294 297
    "def" (262) 211 538 540
    "while" (263) 78
    "if" (264) 62 74
    "static_if" (265) 63
    "else" (266) 60 66
    "for" (267) 76 870 871 872 873 874 875
    "recover" (268) 293
    "true" (269) 86 97 426
    "false" (270) 87 98 427
    "new" (271) 274 275 276 277 278 279
    "typeinfo" (272) 321 322 323 324 325 326
    "type" (273) 91 320 478 484 489 696
    "in" (274) 76 92 870 871 872 873 874 875
    "is" (275) 180 182 478 479 480 518
    "as" (276) 46 181 183 184 185 481 484 485 486 489 490 516 517
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 719 842 845 848 849 852
    "return" (280) 282 283 284 286 287
    "null" (281) 420
    "break" (282) 280
    "try" (283) 293
    "options" (284) 36
    "table" (285) 722 863 864 865
    "expect" (286) 49
    "const" (287) 527 703 704 710
    "require" (288) 37 106
    "operator" (289) 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185
    "enum" (290) 613 616
    "finally" (291) 219
    "delete" (292) 178 268 269
    "deref" (293) 470
    "typedef" (294) 604 606
    "typedecl" (295) 697
    "with" (296) 79
    "aka" (297) 574 576 634 636
    "assume" (298) 81
    "cast" (299) 311
    "override" (300) 524
    "abstract" (301) 538
    "upcast" (302) 314
    "iterator" (303) 725 871
    "var" (304) 295 298
    "addr" (305) 471
    "continue" (306) 281
    "where" (307) 793 867
    "pass" (308) 243
    "reinterpret" (309) 317
    "module" (310) 22
    "public" (311) 18 48 214 529 589 599 609 626
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 708
    "explicit" (315) 269 702
    "shared" (316) 586
    "private" (317) 19 107 213 530 588 598 608 625
    "smart_ptr" (318) 715
    "unsafe" (319) 77 502
    "inscope" (320) 299
    "static" (321) 532
    "fixed_array" (322) 853 856
    "default" (323) 825
    "uninitialized" (324) 278 807
    "bool" (325) 186 637
    "void" (326) 657
    "string" (327) 187 638
    "auto" (328) 673 674
    "int" (329) 188 639 664
    "int2" (330) 189 643
    "int3" (331) 190 644
    "int4" (332) 191 645
    "uint" (333) 192 646 667
    "bitfield" (334) 663 683 770
    "uint2" (335) 193 650
    "uint3" (336) 194 651
    "uint4" (337) 195 652
    "float" (338) 196 653
    "float2" (339) 197 654
    "float3" (340) 198 655
    "float4" (341) 199 656
    "range" (342) 200 658
    "urange" (343) 201 659
    "range64" (344) 202 660
    "urange64" (345) 203 661
    "block" (346) 726 729 732
    "int64" (347) 204 642 670
    "uint64" (348) 205 649 671
    "double" (349) 206 662
    "function" (350) 733 736 739
    "lambda" (351) 740 743 746
    "int8" (352) 207 640 665
    "uint8" (353) 208 647 668
    "int16" (354) 209 641 666
    "uint16" (355) 210 648 669
    "tuple" (356) 749 760 831 834 845
    "variant" (357) 752 765 822 848
    "generator" (358) 222 472 473
    "yield" (359) 288 289 291 292
    "sealed" (360) 525 620
    "+=" (361) 129 365 386
    "-=" (362) 130 366 387
    "/=" (363) 132 368 389
    "*=" (364) 131 367 388
    "%=" (365) 133 369 390
    "&=" (366) 134 359 380
    "|=" (367) 135 360 381
    "^=" (368) 136 361 382
    "<<" (369) 162 434
    ">>" (370) 163 435
    "++" (371) 158 160 456 458
    "--" (372) 159 161 457 459
    "<=" (373) 153 447
    "<<=" (374) 164 370 391
    ">>=" (375) 165 371 392
    ">=" (376) 154 448
    "==" (377) 151 445 710 711
    "!=" (378) 152 446
    "->" (379) 397 398
    "<-" (380) 284 287 289 292 331 337 357 379 560 568
    "??" (381) 179 474 716
    "?." (382) 173 176 465 466 513 515
    "?[" (383) 171 463 464
    "<|" (384) 498
    " <|" (385) 260
    "$ <|" (386) 263 376
    "@ <|" (387) 261 374
    "@@ <|" (388) 262 375
    "|>" (389) 116 499 500
    ":=" (390) 175 177 338 358 569 777 779 781 783
    "<<<" (391) 166 436
    ">>>" (392) 167 437
    "<<<=" (393) 168 372 393
    ">>>=" (394) 169 373 394
    "=>" (395) 330 331 827 829
    "::" (396) 266 267
    "&&" (397) 112 140 452
    "||" (398) 113 141 453
    "^^" (399) 114 142 454
    "&&=" (400) 137 362 383
    "||=" (401) 138 363 384
    "^^=" (402) 139 364 385
    ".." (403) 150 455
    "$$" (404) 504
    "$i" (405) 400 505 573 633
    "$v" (406) 506
    "$b" (407) 507
    "$a" (408) 508 543
    "$t" (409) 675
    "$c" (410) 510 511 519
    "$f" (411) 512 513 514 515 516 517 518 780 781 782 783
    "..." (412) 509
    "[[" (413) 303 305 342 521 808 809 810 811 838 872
    "[{" (414) 812 813 839 873
    "{{" (415) 862 875
    "integer constant" <i> (416) 52 53 54 55 84 95 348
    "long integer constant" <i64> (417) 350
    "unsigned integer constant" <ui> (418) 349
    "unsigned long integer constant" <ui64> (419) 351
    "unsigned int8 constant" <ui> (420) 352
    "floating point constant" <fd> (421) 85 96 353
    "double constant" <d> (422) 354
    "name" <s> (423) 21 38 46 81 83 90 94 126 174 175 176 182 183 185 265 266 267 301 302 322 323 325 326 335 336 337 338 397 398 408 409 410 411 465 466 480 481 486 501 547 553 572 574 575 576 595 596 601 610 621 632 634 635 636 674 676 677 680 760 765 770 776 777 778 779
    "keyword" <s> (424) 39 247 256
    "type function" <s> (425) 40 259
    "start of the string" (426) 27 31
    STRING_CHARACTER <ch> (427) 23 25 32 33
    STRING_CHARACTER_ESC (428) 24 26
    "end of the string" (429) 27 31
    "{" (430) 30
    "}" (431) 30
    "end of failed eader macro" (432)
    ";}}" (433) 795
    ";}]" (434) 797 804
    ";]]" (435) 799 801
    ",]]" (436) 802
    ",}]" (437) 805
    UNARY_MINUS (438)
    UNARY_PLUS (439)
    PRE_INC (440)
    PRE_DEC (441)
    POST_INC (442)
    POST_DEC (443)
    DEREF (444)


Nonterminals, with rules where they appear

    $accept (217)
        on left: 0
    program (218)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (219)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (220)
        on left: 17 18 19
        on right: 22
    module_name <s> (221)
        on left: 20 21
        on right: 22
    module_declaration (222)
        on left: 22
        on right: 2
    character_sequence <s> (223)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (224)
        on left: 27
        on right: 82 93
    string_builder_body <pExpression> (225)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (226)
        on left: 31
        on right: 424
    reader_character_sequence (227)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (228)
        on left: 35
        on right: 16 423
    $@1 (229)
        on left: 34
        on right: 35
    options_declaration (230)
        on left: 36
        on right: 9
    require_declaration (231)
        on left: 37
        on right: 8
    keyword_or_name <s> (232)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (233)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (234)
        on left: 45 46
        on right: 37
    is_public_module <b> (235)
        on left: 47 48
        on right: 45 46
    expect_declaration (236)
        on left: 49
        on right: 7
    expect_list (237)
        on left: 50 51
        on right: 49 51
    expect_error (238)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (239)
        on left: 54
        on right: 241
    expression_goto <pExpression> (240)
        on left: 55 56
        on right: 242
    elif_or_static_elif <b> (241)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (242)
        on left: 59 60 61
        on right: 61 72
    if_or_static_if <b> (243)
        on left: 62 63
        on right: 72
    expression_else_one_liner <pExpression> (244)
        on left: 64 66
        on right: 74
    $@2 (245)
        on left: 65
        on right: 66
    expression_if_one_liner <pExpression> (246)
        on left: 67 68 69 70 71
        on right: 66 74
    expression_if_then_else <pExpression> (247)
        on left: 72 74
        on right: 239
    $@3 (248)
        on left: 73
        on right: 74
    expression_for_loop <pExpression> (249)
        on left: 76
        on right: 234
    $@4 (250)
        on left: 75
        on right: 76
    expression_unsafe <pExpression> (251)
        on left: 77
        on right: 231
    expression_while_loop <pExpression> (252)
        on left: 78
        on right: 230
    expression_with <pExpression> (253)
        on left: 79
        on right: 232
    expression_with_alias <pExpression> (254)
        on left: 81
        on right: 233
    $@5 (255)
        on left: 80
        on right: 81
    annotation_argument_value <aa> (256)
        on left: 82 83 84 85 86 87
        on right: 88 89
    annotation_argument_value_list <aaList> (257)
        on left: 88 89
        on right: 89 100
    annotation_argument_name <s> (258)
        on left: 90 91 92
        on right: 93 94 95 96 97 98 99 100
    annotation_argument <aa> (259)
        on left: 93 94 95 96 97 98 99 100
        on right: 101 102 103 104
    annotation_argument_list <aaList> (260)
        on left: 101 102
        on right: 36 102 109 521
    metadata_argument_list <aaList> (261)
        on left: 103 104
        on right: 104 522
    annotation_declaration_name <s> (262)
        on left: 105 106 107
        on right: 108 109
    annotation_declaration_basic <fa> (263)
        on left: 108 109
        on right: 110
    annotation_declaration <fa> (264)
        on left: 110 111 112 113 114 115 116
        on right: 111 112 113 114 115 116 117 118
    annotation_list <faList> (265)
        on left: 117 118
        on right: 118 120 541
    optional_annotation_list <faList> (266)
        on left: 119 120
        on right: 211 344 345 347 538 540 613 616 631
    optional_function_argument_list <pVarDeclList> (267)
        on left: 121 122 123
        on right: 215 344 345 347 407 732 739 746
    optional_function_type <pTypeDecl> (268)
        on left: 124 125
        on right: 215 344 345 347 407 732 739 746
    function_name <s> (269)
        on left: 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210
        on right: 215
    global_function_declaration (270)
        on left: 211
        on right: 6
    optional_public_or_private_function <b> (271)
        on left: 212 213 214
        on right: 217
    function_declaration_header <pFuncDecl> (272)
        on left: 215
        on right: 217 538 540
    function_declaration <pFuncDecl> (273)
        on left: 217
        on right: 211
    $@6 (274)
        on left: 216
        on right: 217
    expression_block <pExpression> (275)
        on left: 218 219
        on right: 60 61 72 76 77 78 79 217 247 293 329 343 347 540
    expr_call_pipe <pExpression> (276)
        on left: 220 221 222
        on right: 264 377
    expression_any <pExpression> (277)
        on left: 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243
        on right: 245
    expressions <pExpression> (278)
        on left: 244 245 246
        on right: 218 219 245 246
    expr_keyword <pExpression> (279)
        on left: 247
        on right: 225
    optional_expr_list <pExpression> (280)
        on left: 248 249
        on right: 251 698 700 852
    optional_expr_list_in_braces <pExpression> (281)
        on left: 250 251
        on right: 259
    type_declaration_no_options_list <pTypeDeclList> (282)
        on left: 252 253
        on right: 253 256 259 700
    expression_keyword <pExpression> (283)
        on left: 256 259
        on right: 221 503
    $@7 (284)
        on left: 254
        on right: 256
    $@8 (285)
        on left: 255
        on right: 256
    $@9 (286)
        on left: 257
        on right: 259
    $@10 (287)
        on left: 258
        on right: 259
    expr_pipe <pExpression> (288)
        on left: 260 261 262 263 264
        on right: 224 286 287 291 292 566 579 581
    name_in_namespace <s> (289)
        on left: 265 266 267
        on right: 35 105 321 322 323 324 325 326 395 396 399 415 416 417 421 501 618 672 698 700
    expression_delete <pExpression> (290)
        on left: 268 269
        on right: 228
    new_type_declaration <pTypeDecl> (291)
        on left: 272 273
        on right: 274 275 276 277 278
    $@11 (292)
        on left: 270
        on right: 272
    $@12 (293)
        on left: 271
        on right: 272
    expr_new <pExpression> (294)
        on left: 274 275 276 277 278 279
        on right: 494
    expression_break <pExpression> (295)
        on left: 280
        on right: 70 235
    expression_continue <pExpression> (296)
        on left: 281
        on right: 71 236
    expression_return_no_pipe <pExpression> (297)
        on left: 282 283 284
        on right: 68 285
    expression_return <pExpression> (298)
        on left: 285 286 287
        on right: 237
    expression_yield_no_pipe <pExpression> (299)
        on left: 288 289
        on right: 69 290
    expression_yield <pExpression> (300)
        on left: 290 291 292
        on right: 238
    expression_try_catch <pExpression> (301)
        on left: 293
        on right: 240
    kwd_let_var_or_nothing <b> (302)
        on left: 294 295 296
        on right: 542
    kwd_let <b> (303)
        on left: 297 298
        on right: 307 308 590 592
    optional_in_scope <b> (304)
        on left: 299 300
        on right: 307 308
    tuple_expansion <pNameList> (305)
        on left: 301 302
        on right: 302 303 304 305 306
    tuple_expansion_variable_declaration <pVarDecl> (306)
        on left: 303 304 305 306
        on right: 308
    expression_let <pExpression> (307)
        on left: 307 308
        on right: 229
    expr_cast <pExpression> (308)
        on left: 311 314 317
        on right: 493
    $@13 (309)
        on left: 309
        on right: 311
    $@14 (310)
        on left: 310
        on right: 311
    $@15 (311)
        on left: 312
        on right: 314
    $@16 (312)
        on left: 313
        on right: 314
    $@17 (313)
        on left: 315
        on right: 317
    $@18 (314)
        on left: 316
        on right: 317
    expr_type_decl <pExpression> (315)
        on left: 320
        on right: 492
    $@19 (316)
        on left: 318
        on right: 320
    $@20 (317)
        on left: 319
        on right: 320
    expr_type_info <pExpression> (318)
        on left: 321 322 323 324 325 326
        on right: 491
    expr_list <pExpression> (319)
        on left: 327 328
        on right: 76 249 276 283 284 328 396 398 411 417 419 460 511 831 837 849 853 856 870 871 872 873 874 875
    block_or_simple_block <pExpression> (320)
        on left: 329 330 331
        on right: 344 345
    block_or_lambda <i> (321)
        on left: 332 333 334
        on right: 344 345 347
    capture_entry <pCapt> (322)
        on left: 335 336 337 338
        on right: 339 340
    capture_list <pCaptList> (323)
        on left: 339 340
        on right: 340 342
    optional_capture_list <pCaptList> (324)
        on left: 341 342
        on right: 222 344 345 347 472 473
    expr_block <pExpression> (325)
        on left: 343 344
        on right: 260 261 262 263 374 375 376 793
    expr_full_block <pExpression> (326)
        on left: 345
        on right: 497
    expr_full_block_assumed_piped <pExpression> (327)
        on left: 347
        on right: 220 221 222
    $@21 (328)
        on left: 346
        on right: 347
    expr_numeric_const <pExpression> (329)
        on left: 348 349 350 351 352 353 354
        on right: 422
    expr_assign <pExpression> (330)
        on left: 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373
        on right: 227 260
    expr_assign_pipe_right <pExpression> (331)
        on left: 374 375 376 377
        on right: 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394
    expr_assign_pipe <pExpression> (332)
        on left: 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394
        on right: 226
    expr_named_call <pExpression> (333)
        on left: 395 396
        on right: 496
    expr_method_call <pExpression> (334)
        on left: 397 398
        on right: 495
    func_addr_name <pExpression> (335)
        on left: 399 400
        on right: 401 404 407
    func_addr_expr <pExpression> (336)
        on left: 401 404 407
        on right: 467
    $@22 (337)
        on left: 402
        on right: 404
    $@23 (338)
        on left: 403
        on right: 404
    $@24 (339)
        on left: 405
        on right: 407
    $@25 (340)
        on left: 406
        on right: 407
    expr_field <pExpression> (341)
        on left: 408 409 410 411 414
        on right: 428
    $@26 (342)
        on left: 412
        on right: 414
    $@27 (343)
        on left: 413
        on right: 414
    expr_call <pExpression> (344)
        on left: 415 416 417 418 419
        on right: 468
    expr <pExpression> (345)
        on left: 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 478 479 480 481 484 485 486 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503
        on right
    $@28 (346)
        on left: 476
        on right: 478
    $@29 (347)
        on left: 477
        on right: 478
    $@30 (348)
        on left: 482
        on right: 484
    $@31 (349)
        on left: 483
        on right: 484
    $@32 (350)
        on left: 487
        on right: 489
    $@33 (351)
        on left: 488
        on right: 489
    expr_mtag <pExpression> (352)
        on left: 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519
        on right: 429
    optional_field_annotation <aaList> (353)
        on left: 520 521 522
        on right: 533 542 584 592
    optional_override <i> (354)
        on left: 523 524 525
        on right: 533 540
    optional_constant <b> (355)
        on left: 526 527
        on right: 538 540
    optional_public_or_private_member_variable <b> (356)
        on left: 528 529 530
        on right: 533 538 540
    optional_static_member_variable <b> (357)
        on left: 531 532
        on right: 533 540
    structure_variable_declaration <pVarDecl> (358)
        on left: 533
        on right: 536
    struct_variable_declaration_list <pVarDeclList> (359)
        on left: 534 536 538 540 541
        on right: 536 538 540 541 628
    $@34 (360)
        on left: 535
        on right: 536
    $@35 (361)
        on left: 537
        on right: 538
    $@36 (362)
        on left: 539
        on right: 540
    function_argument_declaration <pVarDecl> (363)
        on left: 542 543
        on right: 544 545
    function_argument_list <pVarDeclList> (364)
        on left: 544 545
        on right: 123 545
    tuple_type <pVarDecl> (365)
        on left: 546 547
        on right: 548 549 552
    tuple_type_list <pVarDeclList> (366)
        on left: 548 549
        on right: 549 749
    tuple_alias_type_list <pVarDeclList> (367)
        on left: 550 551 552
        on right: 551 552 760
    variant_type <pVarDecl> (368)
        on left: 553
        on right: 554 555 558
    variant_type_list <pVarDeclList> (369)
        on left: 554 555
        on right: 555 752
    variant_alias_type_list <pVarDeclList> (370)
        on left: 556 557 558
        on right: 557 558 765
    copy_or_move <b> (371)
        on left: 559 560
        on right: 564 565 566 776 778 780 782
    variable_declaration <pVarDecl> (372)
        on left: 561 562 563 564 565 566
        on right: 533 542
    copy_or_move_or_clone <i> (373)
        on left: 567 568 569
        on right: 303 304 305 306 578 579 580 581
    optional_ref <b> (374)
        on left: 570 571
        on right: 305 306 580 581
    let_variable_name_with_pos_list <pNameWithPosList> (375)
        on left: 572 573 574 575 576
        on right: 575 576 577 578 579 580 581
    let_variable_declaration <pVarDecl> (376)
        on left: 577 578 579 580 581
        on right: 307 584 592
    global_variable_declaration_list <pVarDeclList> (377)
        on left: 582 584
        on right: 584 590
    $@37 (378)
        on left: 583
        on right: 584
    optional_shared <b> (379)
        on left: 585 586
        on right: 22 590 592
    optional_public_or_private_variable <b> (380)
        on left: 587 588 589
        on right: 590 592
    global_let (381)
        on left: 590 592
        on right: 5
    $@38 (382)
        on left: 591
        on right: 592
    enum_list <pEnum> (383)
        on left: 593 594 595 596
        on right: 594 595 596 613 616
    optional_public_or_private_alias <b> (384)
        on left: 597 598 599
        on right: 601 760 765 770
    single_alias (385)
        on left: 601
        on right: 602 603 606
    $@39 (386)
        on left: 600
        on right: 601
    alias_list (387)
        on left: 602 603
        on right: 603 604
    alias_declaration (388)
        on left: 604 606
        on right: 10
    $@40 (389)
        on left: 605
        on right: 606
    optional_public_or_private_enum <b> (390)
        on left: 607 608 609
        on right: 613 616
    enum_name <pEnum> (391)
        on left: 610
        on right: 613 616
    enum_declaration (392)
        on left: 613 616
        on right: 4
    $@41 (393)
        on left: 611
        on right: 613
    $@42 (394)
        on left: 612
        on right: 613
    $@43 (395)
        on left: 614
        on right: 616
    $@44 (396)
        on left: 615
        on right: 616
    optional_structure_parent <s> (397)
        on left: 617 618
        on right: 621
    optional_sealed <b> (398)
        on left: 619 620
        on right: 621
    structure_name <pStructure> (399)
        on left: 621
        on right: 631
    class_or_struct <b> (400)
        on left: 622 623
        on right: 631
    optional_public_or_private_structure <b> (401)
        on left: 624 625 626
        on right: 631
    optional_struct_variable_declaration_list <pVarDeclList> (402)
        on left: 627 628
        on right: 631
    structure_declaration (403)
        on left: 631
        on right: 3
    $@45 (404)
        on left: 629
        on right: 631
    $@46 (405)
        on left: 630
        on right: 631
    variable_name_with_pos_list <pNameWithPosList> (406)
        on left: 632 633 634 635 636
        on right: 76 561 562 563 564 565 566 635 636 870 871 872 873 874 875
    basic_type_declaration <type> (407)
        on left: 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663
        on right: 418 419 479 485 490 500 688
    enum_basic_type_declaration <type> (408)
        on left: 664 665 666 667 668 669 670 671
        on right: 616
    structure_type_declaration <pTypeDecl> (409)
        on left: 672
        on right: 273 691
    auto_type_declaration <pTypeDecl> (410)
        on left: 673 674 675
        on right: 689
    bitfield_bits <pNameList> (411)
        on left: 676 677
        on right: 677 683
    bitfield_alias_bits <pNameList> (412)
        on left: 678 679 680
        on right: 679 680 770
    bitfield_type_declaration <pTypeDecl> (413)
        on left: 683
        on right: 690
    $@47 (414)
        on left: 681
        on right: 683
    $@48 (415)
        on left: 682
        on right: 683
    table_type_pair <aTypePair> (416)
        on left: 684 685
        on right: 722
    dim_list <pTypeDecl> (417)
        on left: 686 687
        on right: 687 692
    type_declaration_no_options <pTypeDecl> (418)
        on left: 688 689 690 691 692 693 696 697 698 700 701 702 703 704 705 706 707 708 709 710 711 712 715 716 719 722 725 726 729 732 733 736 739 740 743 746 749 752
        on right: 222 303 304 311 314 317 404 472 473 478 577 578 579 692 693 701 702 703 704 705 706 707 708 709 710 711 712 716 753 754 808 809 810 811 812 813 816 819 822 825 834 838 839 842 845 848 852 856 864 865
    $@49 (419)
        on left: 694
        on right: 696
    $@50 (420)
        on left: 695
        on right: 696
    $@51 (421)
        on left: 699
        on right: 700
    $@52 (422)
        on left: 713
        on right: 715
    $@53 (423)
        on left: 714
        on right: 715
    $@54 (424)
        on left: 717
        on right: 719
    $@55 (425)
        on left: 718
        on right: 719
    $@56 (426)
        on left: 720
        on right: 722
    $@57 (427)
        on left: 721
        on right: 722
    $@58 (428)
        on left: 723
        on right: 725
    $@59 (429)
        on left: 724
        on right: 725
    $@60 (430)
        on left: 727
        on right: 729
    $@61 (431)
        on left: 728
        on right: 729
    $@62 (432)
        on left: 730
        on right: 732
    $@63 (433)
        on left: 731
        on right: 732
    $@64 (434)
        on left: 734
        on right: 736
    $@65 (435)
        on left: 735
        on right: 736
    $@66 (436)
        on left: 737
        on right: 739
    $@67 (437)
        on left: 738
        on right: 739
    $@68 (438)
        on left: 741
        on right: 743
    $@69 (439)
        on left: 742
        on right: 743
    $@70 (440)
        on left: 744
        on right: 746
    $@71 (441)
        on left: 745
        on right: 746
    $@72 (442)
        on left: 747
        on right: 749
    $@73 (443)
        on left: 748
        on right: 749
    $@74 (444)
        on left: 750
        on right: 752
    $@75 (445)
        on left: 751
        on right: 752
    type_declaration <pTypeDecl> (446)
        on left: 753 754 755
        on right: 125 252 253 272 320 484 489 546 547 553 563 564 601 684 685 696 715 719 725 729 736 743 754 755
    tuple_alias_declaration (447)
        on left: 760
        on right: 12
    $@76 (448)
        on left: 756
        on right: 760
    $@77 (449)
        on left: 757
        on right: 760
    $@78 (450)
        on left: 758
        on right: 760
    $@79 (451)
        on left: 759
        on right: 760
    variant_alias_declaration (452)
        on left: 765
        on right: 11
    $@80 (453)
        on left: 761
        on right: 765
    $@81 (454)
        on left: 762
        on right: 765
    $@82 (455)
        on left: 763
        on right: 765
    $@83 (456)
        on left: 764
        on right: 765
    bitfield_alias_declaration (457)
        on left: 770
        on right: 13
    $@84 (458)
        on left: 766
        on right: 770
    $@85 (459)
        on left: 767
        on right: 770
    $@86 (460)
        on left: 768
        on right: 770
    $@87 (461)
        on left: 769
        on right: 770
    make_decl <pExpression> (462)
        on left: 771 772 773 774 775
        on right: 279 425
    make_struct_fields <pMakeStruct> (463)
        on left: 776 777 778 779 780 781 782 783
        on right: 395 396 778 779 782 783 784 785 786 787 788 789 790
    make_variant_dim <pExpression> (464)
        on left: 784
        on right: 822 848
    make_struct_single <pExpression> (465)
        on left: 785
        on right: 277 278 416
    make_struct_dim <pExpression> (466)
        on left: 786 787
        on right: 787 808 811 812 813
    make_struct_dim_list <pExpression> (467)
        on left: 788 789
        on right: 789 791
    make_struct_dim_decl <pExpression> (468)
        on left: 790 791
        on right: 816 819 834 842 845
    optional_block <pExpression> (469)
        on left: 792 793
        on right: 808 809 810 811 812 813
    optional_trailing_semicolon_cur_cur (470)
        on left: 794 795
        on right: 862
    optional_trailing_semicolon_cur_sqr (471)
        on left: 796 797
        on right: 839
    optional_trailing_semicolon_sqr_sqr (472)
        on left: 798 799
        on right: 838
    optional_trailing_delim_sqr_sqr (473)
        on left: 800 801 802
        on right: 808 809 810 811
    optional_trailing_delim_cur_sqr (474)
        on left: 803 804 805
        on right: 812 813
    use_initializer <b> (475)
        on left: 806 807
        on right: 275 816 819 825 834 842 845
    make_struct_decl <pExpression> (476)
        on left: 808 809 810 811 812 813 816 819 822 825
        on right: 771
    $@88 (477)
        on left: 814
        on right: 816
    $@89 (478)
        on left: 815
        on right: 816
    $@90 (479)
        on left: 817
        on right: 819
    $@91 (480)
        on left: 818
        on right: 819
    $@92 (481)
        on left: 820
        on right: 822
    $@93 (482)
        on left: 821
        on right: 822
    $@94 (483)
        on left: 823
        on right: 825
    $@95 (484)
        on left: 824
        on right: 825
    make_tuple <pExpression> (485)
        on left: 826 827 828
        on right: 828 835 836
    make_map_tuple <pExpression> (486)
        on left: 829 830
        on right: 857 858 859 860 874 875
    make_tuple_call <pExpression> (487)
        on left: 831 834
        on right: 775
    $@96 (488)
        on left: 832
        on right: 834
    $@97 (489)
        on left: 833
        on right: 834
    make_dim <pExpression> (490)
        on left: 835 836
        on right: 836 838 839
    make_dim_decl <pExpression> (491)
        on left: 837 838 839 842 845 848 849 852 853 856
        on right: 772
    $@98 (492)
        on left: 840
        on right: 842
    $@99 (493)
        on left: 841
        on right: 842
    $@100 (494)
        on left: 843
        on right: 845
    $@101 (495)
        on left: 844
        on right: 845
    $@102 (496)
        on left: 846
        on right: 848
    $@103 (497)
        on left: 847
        on right: 848
    $@104 (498)
        on left: 850
        on right: 852
    $@105 (499)
        on left: 851
        on right: 852
    $@106 (500)
        on left: 854
        on right: 856
    $@107 (501)
        on left: 855
        on right: 856
    make_table <pExpression> (502)
        on left: 857 858
        on right: 858 862
    expr_map_tuple_list <pExpression> (503)
        on left: 859 860
        on right: 860 861 863 864 865
    make_table_decl <pExpression> (504)
        on left: 861 862 863 864 865
        on right: 773
    array_comprehension_where <pExpression> (505)
        on left: 866 867
        on right: 870 871 872 873 874 875
    optional_comma <b> (506)
        on left: 868 869
        on right: 249 251 460 791 831 837 849 853 856 861 863 864 865
    array_comprehension <pExpression> (507)
        on left: 870 871 872 873 874 875
        on right: 774


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  297 kwd_let: "let" .

    $default  reduce using rule 297 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  604 alias_declaration: "typedef" . "begin of code block" alias_list "end of code block"
  606                  | "typedef" . $@40 single_alias "end of expression"

    "begin of code block"  shift, and go to state 48

    $default  reduce using rule 605 ($@40)

    $@40  go to state 49


State 8

  298 kwd_let: "var" .

    $default  reduce using rule 298 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  770 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 597 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  760 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 597 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  765 variant_alias_declaration: "variant" . optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 597 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 15

  120 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  211 global_function_declaration: optional_annotation_list . "def" function_declaration
  613 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  616                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"
  631 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  590 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  592           | kwd_let . optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 585 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   91 annotation_argument_name: "type" .

    $default  reduce using rule 91 (annotation_argument_name)


State 33

   92 annotation_argument_name: "in" .

    $default  reduce using rule 92 (annotation_argument_name)


State 34

   90 annotation_argument_name: "name" .

    $default  reduce using rule 90 (annotation_argument_name)


State 35

   93 annotation_argument: annotation_argument_name . '=' string_constant
   94                    | annotation_argument_name . '=' "name"
   95                    | annotation_argument_name . '=' "integer constant"
   96                    | annotation_argument_name . '=' "floating point constant"
   97                    | annotation_argument_name . '=' "true"
   98                    | annotation_argument_name . '=' "false"
   99                    | annotation_argument_name .
  100                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 99 (annotation_argument)


State 36

  101 annotation_argument_list: annotation_argument .

    $default  reduce using rule 101 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 88


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  604 alias_declaration: "typedef" "begin of code block" . alias_list "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 597 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 90
    alias_list                        go to state 91


State 49

  606 alias_declaration: "typedef" $@40 . single_alias "end of expression"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 597 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 92


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 585 (optional_shared)

    optional_shared  go to state 93


State 53

  599 optional_public_or_private_alias: "public" .

    $default  reduce using rule 599 (optional_public_or_private_alias)


State 54

  598 optional_public_or_private_alias: "private" .

    $default  reduce using rule 598 (optional_public_or_private_alias)


State 55

  770 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 766 ($@84)

    $@84  go to state 94


State 56

  760 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 756 ($@76)

    $@76  go to state 95


State 57

  765 variant_alias_declaration: "variant" optional_public_or_private_alias . $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 761 ($@80)

    $@80  go to state 96


State 58

  267 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 97


State 59

  265 name_in_namespace: "name" .
  266                  | "name" . "::" "name"

    "::"  shift, and go to state 98

    "::"      [reduce using rule 265 (name_in_namespace)]
    $default  reduce using rule 265 (name_in_namespace)


State 60

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 99


State 61

  106 annotation_declaration_name: "require" .

    $default  reduce using rule 106 (annotation_declaration_name)


State 62

  107 annotation_declaration_name: "private" .

    $default  reduce using rule 107 (annotation_declaration_name)


State 63

  116 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 64

  111 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 101
    name_in_namespace             go to state 70


State 65

  115 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 102
    name_in_namespace             go to state 70


State 66

  108 annotation_declaration_basic: annotation_declaration_name .
  109                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 103

    $default  reduce using rule 108 (annotation_declaration_basic)


State 67

  110 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 110 (annotation_declaration)


State 68

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  117 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 117 (annotation_list)


State 69

  118 annotation_list: annotation_list . ',' annotation_declaration
  120 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 107
    ']'  shift, and go to state 108


State 70

  105 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 105 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  623 class_or_struct: "struct" .

    $default  reduce using rule 623 (class_or_struct)


State 73

  622 class_or_struct: "class" .

    $default  reduce using rule 622 (class_or_struct)


State 74

  211 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 212 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 75

  613 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  616                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 607 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 115


State 76

  631 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 624 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 118


State 77

  586 optional_shared: "shared" .

    $default  reduce using rule 586 (optional_shared)


State 78

  590 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  592           | kwd_let optional_shared . optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 587 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 121


State 79

   93 annotation_argument: annotation_argument_name '=' . string_constant
   94                    | annotation_argument_name '=' . "name"
   95                    | annotation_argument_name '=' . "integer constant"
   96                    | annotation_argument_name '=' . "floating point constant"
   97                    | annotation_argument_name '=' . "true"
   98                    | annotation_argument_name '=' . "false"
  100                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 122
    "false"                    shift, and go to state 123
    "integer constant"         shift, and go to state 124
    "floating point constant"  shift, and go to state 125
    "name"                     shift, and go to state 126
    "start of the string"      shift, and go to state 127
    '('                        shift, and go to state 128

    string_constant  go to state 129


State 80

  102 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 130


State 81

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 131


State 82

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 132


State 83

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 42 (require_module_name)


State 84

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 133


State 85

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 86

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 134


State 87

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 89

  601 single_alias: optional_public_or_private_alias . "name" $@39 '=' type_declaration

    "name"  shift, and go to state 136


State 90

  602 alias_list: single_alias . "end of expression"

    "end of expression"  shift, and go to state 137


State 91

  603 alias_list: alias_list . single_alias "end of expression"
  604 alias_declaration: "typedef" "begin of code block" alias_list . "end of code block"

    "public"             shift, and go to state 53
    "private"            shift, and go to state 54
    "end of code block"  shift, and go to state 138

    $default  reduce using rule 597 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 139


State 92

  606 alias_declaration: "typedef" $@40 single_alias . "end of expression"

    "end of expression"  shift, and go to state 140


State 93

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 94

  770 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 . "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "name"  shift, and go to state 144


State 95

  760 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 . "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "name"  shift, and go to state 145


State 96

  765 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 . "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "name"  shift, and go to state 146


State 97

  267 name_in_namespace: "::" "name" .

    $default  reduce using rule 267 (name_in_namespace)


State 98

  266 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 99

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 100

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  116                       | "|>" annotation_declaration .

    $default  reduce using rule 116 (annotation_declaration)


State 101

  111 annotation_declaration: '!' annotation_declaration .
  112                       | annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 111 (annotation_declaration)


State 102

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  115                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106
    ')'   shift, and go to state 150


State 103

  109 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 104

  112 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 152
    name_in_namespace             go to state 70


State 105

  113 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 153
    name_in_namespace             go to state 70


State 106

  114 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 154
    name_in_namespace             go to state 70


State 107

  118 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 155
    name_in_namespace             go to state 70


State 108

  120 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 120 (optional_annotation_list)


State 109

  214 optional_public_or_private_function: "public" .

    $default  reduce using rule 214 (optional_public_or_private_function)


State 110

  213 optional_public_or_private_function: "private" .

    $default  reduce using rule 213 (optional_public_or_private_function)


State 111

  217 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 216 ($@6)

    $@6  go to state 156


State 112

  211 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 211 (global_function_declaration)


State 113

  609 optional_public_or_private_enum: "public" .

    $default  reduce using rule 609 (optional_public_or_private_enum)


State 114

  608 optional_public_or_private_enum: "private" .

    $default  reduce using rule 608 (optional_public_or_private_enum)


State 115

  613 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  616                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 116

  626 optional_public_or_private_structure: "public" .

    $default  reduce using rule 626 (optional_public_or_private_structure)


State 117

  625 optional_public_or_private_structure: "private" .

    $default  reduce using rule 625 (optional_public_or_private_structure)


State 118

  631 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@45 structure_name $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 629 ($@45)

    $@45  go to state 159


State 119

  589 optional_public_or_private_variable: "public" .

    $default  reduce using rule 589 (optional_public_or_private_variable)


State 120

  588 optional_public_or_private_variable: "private" .

    $default  reduce using rule 588 (optional_public_or_private_variable)


State 121

  590 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  592           | kwd_let optional_shared optional_public_or_private_variable . $@38 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 160

    $default  reduce using rule 591 ($@38)

    $@38  go to state 161


State 122

   97 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 97 (annotation_argument)


State 123

   98 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 98 (annotation_argument)


State 124

   95 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 95 (annotation_argument)


State 125

   96 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 96 (annotation_argument)


State 126

   94 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 94 (annotation_argument)


State 127

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 128

  100 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 129

   93 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 93 (annotation_argument)


State 130

  102 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 131

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 132

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 133

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 134

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 135

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 136

  601 single_alias: optional_public_or_private_alias "name" . $@39 '=' type_declaration

    $default  reduce using rule 600 ($@39)

    $@39  go to state 174


State 137

  602 alias_list: single_alias "end of expression" .

    $default  reduce using rule 602 (alias_list)


State 138

  604 alias_declaration: "typedef" "begin of code block" alias_list "end of code block" .

    $default  reduce using rule 604 (alias_declaration)


State 139

  603 alias_list: alias_list single_alias . "end of expression"

    "end of expression"  shift, and go to state 175


State 140

  606 alias_declaration: "typedef" $@40 single_alias "end of expression" .

    $default  reduce using rule 606 (alias_declaration)


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  770 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" . $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 767 ($@85)

    $@85  go to state 176


State 145

  760 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" . $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 757 ($@77)

    $@77  go to state 177


State 146

  765 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" . $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 762 ($@81)

    $@81  go to state 178


State 147

  266 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 266 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  115 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 115 (annotation_declaration)


State 151

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  109 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 180


State 152

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  112                       | annotation_declaration "&&" annotation_declaration .
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 112 (annotation_declaration)


State 153

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  113                       | annotation_declaration "||" annotation_declaration .
  114                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 104
    "^^"  shift, and go to state 106

    $default  reduce using rule 113 (annotation_declaration)


State 154

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  114                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 104

    $default  reduce using rule 114 (annotation_declaration)


State 155

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  118 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 118 (annotation_list)


State 156

  217 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  610 enum_name: "name" .

    $default  reduce using rule 610 (enum_name)


State 158

  613 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . "begin of code block" $@41 enum_list $@42 "end of code block"
  616                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 212
    ':'                    shift, and go to state 213


State 159

  631 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 . structure_name $@46 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 619 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  590 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 582 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  592 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 520 (optional_field_annotation)

    metadata_argument_list     go to state 220
    optional_field_annotation  go to state 221


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 222
    STRING_CHARACTER_ESC  shift, and go to state 223
    "end of the string"   shift, and go to state 224


State 165

   86 annotation_argument_value: "true" .

    $default  reduce using rule 86 (annotation_argument_value)


State 166

   87 annotation_argument_value: "false" .

    $default  reduce using rule 87 (annotation_argument_value)


State 167

   84 annotation_argument_value: "integer constant" .

    $default  reduce using rule 84 (annotation_argument_value)


State 168

   85 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 169

   83 annotation_argument_value: "name" .

    $default  reduce using rule 83 (annotation_argument_value)


State 170

   82 annotation_argument_value: string_constant .

    $default  reduce using rule 82 (annotation_argument_value)


State 171

   88 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 88 (annotation_argument_value_list)


State 172

   89 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 225
    ')'  shift, and go to state 226


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  601 single_alias: optional_public_or_private_alias "name" $@39 . '=' type_declaration

    '='  shift, and go to state 227


State 175

  603 alias_list: alias_list single_alias "end of expression" .

    $default  reduce using rule 603 (alias_list)


State 176

  770 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 . "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "begin of code block"  shift, and go to state 228


State 177

  760 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 . "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "begin of code block"  shift, and go to state 229


State 178

  765 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 . "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "begin of code block"  shift, and go to state 230


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  109 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 109 (annotation_declaration_basic)


State 181

  127 function_name: "operator" . '!'
  128              | "operator" . '~'
  129              | "operator" . "+="
  130              | "operator" . "-="
  131              | "operator" . "*="
  132              | "operator" . "/="
  133              | "operator" . "%="
  134              | "operator" . "&="
  135              | "operator" . "|="
  136              | "operator" . "^="
  137              | "operator" . "&&="
  138              | "operator" . "||="
  139              | "operator" . "^^="
  140              | "operator" . "&&"
  141              | "operator" . "||"
  142              | "operator" . "^^"
  143              | "operator" . '+'
  144              | "operator" . '-'
  145              | "operator" . '*'
  146              | "operator" . '/'
  147              | "operator" . '%'
  148              | "operator" . '<'
  149              | "operator" . '>'
  150              | "operator" . ".."
  151              | "operator" . "=="
  152              | "operator" . "!="
  153              | "operator" . "<="
  154              | "operator" . ">="
  155              | "operator" . '&'
  156              | "operator" . '|'
  157              | "operator" . '^'
  160              | "operator" . "++"
  161              | "operator" . "--"
  162              | "operator" . "<<"
  163              | "operator" . ">>"
  164              | "operator" . "<<="
  165              | "operator" . ">>="
  166              | "operator" . "<<<"
  167              | "operator" . ">>>"
  168              | "operator" . "<<<="
  169              | "operator" . ">>>="
  170              | "operator" . '[' ']'
  171              | "operator" . "?[" ']'
  172              | "operator" . '.'
  173              | "operator" . "?."
  174              | "operator" . '.' "name"
  175              | "operator" . '.' "name" ":="
  176              | "operator" . "?." "name"
  177              | "operator" . ":="
  178              | "operator" . "delete"
  179              | "operator" . "??"
  180              | "operator" . "is"
  181              | "operator" . "as"
  182              | "operator" . "is" "name"
  183              | "operator" . "as" "name"
  184              | "operator" . '?' "as"
  185              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 231
    "as"      shift, and go to state 232
    "delete"  shift, and go to state 233
    "+="      shift, and go to state 234
    "-="      shift, and go to state 235
    "/="      shift, and go to state 236
    "*="      shift, and go to state 237
    "%="      shift, and go to state 238
    "&="      shift, and go to state 239
    "|="      shift, and go to state 240
    "^="      shift, and go to state 241
    "<<"      shift, and go to state 242
    ">>"      shift, and go to state 243
    "++"      shift, and go to state 244
    "--"      shift, and go to state 245
    "<="      shift, and go to state 246
    "<<="     shift, and go to state 247
    ">>="     shift, and go to state 248
    ">="      shift, and go to state 249
    "=="      shift, and go to state 250
    "!="      shift, and go to state 251
    "??"      shift, and go to state 252
    "?."      shift, and go to state 253
    "?["      shift, and go to state 254
    ":="      shift, and go to state 255
    "<<<"     shift, and go to state 256
    ">>>"     shift, and go to state 257
    "<<<="    shift, and go to state 258
    ">>>="    shift, and go to state 259
    "&&"      shift, and go to state 260
    "||"      shift, and go to state 261
    "^^"      shift, and go to state 262
    "&&="     shift, and go to state 263
    "||="     shift, and go to state 264
    "^^="     shift, and go to state 265
    ".."      shift, and go to state 266
    '?'       shift, and go to state 267
    '|'       shift, and go to state 268
    '^'       shift, and go to state 269
    '&'       shift, and go to state 270
    '<'       shift, and go to state 271
    '>'       shift, and go to state 272
    '-'       shift, and go to state 273
    '+'       shift, and go to state 274
    '*'       shift, and go to state 275
    '/'       shift, and go to state 276
    '%'       shift, and go to state 277
    '~'       shift, and go to state 278
    '!'       shift, and go to state 279
    '.'       shift, and go to state 280
    '['       shift, and go to state 281


State 182

  186 function_name: "bool" .

    $default  reduce using rule 186 (function_name)


State 183

  187 function_name: "string" .

    $default  reduce using rule 187 (function_name)


State 184

  188 function_name: "int" .

    $default  reduce using rule 188 (function_name)


State 185

  189 function_name: "int2" .

    $default  reduce using rule 189 (function_name)


State 186

  190 function_name: "int3" .

    $default  reduce using rule 190 (function_name)


State 187

  191 function_name: "int4" .

    $default  reduce using rule 191 (function_name)


State 188

  192 function_name: "uint" .

    $default  reduce using rule 192 (function_name)


State 189

  193 function_name: "uint2" .

    $default  reduce using rule 193 (function_name)


State 190

  194 function_name: "uint3" .

    $default  reduce using rule 194 (function_name)


State 191

  195 function_name: "uint4" .

    $default  reduce using rule 195 (function_name)


State 192

  196 function_name: "float" .

    $default  reduce using rule 196 (function_name)


State 193

  197 function_name: "float2" .

    $default  reduce using rule 197 (function_name)


State 194

  198 function_name: "float3" .

    $default  reduce using rule 198 (function_name)


State 195

  199 function_name: "float4" .

    $default  reduce using rule 199 (function_name)


State 196

  200 function_name: "range" .

    $default  reduce using rule 200 (function_name)


State 197

  201 function_name: "urange" .

    $default  reduce using rule 201 (function_name)


State 198

  202 function_name: "range64" .

    $default  reduce using rule 202 (function_name)


State 199

  203 function_name: "urange64" .

    $default  reduce using rule 203 (function_name)


State 200

  204 function_name: "int64" .

    $default  reduce using rule 204 (function_name)


State 201

  205 function_name: "uint64" .

    $default  reduce using rule 205 (function_name)


State 202

  206 function_name: "double" .

    $default  reduce using rule 206 (function_name)


State 203

  207 function_name: "int8" .

    $default  reduce using rule 207 (function_name)


State 204

  208 function_name: "uint8" .

    $default  reduce using rule 208 (function_name)


State 205

  209 function_name: "int16" .

    $default  reduce using rule 209 (function_name)


State 206

  210 function_name: "uint16" .

    $default  reduce using rule 210 (function_name)


State 207

  158 function_name: "++" . "operator"

    "operator"  shift, and go to state 282


State 208

  159 function_name: "--" . "operator"

    "operator"  shift, and go to state 283


State 209

  126 function_name: "name" .

    $default  reduce using rule 126 (function_name)


State 210

  215 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 285


State 211

  217 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 287


State 212

  613 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" . $@41 enum_list $@42 "end of code block"

    $default  reduce using rule 611 ($@41)

    $@41  go to state 288


State 213

  616 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "int"     shift, and go to state 289
    "uint"    shift, and go to state 290
    "int64"   shift, and go to state 291
    "uint64"  shift, and go to state 292
    "int8"    shift, and go to state 293
    "uint8"   shift, and go to state 294
    "int16"   shift, and go to state 295
    "uint16"  shift, and go to state 296

    enum_basic_type_declaration  go to state 297


State 214

  620 optional_sealed: "sealed" .

    $default  reduce using rule 620 (optional_sealed)


State 215

  621 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 298


State 216

  631 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name . $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 630 ($@46)

    $@46  go to state 299


State 217

  584 global_variable_declaration_list: global_variable_declaration_list . $@37 optional_field_annotation let_variable_declaration
  590 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 300

    $default  reduce using rule 583 ($@37)

    $@37  go to state 301


State 218

  521 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 302


State 219

  103 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 303


State 220

  104 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  522 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 304

    $default  reduce using rule 522 (optional_field_annotation)


State 221

  592 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 305
    "name"  shift, and go to state 306

    let_variable_name_with_pos_list  go to state 307
    let_variable_declaration         go to state 308


State 222

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 223

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 224

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 225

   89 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant            go to state 170
    annotation_argument_value  go to state 309


State 226

  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 100 (annotation_argument)


State 227

  601 single_alias: optional_public_or_private_alias "name" $@39 '=' . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 357


State 228

  770 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" . $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 768 ($@86)

    $@86  go to state 358


State 229

  760 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" . $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 758 ($@78)

    $@78  go to state 359


State 230

  765 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" . $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 763 ($@82)

    $@82  go to state 360


State 231

  180 function_name: "operator" "is" .
  182              | "operator" "is" . "name"

    "name"  shift, and go to state 361

    $default  reduce using rule 180 (function_name)


State 232

  181 function_name: "operator" "as" .
  183              | "operator" "as" . "name"

    "name"  shift, and go to state 362

    $default  reduce using rule 181 (function_name)


State 233

  178 function_name: "operator" "delete" .

    $default  reduce using rule 178 (function_name)


State 234

  129 function_name: "operator" "+=" .

    $default  reduce using rule 129 (function_name)


State 235

  130 function_name: "operator" "-=" .

    $default  reduce using rule 130 (function_name)


State 236

  132 function_name: "operator" "/=" .

    $default  reduce using rule 132 (function_name)


State 237

  131 function_name: "operator" "*=" .

    $default  reduce using rule 131 (function_name)


State 238

  133 function_name: "operator" "%=" .

    $default  reduce using rule 133 (function_name)


State 239

  134 function_name: "operator" "&=" .

    $default  reduce using rule 134 (function_name)


State 240

  135 function_name: "operator" "|=" .

    $default  reduce using rule 135 (function_name)


State 241

  136 function_name: "operator" "^=" .

    $default  reduce using rule 136 (function_name)


State 242

  162 function_name: "operator" "<<" .

    $default  reduce using rule 162 (function_name)


State 243

  163 function_name: "operator" ">>" .

    $default  reduce using rule 163 (function_name)


State 244

  160 function_name: "operator" "++" .

    $default  reduce using rule 160 (function_name)


State 245

  161 function_name: "operator" "--" .

    $default  reduce using rule 161 (function_name)


State 246

  153 function_name: "operator" "<=" .

    $default  reduce using rule 153 (function_name)


State 247

  164 function_name: "operator" "<<=" .

    $default  reduce using rule 164 (function_name)


State 248

  165 function_name: "operator" ">>=" .

    $default  reduce using rule 165 (function_name)


State 249

  154 function_name: "operator" ">=" .

    $default  reduce using rule 154 (function_name)


State 250

  151 function_name: "operator" "==" .

    $default  reduce using rule 151 (function_name)


State 251

  152 function_name: "operator" "!=" .

    $default  reduce using rule 152 (function_name)


State 252

  179 function_name: "operator" "??" .

    $default  reduce using rule 179 (function_name)


State 253

  173 function_name: "operator" "?." .
  176              | "operator" "?." . "name"

    "name"  shift, and go to state 363

    $default  reduce using rule 173 (function_name)


State 254

  171 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 364


State 255

  177 function_name: "operator" ":=" .

    $default  reduce using rule 177 (function_name)


State 256

  166 function_name: "operator" "<<<" .

    $default  reduce using rule 166 (function_name)


State 257

  167 function_name: "operator" ">>>" .

    $default  reduce using rule 167 (function_name)


State 258

  168 function_name: "operator" "<<<=" .

    $default  reduce using rule 168 (function_name)


State 259

  169 function_name: "operator" ">>>=" .

    $default  reduce using rule 169 (function_name)


State 260

  140 function_name: "operator" "&&" .

    $default  reduce using rule 140 (function_name)


State 261

  141 function_name: "operator" "||" .

    $default  reduce using rule 141 (function_name)


State 262

  142 function_name: "operator" "^^" .

    $default  reduce using rule 142 (function_name)


State 263

  137 function_name: "operator" "&&=" .

    $default  reduce using rule 137 (function_name)


State 264

  138 function_name: "operator" "||=" .

    $default  reduce using rule 138 (function_name)


State 265

  139 function_name: "operator" "^^=" .

    $default  reduce using rule 139 (function_name)


State 266

  150 function_name: "operator" ".." .

    $default  reduce using rule 150 (function_name)


State 267

  184 function_name: "operator" '?' . "as"
  185              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 365


State 268

  156 function_name: "operator" '|' .

    $default  reduce using rule 156 (function_name)


State 269

  157 function_name: "operator" '^' .

    $default  reduce using rule 157 (function_name)


State 270

  155 function_name: "operator" '&' .

    $default  reduce using rule 155 (function_name)


State 271

  148 function_name: "operator" '<' .

    $default  reduce using rule 148 (function_name)


State 272

  149 function_name: "operator" '>' .

    $default  reduce using rule 149 (function_name)


State 273

  144 function_name: "operator" '-' .

    $default  reduce using rule 144 (function_name)


State 274

  143 function_name: "operator" '+' .

    $default  reduce using rule 143 (function_name)


State 275

  145 function_name: "operator" '*' .

    $default  reduce using rule 145 (function_name)


State 276

  146 function_name: "operator" '/' .

    $default  reduce using rule 146 (function_name)


State 277

  147 function_name: "operator" '%' .

    $default  reduce using rule 147 (function_name)


State 278

  128 function_name: "operator" '~' .

    $default  reduce using rule 128 (function_name)


State 279

  127 function_name: "operator" '!' .

    $default  reduce using rule 127 (function_name)


State 280

  172 function_name: "operator" '.' .
  174              | "operator" '.' . "name"
  175              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 366

    $default  reduce using rule 172 (function_name)


State 281

  170 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 367


State 282

  158 function_name: "++" "operator" .

    $default  reduce using rule 158 (function_name)


State 283

  159 function_name: "--" "operator" .

    $default  reduce using rule 159 (function_name)


State 284

  122 optional_function_argument_list: '(' . ')'
  123                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 368
    "[["  shift, and go to state 218
    ')'   shift, and go to state 369
    '@'   shift, and go to state 219

    $default  reduce using rule 520 (optional_field_annotation)

    metadata_argument_list         go to state 220
    optional_field_annotation      go to state 370
    function_argument_declaration  go to state 371
    function_argument_list         go to state 372


State 285

  215 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 374


State 286

  218 expression_block: "begin of code block" . expressions "end of code block"
  219                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 244 (expressions)

    expressions  go to state 375


State 287

  217 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 217 (function_declaration)


State 288

  613 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 . enum_list $@42 "end of code block"

    $default  reduce using rule 593 (enum_list)

    enum_list  go to state 376


State 289

  664 enum_basic_type_declaration: "int" .

    $default  reduce using rule 664 (enum_basic_type_declaration)


State 290

  667 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 667 (enum_basic_type_declaration)


State 291

  670 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 670 (enum_basic_type_declaration)


State 292

  671 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 671 (enum_basic_type_declaration)


State 293

  665 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 665 (enum_basic_type_declaration)


State 294

  668 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 668 (enum_basic_type_declaration)


State 295

  666 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 666 (enum_basic_type_declaration)


State 296

  669 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 669 (enum_basic_type_declaration)


State 297

  616 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 377


State 298

  621 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 378

    $default  reduce using rule 617 (optional_structure_parent)

    optional_structure_parent  go to state 379


State 299

  631 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 380

    $default  reduce using rule 627 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 381


State 300

  590 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 590 (global_let)


State 301

  584 global_variable_declaration_list: global_variable_declaration_list $@37 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 520 (optional_field_annotation)

    metadata_argument_list     go to state 220
    optional_field_annotation  go to state 382


State 302

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  521 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 383


State 303

  103 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 103 (metadata_argument_list)


State 304

  104 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 384


State 305

  573 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 385


State 306

  572 let_variable_name_with_pos_list: "name" .
  574                                | "name" . "aka" "name"

    "aka"  shift, and go to state 386

    $default  reduce using rule 572 (let_variable_name_with_pos_list)


State 307

  575 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  576                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  577 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  578                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  579                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  580                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  581                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 387
    ':'  shift, and go to state 388
    '&'  shift, and go to state 389

    $default  reduce using rule 570 (optional_ref)

    optional_ref  go to state 390


State 308

  592 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 592 (global_let)


State 309

   89 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 310

  696 type_declaration_no_options: "type" . '<' $@49 type_declaration '>' $@50

    '<'  shift, and go to state 391


State 311

  719 type_declaration_no_options: "array" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 392


State 312

  722 type_declaration_no_options: "table" . '<' $@56 table_type_pair '>' $@57

    '<'  shift, and go to state 393


State 313

  697 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 394


State 314

  725 type_declaration_no_options: "iterator" . '<' $@58 type_declaration '>' $@59

    '<'  shift, and go to state 395


State 315

  715 type_declaration_no_options: "smart_ptr" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 396


State 316

  637 basic_type_declaration: "bool" .

    $default  reduce using rule 637 (basic_type_declaration)


State 317

  657 basic_type_declaration: "void" .

    $default  reduce using rule 657 (basic_type_declaration)


State 318

  638 basic_type_declaration: "string" .

    $default  reduce using rule 638 (basic_type_declaration)


State 319

  673 auto_type_declaration: "auto" .
  674                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 397

    '('       [reduce using rule 673 (auto_type_declaration)]
    $default  reduce using rule 673 (auto_type_declaration)


State 320

  639 basic_type_declaration: "int" .

    $default  reduce using rule 639 (basic_type_declaration)


State 321

  643 basic_type_declaration: "int2" .

    $default  reduce using rule 643 (basic_type_declaration)


State 322

  644 basic_type_declaration: "int3" .

    $default  reduce using rule 644 (basic_type_declaration)


State 323

  645 basic_type_declaration: "int4" .

    $default  reduce using rule 645 (basic_type_declaration)


State 324

  646 basic_type_declaration: "uint" .

    $default  reduce using rule 646 (basic_type_declaration)


State 325

  663 basic_type_declaration: "bitfield" .
  683 bitfield_type_declaration: "bitfield" . '<' $@47 bitfield_bits '>' $@48

    '<'  shift, and go to state 398

    $default  reduce using rule 663 (basic_type_declaration)


State 326

  650 basic_type_declaration: "uint2" .

    $default  reduce using rule 650 (basic_type_declaration)


State 327

  651 basic_type_declaration: "uint3" .

    $default  reduce using rule 651 (basic_type_declaration)


State 328

  652 basic_type_declaration: "uint4" .

    $default  reduce using rule 652 (basic_type_declaration)


State 329

  653 basic_type_declaration: "float" .

    $default  reduce using rule 653 (basic_type_declaration)


State 330

  654 basic_type_declaration: "float2" .

    $default  reduce using rule 654 (basic_type_declaration)


State 331

  655 basic_type_declaration: "float3" .

    $default  reduce using rule 655 (basic_type_declaration)


State 332

  656 basic_type_declaration: "float4" .

    $default  reduce using rule 656 (basic_type_declaration)


State 333

  658 basic_type_declaration: "range" .

    $default  reduce using rule 658 (basic_type_declaration)


State 334

  659 basic_type_declaration: "urange" .

    $default  reduce using rule 659 (basic_type_declaration)


State 335

  660 basic_type_declaration: "range64" .

    $default  reduce using rule 660 (basic_type_declaration)


State 336

  661 basic_type_declaration: "urange64" .

    $default  reduce using rule 661 (basic_type_declaration)


State 337

  726 type_declaration_no_options: "block" .
  729                            | "block" . '<' $@60 type_declaration '>' $@61
  732                            | "block" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 399

    $default  reduce using rule 726 (type_declaration_no_options)


State 338

  642 basic_type_declaration: "int64" .

    $default  reduce using rule 642 (basic_type_declaration)


State 339

  649 basic_type_declaration: "uint64" .

    $default  reduce using rule 649 (basic_type_declaration)


State 340

  662 basic_type_declaration: "double" .

    $default  reduce using rule 662 (basic_type_declaration)


State 341

  733 type_declaration_no_options: "function" .
  736                            | "function" . '<' $@64 type_declaration '>' $@65
  739                            | "function" . '<' $@66 optional_function_argument_list optional_function_type '>' $@67

    '<'  shift, and go to state 400

    $default  reduce using rule 733 (type_declaration_no_options)


State 342

  740 type_declaration_no_options: "lambda" .
  743                            | "lambda" . '<' $@68 type_declaration '>' $@69
  746                            | "lambda" . '<' $@70 optional_function_argument_list optional_function_type '>' $@71

    '<'  shift, and go to state 401

    $default  reduce using rule 740 (type_declaration_no_options)


State 343

  640 basic_type_declaration: "int8" .

    $default  reduce using rule 640 (basic_type_declaration)


State 344

  647 basic_type_declaration: "uint8" .

    $default  reduce using rule 647 (basic_type_declaration)


State 345

  641 basic_type_declaration: "int16" .

    $default  reduce using rule 641 (basic_type_declaration)


State 346

  648 basic_type_declaration: "uint16" .

    $default  reduce using rule 648 (basic_type_declaration)


State 347

  749 type_declaration_no_options: "tuple" . '<' $@72 tuple_type_list '>' $@73

    '<'  shift, and go to state 402


State 348

  752 type_declaration_no_options: "variant" . '<' $@74 variant_type_list '>' $@75

    '<'  shift, and go to state 403


State 349

  675 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 404


State 350

  698 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  700                            | '$' . name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 405


State 351

  672 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 672 (structure_type_declaration)


State 352

  688 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 688 (type_declaration_no_options)


State 353

  691 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 691 (type_declaration_no_options)


State 354

  689 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 689 (type_declaration_no_options)


State 355

  690 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 690 (type_declaration_no_options)


State 356

  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"
  753 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    $default  reduce using rule 753 (type_declaration)

    dim_list  go to state 416


State 357

  601 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration .
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 601 (single_alias)


State 358

  770 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 . bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 678 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 418


State 359

  760 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 . tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 550 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 419


State 360

  765 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 . variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 556 (variant_alias_type_list)

    variant_alias_type_list  go to state 420


State 361

  182 function_name: "operator" "is" "name" .

    $default  reduce using rule 182 (function_name)


State 362

  183 function_name: "operator" "as" "name" .

    $default  reduce using rule 183 (function_name)


State 363

  176 function_name: "operator" "?." "name" .

    $default  reduce using rule 176 (function_name)


State 364

  171 function_name: "operator" "?[" ']' .

    $default  reduce using rule 171 (function_name)


State 365

  184 function_name: "operator" '?' "as" .
  185              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 421

    $default  reduce using rule 184 (function_name)


State 366

  174 function_name: "operator" '.' "name" .
  175              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 422

    $default  reduce using rule 174 (function_name)


State 367

  170 function_name: "operator" '[' ']' .

    $default  reduce using rule 170 (function_name)


State 368

  543 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 423


State 369

  122 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 122 (optional_function_argument_list)


State 370

  542 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 424
    "var"  shift, and go to state 425

    $default  reduce using rule 296 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 426


State 371

  544 function_argument_list: function_argument_declaration .

    $default  reduce using rule 544 (function_argument_list)


State 372

  123 optional_function_argument_list: '(' function_argument_list . ')'
  545 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 427
    ')'                  shift, and go to state 428


State 373

  125 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 429


State 374

  215 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 215 (function_declaration_header)


State 375

  218 expression_block: "begin of code block" expressions . "end of code block"
  219                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  245 expressions: expressions . expression_any
  246            | expressions . error

    error                             shift, and go to state 430
    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 433
    "if"                              shift, and go to state 434
    "static_if"                       shift, and go to state 435
    "for"                             shift, and go to state 436
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "return"                          shift, and go to state 443
    "null"                            shift, and go to state 444
    "break"                           shift, and go to state 445
    "try"                             shift, and go to state 446
    "table"                           shift, and go to state 447
    "delete"                          shift, and go to state 448
    "deref"                           shift, and go to state 449
    "with"                            shift, and go to state 450
    "assume"                          shift, and go to state 451
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 454
    "continue"                        shift, and go to state 455
    "pass"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 457
    "label"                           shift, and go to state 458
    "goto"                            shift, and go to state 459
    "unsafe"                          shift, and go to state 460
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "yield"                           shift, and go to state 467
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 490
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    "end of code block"               shift, and go to state 494
    "end of expression"               shift, and go to state 495
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder             go to state 505
    expr_reader                go to state 506
    expression_label           go to state 507
    expression_goto            go to state 508
    if_or_static_if            go to state 509
    expression_if_one_liner    go to state 510
    expression_if_then_else    go to state 511
    expression_for_loop        go to state 512
    expression_unsafe          go to state 513
    expression_while_loop      go to state 514
    expression_with            go to state 515
    expression_with_alias      go to state 516
    expr_call_pipe             go to state 517
    expression_any             go to state 518
    expr_keyword               go to state 519
    expression_keyword         go to state 520
    expr_pipe                  go to state 521
    name_in_namespace          go to state 522
    expression_delete          go to state 523
    expr_new                   go to state 524
    expression_break           go to state 525
    expression_continue        go to state 526
    expression_return_no_pipe  go to state 527
    expression_return          go to state 528
    expression_yield_no_pipe   go to state 529
    expression_yield           go to state 530
    expression_try_catch       go to state 531
    kwd_let                    go to state 532
    expression_let             go to state 533
    expr_cast                  go to state 534
    expr_type_decl             go to state 535
    expr_type_info             go to state 536
    block_or_lambda            go to state 537
    expr_full_block            go to state 538
    expr_numeric_const         go to state 539
    expr_assign                go to state 540
    expr_assign_pipe           go to state 541
    expr_named_call            go to state 542
    expr_method_call           go to state 543
    func_addr_expr             go to state 544
    expr_field                 go to state 545
    expr_call                  go to state 546
    expr                       go to state 547
    expr_mtag                  go to state 548
    basic_type_declaration     go to state 549
    make_decl                  go to state 550
    make_struct_decl           go to state 551
    make_tuple_call            go to state 552
    make_dim_decl              go to state 553
    make_table_decl            go to state 554
    array_comprehension        go to state 555


State 376

  594 enum_list: enum_list . "end of expression"
  595          | enum_list . "name" "end of expression"
  596          | enum_list . "name" '=' expr "end of expression"
  613 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list . $@42 "end of code block"

    "name"               shift, and go to state 556
    "end of expression"  shift, and go to state 557

    $default  reduce using rule 612 ($@42)

    $@42  go to state 558


State 377

  616 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" . $@43 enum_list $@44 "end of code block"

    $default  reduce using rule 614 ($@43)

    $@43  go to state 559


State 378

  618 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 560


State 379

  621 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 621 (structure_name)


State 380

  628 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 534 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 561


State 381

  631 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list .

    $default  reduce using rule 631 (structure_declaration)


State 382

  584 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 305
    "name"  shift, and go to state 306

    let_variable_name_with_pos_list  go to state 307
    let_variable_declaration         go to state 562


State 383

  521 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 563


State 384

  104 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 104 (metadata_argument_list)


State 385

  573 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 568
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 386

  574 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 569


State 387

  575 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  576                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 570


State 388

  577 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  578                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  579                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 571


State 389

  571 optional_ref: '&' .

    $default  reduce using rule 571 (optional_ref)


State 390

  580 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  581                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 572
    ":="  shift, and go to state 573
    '='   shift, and go to state 574

    copy_or_move_or_clone  go to state 575


State 391

  696 type_declaration_no_options: "type" '<' . $@49 type_declaration '>' $@50

    $default  reduce using rule 694 ($@49)

    $@49  go to state 576


State 392

  719 type_declaration_no_options: "array" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 717 ($@54)

    $@54  go to state 577


State 393

  722 type_declaration_no_options: "table" '<' . $@56 table_type_pair '>' $@57

    $default  reduce using rule 720 ($@56)

    $@56  go to state 578


State 394

  697 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 579
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 395

  725 type_declaration_no_options: "iterator" '<' . $@58 type_declaration '>' $@59

    $default  reduce using rule 723 ($@58)

    $@58  go to state 580


State 396

  715 type_declaration_no_options: "smart_ptr" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 713 ($@52)

    $@52  go to state 581


State 397

  674 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 582


State 398

  683 bitfield_type_declaration: "bitfield" '<' . $@47 bitfield_bits '>' $@48

    $default  reduce using rule 681 ($@47)

    $@47  go to state 583


State 399

  729 type_declaration_no_options: "block" '<' . $@60 type_declaration '>' $@61
  732                            | "block" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 730 ($@62)
    '>'       reduce using rule 730 ($@62)
    '('       reduce using rule 730 ($@62)
    $default  reduce using rule 727 ($@60)

    $@60  go to state 584
    $@62  go to state 585


State 400

  736 type_declaration_no_options: "function" '<' . $@64 type_declaration '>' $@65
  739                            | "function" '<' . $@66 optional_function_argument_list optional_function_type '>' $@67

    ':'       reduce using rule 737 ($@66)
    '>'       reduce using rule 737 ($@66)
    '('       reduce using rule 737 ($@66)
    $default  reduce using rule 734 ($@64)

    $@64  go to state 586
    $@66  go to state 587


State 401

  743 type_declaration_no_options: "lambda" '<' . $@68 type_declaration '>' $@69
  746                            | "lambda" '<' . $@70 optional_function_argument_list optional_function_type '>' $@71

    ':'       reduce using rule 744 ($@70)
    '>'       reduce using rule 744 ($@70)
    '('       reduce using rule 744 ($@70)
    $default  reduce using rule 741 ($@68)

    $@68  go to state 588
    $@70  go to state 589


State 402

  749 type_declaration_no_options: "tuple" '<' . $@72 tuple_type_list '>' $@73

    $default  reduce using rule 747 ($@72)

    $@72  go to state 590


State 403

  752 type_declaration_no_options: "variant" '<' . $@74 variant_type_list '>' $@75

    $default  reduce using rule 750 ($@74)

    $@74  go to state 591


State 404

  675 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 592
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 405

  698 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  700                            | '$' name_in_namespace . '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 593
    '('  shift, and go to state 594


State 406

  703 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 703 (type_declaration_no_options)


State 407

  708 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 708 (type_declaration_no_options)


State 408

  702 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 702 (type_declaration_no_options)


State 409

  710 type_declaration_no_options: type_declaration_no_options "==" . "const"
  711                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 595
    '&'      shift, and go to state 596


State 410

  716 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 716 (type_declaration_no_options)


State 411

  712 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 712 (type_declaration_no_options)


State 412

  705 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 705 (type_declaration_no_options)


State 413

  701 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  704                            | type_declaration_no_options '-' . "const"
  706                            | type_declaration_no_options '-' . '&'
  709                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 597
    '&'      shift, and go to state 598
    '['      shift, and go to state 599
    '#'      shift, and go to state 600


State 414

  686 dim_list: '[' . expr ']'
  693 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    ']'                               shift, and go to state 601
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 602
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 415

  707 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 707 (type_declaration_no_options)


State 416

  687 dim_list: dim_list . '[' expr ']'
  692 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 603

    '['       [reduce using rule 692 (type_declaration_no_options)]
    $default  reduce using rule 692 (type_declaration_no_options)


State 417

  754 type_declaration: type_declaration '|' . type_declaration_no_options
  755                 | type_declaration '|' . '#'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350
    '#'          shift, and go to state 604

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 605


State 418

  679 bitfield_alias_bits: bitfield_alias_bits . "end of expression"
  680                    | bitfield_alias_bits . "name" "end of expression"
  770 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits . $@87 "end of code block"

    "name"               shift, and go to state 606
    "end of expression"  shift, and go to state 607

    $default  reduce using rule 769 ($@87)

    $@87  go to state 608


State 419

  551 tuple_alias_type_list: tuple_alias_type_list . "end of expression"
  552                      | tuple_alias_type_list . tuple_type "end of expression"
  760 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list . $@79 "end of code block"

    "type"               shift, and go to state 310
    "array"              shift, and go to state 311
    "table"              shift, and go to state 312
    "typedecl"           shift, and go to state 313
    "iterator"           shift, and go to state 314
    "smart_ptr"          shift, and go to state 315
    "bool"               shift, and go to state 316
    "void"               shift, and go to state 317
    "string"             shift, and go to state 318
    "auto"               shift, and go to state 319
    "int"                shift, and go to state 320
    "int2"               shift, and go to state 321
    "int3"               shift, and go to state 322
    "int4"               shift, and go to state 323
    "uint"               shift, and go to state 324
    "bitfield"           shift, and go to state 325
    "uint2"              shift, and go to state 326
    "uint3"              shift, and go to state 327
    "uint4"              shift, and go to state 328
    "float"              shift, and go to state 329
    "float2"             shift, and go to state 330
    "float3"             shift, and go to state 331
    "float4"             shift, and go to state 332
    "range"              shift, and go to state 333
    "urange"             shift, and go to state 334
    "range64"            shift, and go to state 335
    "urange64"           shift, and go to state 336
    "block"              shift, and go to state 337
    "int64"              shift, and go to state 338
    "uint64"             shift, and go to state 339
    "double"             shift, and go to state 340
    "function"           shift, and go to state 341
    "lambda"             shift, and go to state 342
    "int8"               shift, and go to state 343
    "uint8"              shift, and go to state 344
    "int16"              shift, and go to state 345
    "uint16"             shift, and go to state 346
    "tuple"              shift, and go to state 347
    "variant"            shift, and go to state 348
    "::"                 shift, and go to state 58
    "$t"                 shift, and go to state 349
    "name"               shift, and go to state 609
    "end of expression"  shift, and go to state 610
    '$'                  shift, and go to state 350

    $default  reduce using rule 759 ($@79)

    name_in_namespace            go to state 351
    tuple_type                   go to state 611
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 612
    $@79                         go to state 613


State 420

  557 variant_alias_type_list: variant_alias_type_list . "end of expression"
  558                        | variant_alias_type_list . variant_type "end of expression"
  765 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list . $@83 "end of code block"

    "name"               shift, and go to state 614
    "end of expression"  shift, and go to state 615

    $default  reduce using rule 764 ($@83)

    variant_type  go to state 616
    $@83          go to state 617


State 421

  185 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 185 (function_name)


State 422

  175 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 175 (function_name)


State 423

  543 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 618
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 424

  294 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 294 (kwd_let_var_or_nothing)


State 425

  295 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 295 (kwd_let_var_or_nothing)


State 426

  542 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_declaration         go to state 621
    variable_name_with_pos_list  go to state 622


State 427

  545 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 368
    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 520 (optional_field_annotation)

    metadata_argument_list         go to state 220
    optional_field_annotation      go to state 370
    function_argument_declaration  go to state 623


State 428

  123 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 123 (optional_function_argument_list)


State 429

  125 optional_function_type: ':' type_declaration .
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 125 (optional_function_type)


State 430

  246 expressions: expressions error .

    $default  reduce using rule 246 (expressions)


State 431

  816 make_struct_decl: "struct" . '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 624


State 432

  819 make_struct_decl: "class" . '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 625


State 433

   78 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 626
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 434

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 435

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 436

   76 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 75 ($@4)

    $@4  go to state 627


State 437

  426 expr: "true" .

    $default  reduce using rule 426 (expr)


State 438

  427 expr: "false" .

    $default  reduce using rule 427 (expr)


State 439

  274 expr_new: "new" . new_type_declaration
  275         | "new" . new_type_declaration '(' use_initializer ')'
  276         | "new" . new_type_declaration '(' expr_list ')'
  277         | "new" . new_type_declaration '(' make_struct_single ')'
  278         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  279         | "new" . make_decl

    "struct"               shift, and go to state 431
    "class"                shift, and go to state 432
    "array"                shift, and go to state 442
    "table"                shift, and go to state 447
    "fixed_array"          shift, and go to state 461
    "default"              shift, and go to state 462
    "tuple"                shift, and go to state 464
    "variant"              shift, and go to state 465
    "::"                   shift, and go to state 58
    "[["                   shift, and go to state 480
    "[{"                   shift, and go to state 481
    "{{"                   shift, and go to state 482
    "name"                 shift, and go to state 59
    "begin of code block"  shift, and go to state 493
    '<'                    shift, and go to state 628
    '['                    shift, and go to state 501

    name_in_namespace           go to state 351
    new_type_declaration        go to state 629
    structure_type_declaration  go to state 630
    make_decl                   go to state 631
    make_struct_decl            go to state 551
    make_tuple_call             go to state 552
    make_dim_decl               go to state 553
    make_table_decl             go to state 554
    array_comprehension         go to state 555


State 440

  321 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  322               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  323               | "typeinfo" . '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'
  324               | "typeinfo" . name_in_namespace '(' expr ')'
  325               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  326               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59
    '('     shift, and go to state 632

    name_in_namespace  go to state 633


State 441

  320 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 634


State 442

  842 make_dim_decl: "array" . "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim_decl ')'
  845              | "array" . "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim_decl ')'
  848              | "array" . "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'
  849              | "array" . '(' expr_list optional_comma ')'
  852              | "array" . '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    "struct"   shift, and go to state 635
    "tuple"    shift, and go to state 636
    "variant"  shift, and go to state 637
    '<'        shift, and go to state 638
    '('        shift, and go to state 639


State 443

  282 expression_return_no_pipe: "return" .
  283                          | "return" . expr_list
  284                          | "return" . "<-" expr_list
  286 expression_return: "return" . expr_pipe
  287                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 640
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 282 (expression_return_no_pipe)

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 641
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 642
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 643
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 644
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 444

  420 expr: "null" .

    $default  reduce using rule 420 (expr)


State 445

  280 expression_break: "break" .

    $default  reduce using rule 280 (expression_break)


State 446

  293 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 645


State 447

  863 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  864                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  865                | "table" . '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 646
    '('  shift, and go to state 647


State 448

  268 expression_delete: "delete" . expr
  269                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "explicit"                        shift, and go to state 648
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 649
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 449

  470 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 650


State 450

   79 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 651
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 451

   81 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 652


State 452

  311 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 653


State 453

  314 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 654


State 454

  471 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 655


State 455

  281 expression_continue: "continue" .

    $default  reduce using rule 281 (expression_continue)


State 456

  243 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 656


State 457

  317 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 657


State 458

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 658


State 459

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "label"                           shift, and go to state 659
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 660
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 460

   77 expression_unsafe: "unsafe" . expression_block
  502 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 286
    '('                    shift, and go to state 661

    expression_block  go to state 662


State 461

  853 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  856              | "fixed_array" . '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 663
    '('  shift, and go to state 664


State 462

  825 make_struct_decl: "default" . '<' $@94 type_declaration_no_options '>' $@95 use_initializer

    '<'  shift, and go to state 665


State 463

  663 basic_type_declaration: "bitfield" .

    $default  reduce using rule 663 (basic_type_declaration)


State 464

  831 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  834                | "tuple" . '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 666
    '('  shift, and go to state 667


State 465

  822 make_struct_decl: "variant" . '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    '<'  shift, and go to state 668


State 466

  222 expr_call_pipe: "generator" . '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  472 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  473     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 669


State 467

  288 expression_yield_no_pipe: "yield" . expr
  289                         | "yield" . "<-" expr
  291 expression_yield: "yield" . expr_pipe
  292                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 670
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 671
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 643
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 672
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 468

  456 expr: "++" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 673
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 469

  457 expr: "--" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 674
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 470

  263 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 675

    expression_block  go to state 676
    block_or_lambda   go to state 677
    expr_block        go to state 678


State 471

  261 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 675

    expression_block  go to state 676
    block_or_lambda   go to state 677
    expr_block        go to state 679


State 472

  262 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 675

    expression_block  go to state 676
    block_or_lambda   go to state 677
    expr_block        go to state 680


State 473

  504 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 681


State 474

  505 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 682


State 475

  506 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 683


State 476

  507 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 684


State 477

  508 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 685


State 478

  510 expr_mtag: "$c" . '(' expr ')' '(' ')'
  511          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 686


State 479

  509 expr_mtag: "..." .

    $default  reduce using rule 509 (expr_mtag)


State 480

  808 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  809                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  810                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  811                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  838 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  872 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 687
    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 688


State 481

  812 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  813                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  839 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  873 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 689
    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 690


State 482

  862 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  875 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 691
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 692
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 693
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table              go to state 694
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 483

  348 expr_numeric_const: "integer constant" .

    $default  reduce using rule 348 (expr_numeric_const)


State 484

  350 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 350 (expr_numeric_const)


State 485

  349 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 349 (expr_numeric_const)


State 486

  351 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 351 (expr_numeric_const)


State 487

  352 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 352 (expr_numeric_const)


State 488

  353 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 353 (expr_numeric_const)


State 489

  354 expr_numeric_const: "double constant" .

    $default  reduce using rule 354 (expr_numeric_const)


State 490

  247 expr_keyword: "keyword" . expr expression_block
  256 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '<'                               shift, and go to state 695
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 696
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 491

  259 expression_keyword: "type function" . '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    '<'  shift, and go to state 697


State 492

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 698


State 493

  861 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  874 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 692
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 700
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    expr_map_tuple_list     go to state 701
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 494

  218 expression_block: "begin of code block" expressions "end of code block" .
  219                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 702

    $default  reduce using rule 218 (expression_block)


State 495

  223 expression_any: "end of expression" .

    $default  reduce using rule 223 (expression_any)


State 496

  433 expr: '-' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 703
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 497

  432 expr: '+' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 704
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 498

  469 expr: '*' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 705
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 499

  431 expr: '~' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 500

  430 expr: '!' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 707
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 501

  837 make_dim_decl: '[' . expr_list optional_comma ']'
  870 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  871                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 708
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 709
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 710
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 502

  460 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 712
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 503

  332 block_or_lambda: '$' .

    $default  reduce using rule 332 (block_or_lambda)


State 504

  333 block_or_lambda: '@' .
  334                | '@' . '@'
  401 func_addr_expr: '@' . '@' func_addr_name
  404               | '@' . '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  407               | '@' . '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  519 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 713

    $default  reduce using rule 333 (block_or_lambda)


State 505

  424 expr: string_builder .

    $default  reduce using rule 424 (expr)


State 506

  423 expr: expr_reader .

    $default  reduce using rule 423 (expr)


State 507

  241 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 714


State 508

  242 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 715


State 509

   72 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 716
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 510

   74 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 717


State 511

  239 expression_any: expression_if_then_else .

    $default  reduce using rule 239 (expression_any)


State 512

  234 expression_any: expression_for_loop .

    $default  reduce using rule 234 (expression_any)


State 513

  231 expression_any: expression_unsafe .

    $default  reduce using rule 231 (expression_any)


State 514

  230 expression_any: expression_while_loop .

    $default  reduce using rule 230 (expression_any)


State 515

  232 expression_any: expression_with .

    $default  reduce using rule 232 (expression_any)


State 516

  233 expression_any: expression_with_alias .

    $default  reduce using rule 233 (expression_any)


State 517

  264 expr_pipe: expr_call_pipe .

    $default  reduce using rule 264 (expr_pipe)


State 518

  245 expressions: expressions expression_any .

    $default  reduce using rule 245 (expressions)


State 519

  225 expression_any: expr_keyword .

    $default  reduce using rule 225 (expression_any)


State 520

  221 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  503 expr: expression_keyword .

    '$'  shift, and go to state 503
    '@'  shift, and go to state 675

    '$'       [reduce using rule 503 (expr)]
    '@'       [reduce using rule 503 (expr)]
    $default  reduce using rule 503 (expr)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 719


State 521

  224 expression_any: expr_pipe .

    $default  reduce using rule 224 (expression_any)


State 522

  395 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  396                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  415 expr_call: name_in_namespace . '(' ')'
  416          | name_in_namespace . '(' make_struct_single ')'
  417          | name_in_namespace . '(' expr_list ')'
  421 expr: name_in_namespace .
  501     | name_in_namespace . "name"

    "name"  shift, and go to state 720
    '('     shift, and go to state 721

    "name"    [reduce using rule 421 (expr)]
    '('       [reduce using rule 421 (expr)]
    $default  reduce using rule 421 (expr)


State 523

  228 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 722


State 524

  494 expr: expr_new .

    $default  reduce using rule 494 (expr)


State 525

   70 expression_if_one_liner: expression_break .
  235 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 723

    $default  reduce using rule 70 (expression_if_one_liner)


State 526

   71 expression_if_one_liner: expression_continue .
  236 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 724

    $default  reduce using rule 71 (expression_if_one_liner)


State 527

   68 expression_if_one_liner: expression_return_no_pipe .
  285 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 725

    $default  reduce using rule 68 (expression_if_one_liner)


State 528

  237 expression_any: expression_return .

    $default  reduce using rule 237 (expression_any)


State 529

   69 expression_if_one_liner: expression_yield_no_pipe .
  290 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 726

    $default  reduce using rule 69 (expression_if_one_liner)


State 530

  238 expression_any: expression_yield .

    $default  reduce using rule 238 (expression_any)


State 531

  240 expression_any: expression_try_catch .

    $default  reduce using rule 240 (expression_any)


State 532

  307 expression_let: kwd_let . optional_in_scope let_variable_declaration
  308               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 727

    $default  reduce using rule 300 (optional_in_scope)

    optional_in_scope  go to state 728


State 533

  229 expression_any: expression_let .

    $default  reduce using rule 229 (expression_any)


State 534

  493 expr: expr_cast .

    $default  reduce using rule 493 (expr)


State 535

  492 expr: expr_type_decl .

    $default  reduce using rule 492 (expr)


State 536

  491 expr: expr_type_info .

    $default  reduce using rule 491 (expr)


State 537

  345 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    optional_annotation_list  go to state 729


State 538

  497 expr: expr_full_block .

    $default  reduce using rule 497 (expr)


State 539

  422 expr: expr_numeric_const .

    $default  reduce using rule 422 (expr)


State 540

  227 expression_any: expr_assign . "end of expression"
  260 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 730
    "end of expression"  shift, and go to state 731


State 541

  226 expression_any: expr_assign_pipe .

    $default  reduce using rule 226 (expression_any)


State 542

  496 expr: expr_named_call .

    $default  reduce using rule 496 (expr)


State 543

  495 expr: expr_method_call .

    $default  reduce using rule 495 (expr)


State 544

  467 expr: func_addr_expr .

    $default  reduce using rule 467 (expr)


State 545

  428 expr: expr_field .

    $default  reduce using rule 428 (expr)


State 546

  468 expr: expr_call .

    $default  reduce using rule 468 (expr)


State 547

   67 expression_if_one_liner: expr .
  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  355 expr_assign: expr .
  356            | expr . '=' expr
  357            | expr . "<-" expr
  358            | expr . ":=" expr
  359            | expr . "&=" expr
  360            | expr . "|=" expr
  361            | expr . "^=" expr
  362            | expr . "&&=" expr
  363            | expr . "||=" expr
  364            | expr . "^^=" expr
  365            | expr . "+=" expr
  366            | expr . "-=" expr
  367            | expr . "*=" expr
  368            | expr . "/=" expr
  369            | expr . "%=" expr
  370            | expr . "<<=" expr
  371            | expr . ">>=" expr
  372            | expr . "<<<=" expr
  373            | expr . ">>>=" expr
  378 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  379                 | expr . "<-" expr_assign_pipe_right
  380                 | expr . "&=" expr_assign_pipe_right
  381                 | expr . "|=" expr_assign_pipe_right
  382                 | expr . "^=" expr_assign_pipe_right
  383                 | expr . "&&=" expr_assign_pipe_right
  384                 | expr . "||=" expr_assign_pipe_right
  385                 | expr . "^^=" expr_assign_pipe_right
  386                 | expr . "+=" expr_assign_pipe_right
  387                 | expr . "-=" expr_assign_pipe_right
  388                 | expr . "*=" expr_assign_pipe_right
  389                 | expr . "/=" expr_assign_pipe_right
  390                 | expr . "%=" expr_assign_pipe_right
  391                 | expr . "<<=" expr_assign_pipe_right
  392                 | expr . ">>=" expr_assign_pipe_right
  393                 | expr . "<<<=" expr_assign_pipe_right
  394                 | expr . ">>>=" expr_assign_pipe_right
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 732
    "as"    shift, and go to state 733
    "+="    shift, and go to state 734
    "-="    shift, and go to state 735
    "/="    shift, and go to state 736
    "*="    shift, and go to state 737
    "%="    shift, and go to state 738
    "&="    shift, and go to state 739
    "|="    shift, and go to state 740
    "^="    shift, and go to state 741
    "<<"    shift, and go to state 742
    ">>"    shift, and go to state 743
    "++"    shift, and go to state 744
    "--"    shift, and go to state 745
    "<="    shift, and go to state 746
    "<<="   shift, and go to state 747
    ">>="   shift, and go to state 748
    ">="    shift, and go to state 749
    "=="    shift, and go to state 750
    "!="    shift, and go to state 751
    "->"    shift, and go to state 752
    "<-"    shift, and go to state 753
    "??"    shift, and go to state 754
    "?."    shift, and go to state 755
    "?["    shift, and go to state 756
    "<|"    shift, and go to state 757
    "|>"    shift, and go to state 758
    ":="    shift, and go to state 759
    "<<<"   shift, and go to state 760
    ">>>"   shift, and go to state 761
    "<<<="  shift, and go to state 762
    ">>>="  shift, and go to state 763
    "&&"    shift, and go to state 764
    "||"    shift, and go to state 765
    "^^"    shift, and go to state 766
    "&&="   shift, and go to state 767
    "||="   shift, and go to state 768
    "^^="   shift, and go to state 769
    ".."    shift, and go to state 770
    '='     shift, and go to state 771
    '?'     shift, and go to state 772
    '|'     shift, and go to state 773
    '^'     shift, and go to state 774
    '&'     shift, and go to state 775
    '<'     shift, and go to state 776
    '>'     shift, and go to state 777
    '-'     shift, and go to state 778
    '+'     shift, and go to state 779
    '*'     shift, and go to state 780
    '/'     shift, and go to state 781
    '%'     shift, and go to state 782
    '.'     shift, and go to state 783
    '['     shift, and go to state 784
    '$'     shift, and go to state 503
    '@'     shift, and go to state 675

    "if"      reduce using rule 67 (expression_if_one_liner)
    $default  reduce using rule 355 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 548

  429 expr: expr_mtag .

    $default  reduce using rule 429 (expr)


State 549

  418 expr_call: basic_type_declaration . '(' ')'
  419          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 786


State 550

  425 expr: make_decl .

    $default  reduce using rule 425 (expr)


State 551

  771 make_decl: make_struct_decl .

    $default  reduce using rule 771 (make_decl)


State 552

  775 make_decl: make_tuple_call .

    $default  reduce using rule 775 (make_decl)


State 553

  772 make_decl: make_dim_decl .

    $default  reduce using rule 772 (make_decl)


State 554

  773 make_decl: make_table_decl .

    $default  reduce using rule 773 (make_decl)


State 555

  774 make_decl: array_comprehension .

    $default  reduce using rule 774 (make_decl)


State 556

  595 enum_list: enum_list "name" . "end of expression"
  596          | enum_list "name" . '=' expr "end of expression"

    "end of expression"  shift, and go to state 787
    '='                  shift, and go to state 788


State 557

  594 enum_list: enum_list "end of expression" .

    $default  reduce using rule 594 (enum_list)


State 558

  613 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 . "end of code block"

    "end of code block"  shift, and go to state 789


State 559

  616 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 . enum_list $@44 "end of code block"

    $default  reduce using rule 593 (enum_list)

    enum_list  go to state 790


State 560

  618 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 618 (optional_structure_parent)


State 561

  536 struct_variable_declaration_list: struct_variable_declaration_list . $@34 structure_variable_declaration "end of expression"
  538                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  540                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  541                                 | struct_variable_declaration_list . '[' annotation_list ']' "end of expression"
  628 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 791
    '['                  shift, and go to state 792

    "def"     reduce using rule 119 (optional_annotation_list)
    $default  reduce using rule 535 ($@34)

    optional_annotation_list  go to state 793
    $@34                      go to state 794


State 562

  584 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 584 (global_variable_declaration_list)


State 563

  521 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 521 (optional_field_annotation)


State 564

  502 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 661


State 565

  472 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  473     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 795


State 566

  256 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    '<'  shift, and go to state 695


State 567

  503 expr: expression_keyword .

    $default  reduce using rule 503 (expr)


State 568

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  573 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 796


State 569

  574 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 574 (let_variable_name_with_pos_list)


State 570

  575 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  576                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 797

    $default  reduce using rule 575 (let_variable_name_with_pos_list)


State 571

  577 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  578                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  579                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 406
    "implicit"           shift, and go to state 407
    "explicit"           shift, and go to state 408
    "=="                 shift, and go to state 409
    "<-"                 shift, and go to state 572
    "??"                 shift, and go to state 410
    ":="                 shift, and go to state 573
    "end of expression"  shift, and go to state 798
    '='                  shift, and go to state 574
    '?'                  shift, and go to state 411
    '&'                  shift, and go to state 412
    '-'                  shift, and go to state 413
    '['                  shift, and go to state 414
    '#'                  shift, and go to state 415

    copy_or_move_or_clone  go to state 799
    dim_list               go to state 416


State 572

  568 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 568 (copy_or_move_or_clone)


State 573

  569 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 569 (copy_or_move_or_clone)


State 574

  567 copy_or_move_or_clone: '=' .

    $default  reduce using rule 567 (copy_or_move_or_clone)


State 575

  580 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  581                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 800
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 643
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 801
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 576

  696 type_declaration_no_options: "type" '<' $@49 . type_declaration '>' $@50

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 802


State 577

  719 type_declaration_no_options: "array" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 803


State 578

  722 type_declaration_no_options: "table" '<' $@56 . table_type_pair '>' $@57

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    table_type_pair              go to state 804
    type_declaration_no_options  go to state 356
    type_declaration             go to state 805


State 579

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  697 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 806


State 580

  725 type_declaration_no_options: "iterator" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 807


State 581

  715 type_declaration_no_options: "smart_ptr" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 808


State 582

  674 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 809


State 583

  683 bitfield_type_declaration: "bitfield" '<' $@47 . bitfield_bits '>' $@48

    "name"  shift, and go to state 810

    bitfield_bits  go to state 811


State 584

  729 type_declaration_no_options: "block" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 812


State 585

  732 type_declaration_no_options: "block" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 813


State 586

  736 type_declaration_no_options: "function" '<' $@64 . type_declaration '>' $@65

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 814


State 587

  739 type_declaration_no_options: "function" '<' $@66 . optional_function_argument_list optional_function_type '>' $@67

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 815


State 588

  743 type_declaration_no_options: "lambda" '<' $@68 . type_declaration '>' $@69

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 816


State 589

  746 type_declaration_no_options: "lambda" '<' $@70 . optional_function_argument_list optional_function_type '>' $@71

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 817


State 590

  749 type_declaration_no_options: "tuple" '<' $@72 . tuple_type_list '>' $@73

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 609
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    tuple_type                   go to state 818
    tuple_type_list              go to state 819
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 612


State 591

  752 type_declaration_no_options: "variant" '<' $@74 . variant_type_list '>' $@75

    "name"  shift, and go to state 614

    variant_type       go to state 820
    variant_type_list  go to state 821


State 592

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  675 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 822


State 593

  700 type_declaration_no_options: '$' name_in_namespace '<' . $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 699 ($@51)

    $@51  go to state 823


State 594

  698 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 248 (optional_expr_list)

    string_builder          go to state 505
    expr_reader             go to state 506
    optional_expr_list      go to state 824
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 825
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 595

  710 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 710 (type_declaration_no_options)


State 596

  711 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 711 (type_declaration_no_options)


State 597

  704 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 704 (type_declaration_no_options)


State 598

  706 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 706 (type_declaration_no_options)


State 599

  701 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 826


State 600

  709 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 709 (type_declaration_no_options)


State 601

  693 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 693 (type_declaration_no_options)


State 602

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  686 dim_list: '[' expr . ']'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ']'    shift, and go to state 827


State 603

  687 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 828
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 604

  755 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 755 (type_declaration)


State 605

  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"
  754 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    $default  reduce using rule 754 (type_declaration)

    dim_list  go to state 416


State 606

  680 bitfield_alias_bits: bitfield_alias_bits "name" . "end of expression"

    "end of expression"  shift, and go to state 829


State 607

  679 bitfield_alias_bits: bitfield_alias_bits "end of expression" .

    $default  reduce using rule 679 (bitfield_alias_bits)


State 608

  770 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 . "end of code block"

    "end of code block"  shift, and go to state 830


State 609

  265 name_in_namespace: "name" .
  266                  | "name" . "::" "name"
  547 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 98
    ':'   shift, and go to state 831

    $default  reduce using rule 265 (name_in_namespace)


State 610

  551 tuple_alias_type_list: tuple_alias_type_list "end of expression" .

    $default  reduce using rule 551 (tuple_alias_type_list)


State 611

  552 tuple_alias_type_list: tuple_alias_type_list tuple_type . "end of expression"

    "end of expression"  shift, and go to state 832


State 612

  546 tuple_type: type_declaration .
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 546 (tuple_type)


State 613

  760 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 . "end of code block"

    "end of code block"  shift, and go to state 833


State 614

  553 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 834


State 615

  557 variant_alias_type_list: variant_alias_type_list "end of expression" .

    $default  reduce using rule 557 (variant_alias_type_list)


State 616

  558 variant_alias_type_list: variant_alias_type_list variant_type . "end of expression"

    "end of expression"  shift, and go to state 835


State 617

  765 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 . "end of code block"

    "end of code block"  shift, and go to state 836


State 618

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  543 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 837


State 619

  633 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 838


State 620

  632 variable_name_with_pos_list: "name" .
  634                            | "name" . "aka" "name"

    "aka"  shift, and go to state 839

    $default  reduce using rule 632 (variable_name_with_pos_list)


State 621

  542 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 542 (function_argument_declaration)


State 622

  561 variable_declaration: variable_name_with_pos_list .
  562                     | variable_name_with_pos_list . '&'
  563                     | variable_name_with_pos_list . ':' type_declaration
  564                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  565                     | variable_name_with_pos_list . copy_or_move expr
  566                     | variable_name_with_pos_list . copy_or_move expr_pipe
  635 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  636                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 840
    ','   shift, and go to state 841
    '='   shift, and go to state 842
    ':'   shift, and go to state 843
    '&'   shift, and go to state 844

    $default  reduce using rule 561 (variable_declaration)

    copy_or_move  go to state 845


State 623

  545 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 545 (function_argument_list)


State 624

  816 make_struct_decl: "struct" '<' . $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 814 ($@88)

    $@88  go to state 846


State 625

  819 make_struct_decl: "class" '<' . $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 817 ($@90)

    $@90  go to state 847


State 626

   78 expression_while_loop: "while" expr . expression_block
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 732
    "as"                   shift, and go to state 733
    "<<"                   shift, and go to state 742
    ">>"                   shift, and go to state 743
    "++"                   shift, and go to state 744
    "--"                   shift, and go to state 745
    "<="                   shift, and go to state 746
    ">="                   shift, and go to state 749
    "=="                   shift, and go to state 750
    "!="                   shift, and go to state 751
    "->"                   shift, and go to state 752
    "??"                   shift, and go to state 754
    "?."                   shift, and go to state 755
    "?["                   shift, and go to state 756
    "<|"                   shift, and go to state 757
    "|>"                   shift, and go to state 758
    "<<<"                  shift, and go to state 760
    ">>>"                  shift, and go to state 761
    "&&"                   shift, and go to state 764
    "||"                   shift, and go to state 765
    "^^"                   shift, and go to state 766
    ".."                   shift, and go to state 770
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 772
    '|'                    shift, and go to state 773
    '^'                    shift, and go to state 774
    '&'                    shift, and go to state 775
    '<'                    shift, and go to state 776
    '>'                    shift, and go to state 777
    '-'                    shift, and go to state 778
    '+'                    shift, and go to state 779
    '*'                    shift, and go to state 780
    '/'                    shift, and go to state 781
    '%'                    shift, and go to state 782
    '.'                    shift, and go to state 783
    '['                    shift, and go to state 784

    expression_block  go to state 848


State 627

   76 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_name_with_pos_list  go to state 849


State 628

  272 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 270 ($@11)

    $@11  go to state 850


State 629

  274 expr_new: "new" new_type_declaration .
  275         | "new" new_type_declaration . '(' use_initializer ')'
  276         | "new" new_type_declaration . '(' expr_list ')'
  277         | "new" new_type_declaration . '(' make_struct_single ')'
  278         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 851

    '('       [reduce using rule 274 (expr_new)]
    $default  reduce using rule 274 (expr_new)


State 630

  273 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 273 (new_type_declaration)


State 631

  279 expr_new: "new" make_decl .

    $default  reduce using rule 279 (expr_new)


State 632

  321 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  322               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  323               | "typeinfo" '(' . name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 852


State 633

  324 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  325               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  326               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 853
    '('  shift, and go to state 854


State 634

  320 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 318 ($@19)

    $@19  go to state 855


State 635

  842 make_dim_decl: "array" "struct" . '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 856


State 636

  845 make_dim_decl: "array" "tuple" . '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 857


State 637

  848 make_dim_decl: "array" "variant" . '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    '<'  shift, and go to state 858


State 638

  852 make_dim_decl: "array" '<' . $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    $default  reduce using rule 850 ($@104)

    $@104  go to state 859


State 639

  849 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 860
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 640

  284 expression_return_no_pipe: "return" "<-" . expr_list
  287 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 861
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 862
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 643
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 644
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 641

  286 expression_return: "return" expr_pipe .

    $default  reduce using rule 286 (expression_return)


State 642

  283 expression_return_no_pipe: "return" expr_list .
  328 expr_list: expr_list . ',' expr

    ','  shift, and go to state 863

    $default  reduce using rule 283 (expression_return_no_pipe)


State 643

  260 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 730


State 644

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  327 expr_list: expr .
  355 expr_assign: expr .
  356            | expr . '=' expr
  357            | expr . "<-" expr
  358            | expr . ":=" expr
  359            | expr . "&=" expr
  360            | expr . "|=" expr
  361            | expr . "^=" expr
  362            | expr . "&&=" expr
  363            | expr . "||=" expr
  364            | expr . "^^=" expr
  365            | expr . "+=" expr
  366            | expr . "-=" expr
  367            | expr . "*=" expr
  368            | expr . "/=" expr
  369            | expr . "%=" expr
  370            | expr . "<<=" expr
  371            | expr . ">>=" expr
  372            | expr . "<<<=" expr
  373            | expr . ">>>=" expr
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 732
    "as"    shift, and go to state 733
    "+="    shift, and go to state 864
    "-="    shift, and go to state 865
    "/="    shift, and go to state 866
    "*="    shift, and go to state 867
    "%="    shift, and go to state 868
    "&="    shift, and go to state 869
    "|="    shift, and go to state 870
    "^="    shift, and go to state 871
    "<<"    shift, and go to state 742
    ">>"    shift, and go to state 743
    "++"    shift, and go to state 744
    "--"    shift, and go to state 745
    "<="    shift, and go to state 746
    "<<="   shift, and go to state 872
    ">>="   shift, and go to state 873
    ">="    shift, and go to state 749
    "=="    shift, and go to state 750
    "!="    shift, and go to state 751
    "->"    shift, and go to state 752
    "<-"    shift, and go to state 874
    "??"    shift, and go to state 754
    "?."    shift, and go to state 755
    "?["    shift, and go to state 756
    "<|"    shift, and go to state 757
    "|>"    shift, and go to state 758
    ":="    shift, and go to state 759
    "<<<"   shift, and go to state 760
    ">>>"   shift, and go to state 761
    "<<<="  shift, and go to state 875
    ">>>="  shift, and go to state 876
    "&&"    shift, and go to state 764
    "||"    shift, and go to state 765
    "^^"    shift, and go to state 766
    "&&="   shift, and go to state 877
    "||="   shift, and go to state 878
    "^^="   shift, and go to state 879
    ".."    shift, and go to state 770
    '='     shift, and go to state 880
    '?'     shift, and go to state 772
    '|'     shift, and go to state 773
    '^'     shift, and go to state 774
    '&'     shift, and go to state 775
    '<'     shift, and go to state 776
    '>'     shift, and go to state 777
    '-'     shift, and go to state 778
    '+'     shift, and go to state 779
    '*'     shift, and go to state 780
    '/'     shift, and go to state 781
    '%'     shift, and go to state 782
    '.'     shift, and go to state 783
    '['     shift, and go to state 784
    '$'     shift, and go to state 503
    '@'     shift, and go to state 675

    " <|"     reduce using rule 355 (expr_assign)
    $default  reduce using rule 327 (expr_list)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 645

  293 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 881


State 646

  864 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  865                | "table" '<' . type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 882


State 647

  863 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 692
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 700
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    expr_map_tuple_list     go to state 883
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 648

  269 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 884
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 649

  268 expression_delete: "delete" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 268 (expression_delete)


State 650

  470 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 885
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 651

   79 expression_with: "with" expr . expression_block
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 732
    "as"                   shift, and go to state 733
    "<<"                   shift, and go to state 742
    ">>"                   shift, and go to state 743
    "++"                   shift, and go to state 744
    "--"                   shift, and go to state 745
    "<="                   shift, and go to state 746
    ">="                   shift, and go to state 749
    "=="                   shift, and go to state 750
    "!="                   shift, and go to state 751
    "->"                   shift, and go to state 752
    "??"                   shift, and go to state 754
    "?."                   shift, and go to state 755
    "?["                   shift, and go to state 756
    "<|"                   shift, and go to state 757
    "|>"                   shift, and go to state 758
    "<<<"                  shift, and go to state 760
    ">>>"                  shift, and go to state 761
    "&&"                   shift, and go to state 764
    "||"                   shift, and go to state 765
    "^^"                   shift, and go to state 766
    ".."                   shift, and go to state 770
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 772
    '|'                    shift, and go to state 773
    '^'                    shift, and go to state 774
    '&'                    shift, and go to state 775
    '<'                    shift, and go to state 776
    '>'                    shift, and go to state 777
    '-'                    shift, and go to state 778
    '+'                    shift, and go to state 779
    '*'                    shift, and go to state 780
    '/'                    shift, and go to state 781
    '%'                    shift, and go to state 782
    '.'                    shift, and go to state 783
    '['                    shift, and go to state 784

    expression_block  go to state 886


State 652

   81 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 887


State 653

  311 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 309 ($@13)

    $@13  go to state 888


State 654

  314 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 312 ($@15)

    $@15  go to state 889


State 655

  471 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 890
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 656

  243 expression_any: "pass" "end of expression" .

    $default  reduce using rule 243 (expression_any)


State 657

  317 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 315 ($@17)

    $@17  go to state 891


State 658

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 892


State 659

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 893


State 660

   56 expression_goto: "goto" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 56 (expression_goto)


State 661

  502 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 894
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 662

   77 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 77 (expression_unsafe)


State 663

  856 make_dim_decl: "fixed_array" '<' . $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 854 ($@106)

    $@106  go to state 895


State 664

  853 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 896
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 665

  825 make_struct_decl: "default" '<' . $@94 type_declaration_no_options '>' $@95 use_initializer

    $default  reduce using rule 823 ($@94)

    $@94  go to state 897


State 666

  834 make_tuple_call: "tuple" '<' . $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 832 ($@96)

    $@96  go to state 898


State 667

  831 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 899
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 668

  822 make_struct_decl: "variant" '<' . $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    $default  reduce using rule 820 ($@92)

    $@92  go to state 900


State 669

  222 expr_call_pipe: "generator" '<' . type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  472 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  473     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 901


State 670

  289 expression_yield_no_pipe: "yield" "<-" . expr
  292 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 902
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 643
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 903
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 671

  291 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 291 (expression_yield)


State 672

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  288 expression_yield_no_pipe: "yield" expr .
  355 expr_assign: expr .
  356            | expr . '=' expr
  357            | expr . "<-" expr
  358            | expr . ":=" expr
  359            | expr . "&=" expr
  360            | expr . "|=" expr
  361            | expr . "^=" expr
  362            | expr . "&&=" expr
  363            | expr . "||=" expr
  364            | expr . "^^=" expr
  365            | expr . "+=" expr
  366            | expr . "-=" expr
  367            | expr . "*=" expr
  368            | expr . "/=" expr
  369            | expr . "%=" expr
  370            | expr . "<<=" expr
  371            | expr . ">>=" expr
  372            | expr . "<<<=" expr
  373            | expr . ">>>=" expr
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 732
    "as"    shift, and go to state 733
    "+="    shift, and go to state 864
    "-="    shift, and go to state 865
    "/="    shift, and go to state 866
    "*="    shift, and go to state 867
    "%="    shift, and go to state 868
    "&="    shift, and go to state 869
    "|="    shift, and go to state 870
    "^="    shift, and go to state 871
    "<<"    shift, and go to state 742
    ">>"    shift, and go to state 743
    "++"    shift, and go to state 744
    "--"    shift, and go to state 745
    "<="    shift, and go to state 746
    "<<="   shift, and go to state 872
    ">>="   shift, and go to state 873
    ">="    shift, and go to state 749
    "=="    shift, and go to state 750
    "!="    shift, and go to state 751
    "->"    shift, and go to state 752
    "<-"    shift, and go to state 874
    "??"    shift, and go to state 754
    "?."    shift, and go to state 755
    "?["    shift, and go to state 756
    "<|"    shift, and go to state 757
    "|>"    shift, and go to state 758
    ":="    shift, and go to state 759
    "<<<"   shift, and go to state 760
    ">>>"   shift, and go to state 761
    "<<<="  shift, and go to state 875
    ">>>="  shift, and go to state 876
    "&&"    shift, and go to state 764
    "||"    shift, and go to state 765
    "^^"    shift, and go to state 766
    "&&="   shift, and go to state 877
    "||="   shift, and go to state 878
    "^^="   shift, and go to state 879
    ".."    shift, and go to state 770
    '='     shift, and go to state 880
    '?'     shift, and go to state 772
    '|'     shift, and go to state 773
    '^'     shift, and go to state 774
    '&'     shift, and go to state 775
    '<'     shift, and go to state 776
    '>'     shift, and go to state 777
    '-'     shift, and go to state 778
    '+'     shift, and go to state 779
    '*'     shift, and go to state 780
    '/'     shift, and go to state 781
    '%'     shift, and go to state 782
    '.'     shift, and go to state 783
    '['     shift, and go to state 784
    '$'     shift, and go to state 503
    '@'     shift, and go to state 675

    " <|"     reduce using rule 355 (expr_assign)
    $default  reduce using rule 288 (expression_yield_no_pipe)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 673

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  456     | "++" expr .
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 456 (expr)


State 674

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  457     | "--" expr .
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 457 (expr)


State 675

  333 block_or_lambda: '@' .
  334                | '@' . '@'

    '@'  shift, and go to state 904

    $default  reduce using rule 333 (block_or_lambda)


State 676

  343 expr_block: expression_block .

    $default  reduce using rule 343 (expr_block)


State 677

  344 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    optional_annotation_list  go to state 905


State 678

  263 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 263 (expr_pipe)


State 679

  261 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 261 (expr_pipe)


State 680

  262 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 262 (expr_pipe)


State 681

  504 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 906
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 682

  505 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 907
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 683

  506 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 908
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 684

  507 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 909
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 685

  508 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 910
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 686

  510 expr_mtag: "$c" '(' . expr ')' '(' ')'
  511          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 911
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 687

  872 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_name_with_pos_list  go to state 912


State 688

  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"
  808 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  809                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  810                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  811                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  838 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "const"                           shift, and go to state 406
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "where"                           shift, and go to state 913
    "reinterpret"                     shift, and go to state 457
    "implicit"                        shift, and go to state 407
    "explicit"                        shift, and go to state 408
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "=="                              shift, and go to state 409
    "??"                              shift, and go to state 410
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 914
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 915
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '?'                               shift, and go to state 411
    '&'                               shift, and go to state 412
    '-'                               shift, and go to state 916
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 917
    '('                               shift, and go to state 918
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504
    '#'                               shift, and go to state 415

    $default  reduce using rule 792 (optional_block)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 919
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    dim_list                go to state 416
    make_decl               go to state 550
    make_struct_fields      go to state 920
    make_struct_dim         go to state 921
    optional_block          go to state 922
    make_struct_decl        go to state 551
    make_tuple              go to state 923
    make_tuple_call         go to state 552
    make_dim                go to state 924
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 689

  873 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_name_with_pos_list  go to state 925


State 690

  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"
  812 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  813                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  839 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "const"                           shift, and go to state 406
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "implicit"                        shift, and go to state 407
    "explicit"                        shift, and go to state 408
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "=="                              shift, and go to state 409
    "??"                              shift, and go to state 410
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 914
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 915
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '?'                               shift, and go to state 411
    '&'                               shift, and go to state 412
    '-'                               shift, and go to state 916
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 917
    '('                               shift, and go to state 926
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504
    '#'                               shift, and go to state 415

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 919
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    dim_list                go to state 416
    make_decl               go to state 550
    make_struct_fields      go to state 920
    make_struct_dim         go to state 927
    make_struct_decl        go to state 551
    make_tuple              go to state 923
    make_tuple_call         go to state 552
    make_dim                go to state 928
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 691

  875 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_name_with_pos_list  go to state 929


State 692

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  829 make_map_tuple: expr . "=>" expr
  830               | expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "=>"   shift, and go to state 930
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 830 (make_map_tuple)


State 693

  857 make_table: make_map_tuple .

    $default  reduce using rule 857 (make_table)


State 694

  858 make_table: make_table . "end of expression" make_map_tuple
  862 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 931
    "end of expression"  shift, and go to state 932
    ";}}"                shift, and go to state 933

    optional_trailing_semicolon_cur_cur  go to state 934


State 695

  256 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options_list '>' $@8 expr

    $default  reduce using rule 254 ($@7)

    $@7  go to state 935


State 696

  247 expr_keyword: "keyword" expr . expression_block
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 732
    "as"                   shift, and go to state 733
    "<<"                   shift, and go to state 742
    ">>"                   shift, and go to state 743
    "++"                   shift, and go to state 744
    "--"                   shift, and go to state 745
    "<="                   shift, and go to state 746
    ">="                   shift, and go to state 749
    "=="                   shift, and go to state 750
    "!="                   shift, and go to state 751
    "->"                   shift, and go to state 752
    "??"                   shift, and go to state 754
    "?."                   shift, and go to state 755
    "?["                   shift, and go to state 756
    "<|"                   shift, and go to state 757
    "|>"                   shift, and go to state 758
    "<<<"                  shift, and go to state 760
    ">>>"                  shift, and go to state 761
    "&&"                   shift, and go to state 764
    "||"                   shift, and go to state 765
    "^^"                   shift, and go to state 766
    ".."                   shift, and go to state 770
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 772
    '|'                    shift, and go to state 773
    '^'                    shift, and go to state 774
    '&'                    shift, and go to state 775
    '<'                    shift, and go to state 776
    '>'                    shift, and go to state 777
    '-'                    shift, and go to state 778
    '+'                    shift, and go to state 779
    '*'                    shift, and go to state 780
    '/'                    shift, and go to state 781
    '%'                    shift, and go to state 782
    '.'                    shift, and go to state 783
    '['                    shift, and go to state 784

    expression_block  go to state 936


State 697

  259 expression_keyword: "type function" '<' . $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    $default  reduce using rule 257 ($@9)

    $@9  go to state 937


State 698

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 938
    "{"                   shift, and go to state 939

    character_sequence  go to state 940


State 699

  874 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_name_with_pos_list  go to state 941


State 700

  859 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 859 (expr_map_tuple_list)


State 701

  860 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  861 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 942

    $default  reduce using rule 868 (optional_comma)

    optional_comma  go to state 943


State 702

  219 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 944


State 703

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  433 expr: '-' expr .
  434     | expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 433 (expr)


State 704

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  432 expr: '+' expr .
  434     | expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 432 (expr)


State 705

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  469     | '*' expr .
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 469 (expr)


State 706

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  431 expr: '~' expr .
  434     | expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 431 (expr)


State 707

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  430 expr: '!' expr .
  434     | expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 430 (expr)


State 708

  870 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_name_with_pos_list  go to state 945


State 709

  871 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 946


State 710

  328 expr_list: expr_list . ',' expr
  837 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 947

    $default  reduce using rule 868 (optional_comma)

    optional_comma  go to state 948


State 711

  327 expr_list: expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 327 (expr_list)


State 712

  328 expr_list: expr_list . ',' expr
  460 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 947

    $default  reduce using rule 868 (optional_comma)

    optional_comma  go to state 949


State 713

  334 block_or_lambda: '@' '@' .
  401 func_addr_expr: '@' '@' . func_addr_name
  404               | '@' '@' . '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  407               | '@' '@' . '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  519 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 950
    "$c"    shift, and go to state 951
    "name"  shift, and go to state 59
    '<'     shift, and go to state 952

    $default  reduce using rule 334 (block_or_lambda)

    name_in_namespace  go to state 953
    func_addr_name     go to state 954


State 714

  241 expression_any: expression_label "end of expression" .

    $default  reduce using rule 241 (expression_any)


State 715

  242 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 242 (expression_any)


State 716

   72 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 732
    "as"                   shift, and go to state 733
    "<<"                   shift, and go to state 742
    ">>"                   shift, and go to state 743
    "++"                   shift, and go to state 744
    "--"                   shift, and go to state 745
    "<="                   shift, and go to state 746
    ">="                   shift, and go to state 749
    "=="                   shift, and go to state 750
    "!="                   shift, and go to state 751
    "->"                   shift, and go to state 752
    "??"                   shift, and go to state 754
    "?."                   shift, and go to state 755
    "?["                   shift, and go to state 756
    "<|"                   shift, and go to state 757
    "|>"                   shift, and go to state 758
    "<<<"                  shift, and go to state 760
    ">>>"                  shift, and go to state 761
    "&&"                   shift, and go to state 764
    "||"                   shift, and go to state 765
    "^^"                   shift, and go to state 766
    ".."                   shift, and go to state 770
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 772
    '|'                    shift, and go to state 773
    '^'                    shift, and go to state 774
    '&'                    shift, and go to state 775
    '<'                    shift, and go to state 776
    '>'                    shift, and go to state 777
    '-'                    shift, and go to state 778
    '+'                    shift, and go to state 779
    '*'                    shift, and go to state 780
    '/'                    shift, and go to state 781
    '%'                    shift, and go to state 782
    '.'                    shift, and go to state 783
    '['                    shift, and go to state 784

    expression_block  go to state 955


State 717

   74 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner "end of expression"

    $default  reduce using rule 73 ($@3)

    $@3  go to state 956


State 718

  347 expr_full_block_assumed_piped: block_or_lambda . $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 346 ($@21)

    $@21  go to state 957


State 719

  221 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 221 (expr_call_pipe)


State 720

  501 expr: name_in_namespace "name" .

    $default  reduce using rule 501 (expr)


State 721

  395 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  396                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  415 expr_call: name_in_namespace '(' . ')'
  416          | name_in_namespace '(' . make_struct_single ')'
  417          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 914
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 915
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 958
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 959
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 960
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_fields      go to state 961
    make_struct_single      go to state 962
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 722

  228 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 228 (expression_any)


State 723

  235 expression_any: expression_break "end of expression" .

    $default  reduce using rule 235 (expression_any)


State 724

  236 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 236 (expression_any)


State 725

  285 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 285 (expression_return)


State 726

  290 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 290 (expression_yield)


State 727

  299 optional_in_scope: "inscope" .

    $default  reduce using rule 299 (optional_in_scope)


State 728

  307 expression_let: kwd_let optional_in_scope . let_variable_declaration
  308               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 305
    "[["    shift, and go to state 963
    "name"  shift, and go to state 306
    '('     shift, and go to state 964

    tuple_expansion_variable_declaration  go to state 965
    let_variable_name_with_pos_list       go to state 307
    let_variable_declaration              go to state 966


State 729

  345 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 967

    $default  reduce using rule 341 (optional_capture_list)

    optional_capture_list  go to state 968


State 730

  260 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 675

    expression_block  go to state 676
    block_or_lambda   go to state 677
    expr_block        go to state 969


State 731

  227 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 227 (expression_any)


State 732

  478 expr: expr "is" . "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr "is" . basic_type_declaration
  480     | expr "is" . "name"
  518 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 970
    "bool"      shift, and go to state 316
    "void"      shift, and go to state 317
    "string"    shift, and go to state 318
    "int"       shift, and go to state 320
    "int2"      shift, and go to state 321
    "int3"      shift, and go to state 322
    "int4"      shift, and go to state 323
    "uint"      shift, and go to state 324
    "bitfield"  shift, and go to state 463
    "uint2"     shift, and go to state 326
    "uint3"     shift, and go to state 327
    "uint4"     shift, and go to state 328
    "float"     shift, and go to state 329
    "float2"    shift, and go to state 330
    "float3"    shift, and go to state 331
    "float4"    shift, and go to state 332
    "range"     shift, and go to state 333
    "urange"    shift, and go to state 334
    "range64"   shift, and go to state 335
    "urange64"  shift, and go to state 336
    "int64"     shift, and go to state 338
    "uint64"    shift, and go to state 339
    "double"    shift, and go to state 340
    "int8"      shift, and go to state 343
    "uint8"     shift, and go to state 344
    "int16"     shift, and go to state 345
    "uint16"    shift, and go to state 346
    "$f"        shift, and go to state 971
    "name"      shift, and go to state 972

    basic_type_declaration  go to state 973


State 733

  481 expr: expr "as" . "name"
  484     | expr "as" . "type" '<' $@30 type_declaration '>' $@31
  485     | expr "as" . basic_type_declaration
  516 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 974
    "bool"      shift, and go to state 316
    "void"      shift, and go to state 317
    "string"    shift, and go to state 318
    "int"       shift, and go to state 320
    "int2"      shift, and go to state 321
    "int3"      shift, and go to state 322
    "int4"      shift, and go to state 323
    "uint"      shift, and go to state 324
    "bitfield"  shift, and go to state 463
    "uint2"     shift, and go to state 326
    "uint3"     shift, and go to state 327
    "uint4"     shift, and go to state 328
    "float"     shift, and go to state 329
    "float2"    shift, and go to state 330
    "float3"    shift, and go to state 331
    "float4"    shift, and go to state 332
    "range"     shift, and go to state 333
    "urange"    shift, and go to state 334
    "range64"   shift, and go to state 335
    "urange64"  shift, and go to state 336
    "int64"     shift, and go to state 338
    "uint64"    shift, and go to state 339
    "double"    shift, and go to state 340
    "int8"      shift, and go to state 343
    "uint8"     shift, and go to state 344
    "int16"     shift, and go to state 345
    "uint16"    shift, and go to state 346
    "$f"        shift, and go to state 975
    "name"      shift, and go to state 976

    basic_type_declaration  go to state 977


State 734

  365 expr_assign: expr "+=" . expr
  386 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 978
    "@ <|"                            shift, and go to state 979
    "@@ <|"                           shift, and go to state 980
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 981
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 982
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 983
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 735

  366 expr_assign: expr "-=" . expr
  387 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 978
    "@ <|"                            shift, and go to state 979
    "@@ <|"                           shift, and go to state 980
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 981
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 984
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 985
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 736

  368 expr_assign: expr "/=" . expr
  389 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 978
    "@ <|"                            shift, and go to state 979
    "@@ <|"                           shift, and go to state 980
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 981
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 986
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 987
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 737

  367 expr_assign: expr "*=" . expr
  388 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 978
    "@ <|"                            shift, and go to state 979
    "@@ <|"                           shift, and go to state 980
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 981
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 988
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 989
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 738

  369 expr_assign: expr "%=" . expr
  390 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 978
    "@ <|"                            shift, and go to state 979
    "@@ <|"                           shift, and go to state 980
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 981
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 990
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 991
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 739

  359 expr_assign: expr "&=" . expr
  380 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 978
    "@ <|"                            shift, and go to state 979
    "@@ <|"                           shift, and go to state 980
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 981
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 992
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 993
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 740

  360 expr_assign: expr "|=" . expr
  381 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 978
    "@ <|"                            shift, and go to state 979
    "@@ <|"                           shift, and go to state 980
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 981
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 994
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 995
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 741

  361 expr_assign: expr "^=" . expr
  382 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 978
    "@ <|"                            shift, and go to state 979
    "@@ <|"                           shift, and go to state 980
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 981
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 996
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 997
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 742

  434 expr: expr "<<" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 998
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 743

  435 expr: expr ">>" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 999
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 744

  458 expr: expr "++" .

    $default  reduce using rule 458 (expr)


State 745

  459 expr: expr "--" .

    $default  reduce using rule 459 (expr)


State 746

  447 expr: expr "<=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1000
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 747

  370 expr_assign: expr "<<=" . expr
  391 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 978
    "@ <|"                            shift, and go to state 979
    "@@ <|"                           shift, and go to state 980
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 981
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1001
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1002
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 748

  371 expr_assign: expr ">>=" . expr
  392 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 978
    "@ <|"                            shift, and go to state 979
    "@@ <|"                           shift, and go to state 980
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 981
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1003
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1004
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 749

  448 expr: expr ">=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1005
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 750

  445 expr: expr "==" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1006
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 751

  446 expr: expr "!=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1007
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 752

  397 expr_method_call: expr "->" . "name" '(' ')'
  398                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 1008


State 753

  357 expr_assign: expr "<-" . expr
  379 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 978
    "@ <|"                            shift, and go to state 979
    "@@ <|"                           shift, and go to state 980
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 981
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1009
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1010
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 754

  474 expr: expr "??" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1011
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 755

  465 expr: expr "?." . "name"
  513 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1012
    "name"  shift, and go to state 1013


State 756

  463 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1014
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 757

  498 expr: expr "<|" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1015
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 758

  499 expr: expr "|>" . expr
  500     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1016
    expr_mtag               go to state 548
    basic_type_declaration  go to state 1017
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 759

  358 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1018
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 760

  436 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1019
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 761

  437 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1020
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 762

  372 expr_assign: expr "<<<=" . expr
  393 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 978
    "@ <|"                            shift, and go to state 979
    "@@ <|"                           shift, and go to state 980
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 981
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1021
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1022
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 763

  373 expr_assign: expr ">>>=" . expr
  394 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 978
    "@ <|"                            shift, and go to state 979
    "@@ <|"                           shift, and go to state 980
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 981
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1023
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1024
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 764

  452 expr: expr "&&" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1025
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 765

  453 expr: expr "||" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1026
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 766

  454 expr: expr "^^" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1027
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 767

  362 expr_assign: expr "&&=" . expr
  383 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 978
    "@ <|"                            shift, and go to state 979
    "@@ <|"                           shift, and go to state 980
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 981
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1028
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1029
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 768

  363 expr_assign: expr "||=" . expr
  384 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 978
    "@ <|"                            shift, and go to state 979
    "@@ <|"                           shift, and go to state 980
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 981
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1030
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1031
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 769

  364 expr_assign: expr "^^=" . expr
  385 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 978
    "@ <|"                            shift, and go to state 979
    "@@ <|"                           shift, and go to state 980
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 981
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1032
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1033
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 770

  455 expr: expr ".." . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1034
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 771

  356 expr_assign: expr '=' . expr
  378 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 978
    "@ <|"                            shift, and go to state 979
    "@@ <|"                           shift, and go to state 980
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 981
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1035
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1036
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 772

  475 expr: expr '?' . expr ':' expr
  486     | expr '?' . "as" "name"
  489     | expr '?' . "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr '?' . "as" basic_type_declaration
  517 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "as"                              shift, and go to state 1037
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1038
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 773

  450 expr: expr '|' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1039
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 774

  451 expr: expr '^' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1040
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 775

  449 expr: expr '&' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1041
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 776

  443 expr: expr '<' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1042
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 777

  444 expr: expr '>' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1043
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 778

  439 expr: expr '-' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1044
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 779

  438 expr: expr '+' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1045
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 780

  440 expr: expr '*' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1046
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 781

  441 expr: expr '/' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1047
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 782

  442 expr: expr '%' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1048
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 783

  408 expr_field: expr '.' . "name"
  409           | expr '.' . '.' "name"
  410           | expr '.' . "name" '(' ')'
  411           | expr '.' . "name" '(' expr_list ')'
  414           | expr '.' . $@26 error $@27
  462 expr: expr '.' . '[' expr ']'
  464     | expr '.' . "?[" expr ']'
  466     | expr '.' . "?." "name"
  512 expr_mtag: expr '.' . "$f" '(' expr ')'
  514          | expr '.' . '.' "$f" '(' expr ')'
  515          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 1049
    "?["    shift, and go to state 1050
    "$f"    shift, and go to state 1051
    "name"  shift, and go to state 1052
    '.'     shift, and go to state 1053
    '['     shift, and go to state 1054

    $default  reduce using rule 412 ($@26)

    $@26  go to state 1055


State 784

  461 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1056
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 785

  220 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 220 (expr_call_pipe)


State 786

  418 expr_call: basic_type_declaration '(' . ')'
  419          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1057
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1058
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 787

  595 enum_list: enum_list "name" "end of expression" .

    $default  reduce using rule 595 (enum_list)


State 788

  596 enum_list: enum_list "name" '=' . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1059
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 789

  613 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block" .

    $default  reduce using rule 613 (enum_declaration)


State 790

  594 enum_list: enum_list . "end of expression"
  595          | enum_list . "name" "end of expression"
  596          | enum_list . "name" '=' expr "end of expression"
  616 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list . $@44 "end of code block"

    "name"               shift, and go to state 556
    "end of expression"  shift, and go to state 557

    $default  reduce using rule 615 ($@44)

    $@44  go to state 1060


State 791

  628 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 628 (optional_struct_variable_declaration_list)


State 792

  120 optional_annotation_list: '[' . annotation_list ']'
  541 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' "end of expression"

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 1061
    name_in_namespace             go to state 70


State 793

  538 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  540                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "def"  shift, and go to state 1062


State 794

  536 struct_variable_declaration_list: struct_variable_declaration_list $@34 . structure_variable_declaration "end of expression"

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 520 (optional_field_annotation)

    metadata_argument_list          go to state 220
    optional_field_annotation       go to state 1063
    structure_variable_declaration  go to state 1064


State 795

  472 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  473     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1065


State 796

  573 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 573 (let_variable_name_with_pos_list)


State 797

  576 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1066


State 798

  577 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 577 (let_variable_declaration)


State 799

  578 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  579                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 1067
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 643
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1068
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 800

  581 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 581 (let_variable_declaration)


State 801

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  355 expr_assign: expr .
  356            | expr . '=' expr
  357            | expr . "<-" expr
  358            | expr . ":=" expr
  359            | expr . "&=" expr
  360            | expr . "|=" expr
  361            | expr . "^=" expr
  362            | expr . "&&=" expr
  363            | expr . "||=" expr
  364            | expr . "^^=" expr
  365            | expr . "+=" expr
  366            | expr . "-=" expr
  367            | expr . "*=" expr
  368            | expr . "/=" expr
  369            | expr . "%=" expr
  370            | expr . "<<=" expr
  371            | expr . ">>=" expr
  372            | expr . "<<<=" expr
  373            | expr . ">>>=" expr
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  580 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "+="                 shift, and go to state 864
    "-="                 shift, and go to state 865
    "/="                 shift, and go to state 866
    "*="                 shift, and go to state 867
    "%="                 shift, and go to state 868
    "&="                 shift, and go to state 869
    "|="                 shift, and go to state 870
    "^="                 shift, and go to state 871
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    "<<="                shift, and go to state 872
    ">>="                shift, and go to state 873
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "<-"                 shift, and go to state 874
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    ":="                 shift, and go to state 759
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "<<<="               shift, and go to state 875
    ">>>="               shift, and go to state 876
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    "&&="                shift, and go to state 877
    "||="                shift, and go to state 878
    "^^="                shift, and go to state 879
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1069
    '='                  shift, and go to state 880
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784
    '$'                  shift, and go to state 503
    '@'                  shift, and go to state 675

    $default  reduce using rule 355 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 802

  696 type_declaration_no_options: "type" '<' $@49 type_declaration . '>' $@50
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1070


State 803

  719 type_declaration_no_options: "array" '<' $@54 type_declaration . '>' $@55
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1071


State 804

  722 type_declaration_no_options: "table" '<' $@56 table_type_pair . '>' $@57

    '>'  shift, and go to state 1072


State 805

  684 table_type_pair: type_declaration .
  685                | type_declaration . "end of expression" type_declaration
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 1073
    '|'                  shift, and go to state 417

    $default  reduce using rule 684 (table_type_pair)


State 806

  697 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 697 (type_declaration_no_options)


State 807

  725 type_declaration_no_options: "iterator" '<' $@58 type_declaration . '>' $@59
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1074


State 808

  715 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration . '>' $@53
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1075


State 809

  674 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 674 (auto_type_declaration)


State 810

  676 bitfield_bits: "name" .

    $default  reduce using rule 676 (bitfield_bits)


State 811

  677 bitfield_bits: bitfield_bits . "end of expression" "name"
  683 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits . '>' $@48

    "end of expression"  shift, and go to state 1076
    '>'                  shift, and go to state 1077


State 812

  729 type_declaration_no_options: "block" '<' $@60 type_declaration . '>' $@61
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1078


State 813

  732 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1079


State 814

  736 type_declaration_no_options: "function" '<' $@64 type_declaration . '>' $@65
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1080


State 815

  739 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list . optional_function_type '>' $@67

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1081


State 816

  743 type_declaration_no_options: "lambda" '<' $@68 type_declaration . '>' $@69
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1082


State 817

  746 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list . optional_function_type '>' $@71

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1083


State 818

  548 tuple_type_list: tuple_type .

    $default  reduce using rule 548 (tuple_type_list)


State 819

  549 tuple_type_list: tuple_type_list . "end of expression" tuple_type
  749 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list . '>' $@73

    "end of expression"  shift, and go to state 1084
    '>'                  shift, and go to state 1085


State 820

  554 variant_type_list: variant_type .

    $default  reduce using rule 554 (variant_type_list)


State 821

  555 variant_type_list: variant_type_list . "end of expression" variant_type
  752 type_declaration_no_options: "variant" '<' $@74 variant_type_list . '>' $@75

    "end of expression"  shift, and go to state 1086
    '>'                  shift, and go to state 1087


State 822

  675 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 675 (auto_type_declaration)


State 823

  700 type_declaration_no_options: '$' name_in_namespace '<' $@51 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    type_declaration_no_options_list  go to state 1088
    name_in_namespace                 go to state 351
    basic_type_declaration            go to state 352
    structure_type_declaration        go to state 353
    auto_type_declaration             go to state 354
    bitfield_type_declaration         go to state 355
    type_declaration_no_options       go to state 356
    type_declaration                  go to state 1089


State 824

  698 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1090


State 825

  249 optional_expr_list: expr_list . optional_comma
  328 expr_list: expr_list . ',' expr

    ','  shift, and go to state 947

    ','       [reduce using rule 868 (optional_comma)]
    $default  reduce using rule 868 (optional_comma)

    optional_comma  go to state 1091


State 826

  701 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 701 (type_declaration_no_options)


State 827

  686 dim_list: '[' expr ']' .

    $default  reduce using rule 686 (dim_list)


State 828

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  687 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ']'    shift, and go to state 1092


State 829

  680 bitfield_alias_bits: bitfield_alias_bits "name" "end of expression" .

    $default  reduce using rule 680 (bitfield_alias_bits)


State 830

  770 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block" .

    $default  reduce using rule 770 (bitfield_alias_declaration)


State 831

  547 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1093


State 832

  552 tuple_alias_type_list: tuple_alias_type_list tuple_type "end of expression" .

    $default  reduce using rule 552 (tuple_alias_type_list)


State 833

  760 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block" .

    $default  reduce using rule 760 (tuple_alias_declaration)


State 834

  553 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1094


State 835

  558 variant_alias_type_list: variant_alias_type_list variant_type "end of expression" .

    $default  reduce using rule 558 (variant_alias_type_list)


State 836

  765 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block" .

    $default  reduce using rule 765 (variant_alias_declaration)


State 837

  543 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 543 (function_argument_declaration)


State 838

  633 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1095
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 839

  634 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1096


State 840

  560 copy_or_move: "<-" .

    $default  reduce using rule 560 (copy_or_move)


State 841

  635 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  636                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1097


State 842

  559 copy_or_move: '=' .

    $default  reduce using rule 559 (copy_or_move)


State 843

  563 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  564                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1098


State 844

  562 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 562 (variable_declaration)


State 845

  565 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  566                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 1099
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 643
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1100
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 846

  816 make_struct_decl: "struct" '<' $@88 . type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1101


State 847

  819 make_struct_decl: "class" '<' $@90 . type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1102


State 848

   78 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 78 (expression_while_loop)


State 849

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  635 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  636                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1103
    ','   shift, and go to state 841


State 850

  272 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1104


State 851

  275 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  276         | "new" new_type_declaration '(' . expr_list ')'
  277         | "new" new_type_declaration '(' . make_struct_single ')'
  278         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "uninitialized"                   shift, and go to state 1105
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 914
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 915
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 806 (use_initializer)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1106
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_fields      go to state 961
    make_struct_single      go to state 1107
    use_initializer         go to state 1108
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 852

  321 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  322               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  323               | "typeinfo" '(' name_in_namespace . '<' "name" "end of expression" "name" '>' expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '<'                               shift, and go to state 1109
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1110
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 853

  325 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  326               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 1111


State 854

  324 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1112
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 855

  320 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1113


State 856

  842 make_dim_decl: "array" "struct" '<' . $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 840 ($@98)

    $@98  go to state 1114


State 857

  845 make_dim_decl: "array" "tuple" '<' . $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 843 ($@100)

    $@100  go to state 1115


State 858

  848 make_dim_decl: "array" "variant" '<' . $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    $default  reduce using rule 846 ($@102)

    $@102  go to state 1116


State 859

  852 make_dim_decl: "array" '<' $@104 . type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1117


State 860

  328 expr_list: expr_list . ',' expr
  849 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 947

    $default  reduce using rule 868 (optional_comma)

    optional_comma  go to state 1118


State 861

  287 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 287 (expression_return)


State 862

  284 expression_return_no_pipe: "return" "<-" expr_list .
  328 expr_list: expr_list . ',' expr

    ','  shift, and go to state 863

    $default  reduce using rule 284 (expression_return_no_pipe)


State 863

  328 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1119
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 864

  365 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1120
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 865

  366 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1121
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 866

  368 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1122
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 867

  367 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1123
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 868

  369 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1124
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 869

  359 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1125
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 870

  360 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1126
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 871

  361 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1127
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 872

  370 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1128
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 873

  371 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1129
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 874

  357 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1130
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 875

  372 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1131
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 876

  373 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1132
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 877

  362 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1133
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 878

  363 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1134
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 879

  364 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1135
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 880

  356 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1136
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 881

  293 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1137


State 882

  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"
  864 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  865                | "table" '<' type_declaration_no_options . "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "const"              shift, and go to state 406
    "implicit"           shift, and go to state 407
    "explicit"           shift, and go to state 408
    "=="                 shift, and go to state 409
    "??"                 shift, and go to state 410
    "end of expression"  shift, and go to state 1138
    '?'                  shift, and go to state 411
    '&'                  shift, and go to state 412
    '>'                  shift, and go to state 1139
    '-'                  shift, and go to state 413
    '['                  shift, and go to state 414
    '#'                  shift, and go to state 415

    dim_list  go to state 416


State 883

  860 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  863 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 942

    $default  reduce using rule 868 (optional_comma)

    optional_comma  go to state 1140


State 884

  269 expression_delete: "delete" "explicit" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 269 (expression_delete)


State 885

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  470     | "deref" '(' expr . ')'
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1141


State 886

   79 expression_with: "with" expr expression_block .

    $default  reduce using rule 79 (expression_with)


State 887

   81 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 80 ($@5)

    $@5  go to state 1142


State 888

  311 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1143


State 889

  314 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1144


State 890

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  471     | "addr" '(' expr . ')'
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1145


State 891

  317 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1146


State 892

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 893

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 894

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  502     | "unsafe" '(' expr . ')'
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1147


State 895

  856 make_dim_decl: "fixed_array" '<' $@106 . type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1148


State 896

  328 expr_list: expr_list . ',' expr
  853 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 947

    $default  reduce using rule 868 (optional_comma)

    optional_comma  go to state 1149


State 897

  825 make_struct_decl: "default" '<' $@94 . type_declaration_no_options '>' $@95 use_initializer

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1150


State 898

  834 make_tuple_call: "tuple" '<' $@96 . type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1151


State 899

  328 expr_list: expr_list . ',' expr
  831 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 947

    $default  reduce using rule 868 (optional_comma)

    optional_comma  go to state 1152


State 900

  822 make_struct_decl: "variant" '<' $@92 . type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1153


State 901

  222 expr_call_pipe: "generator" '<' type_declaration_no_options . '>' optional_capture_list expr_full_block_assumed_piped
  472 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  473     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1154
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 902

  292 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 292 (expression_yield)


State 903

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  289 expression_yield_no_pipe: "yield" "<-" expr .
  355 expr_assign: expr .
  356            | expr . '=' expr
  357            | expr . "<-" expr
  358            | expr . ":=" expr
  359            | expr . "&=" expr
  360            | expr . "|=" expr
  361            | expr . "^=" expr
  362            | expr . "&&=" expr
  363            | expr . "||=" expr
  364            | expr . "^^=" expr
  365            | expr . "+=" expr
  366            | expr . "-=" expr
  367            | expr . "*=" expr
  368            | expr . "/=" expr
  369            | expr . "%=" expr
  370            | expr . "<<=" expr
  371            | expr . ">>=" expr
  372            | expr . "<<<=" expr
  373            | expr . ">>>=" expr
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 732
    "as"    shift, and go to state 733
    "+="    shift, and go to state 864
    "-="    shift, and go to state 865
    "/="    shift, and go to state 866
    "*="    shift, and go to state 867
    "%="    shift, and go to state 868
    "&="    shift, and go to state 869
    "|="    shift, and go to state 870
    "^="    shift, and go to state 871
    "<<"    shift, and go to state 742
    ">>"    shift, and go to state 743
    "++"    shift, and go to state 744
    "--"    shift, and go to state 745
    "<="    shift, and go to state 746
    "<<="   shift, and go to state 872
    ">>="   shift, and go to state 873
    ">="    shift, and go to state 749
    "=="    shift, and go to state 750
    "!="    shift, and go to state 751
    "->"    shift, and go to state 752
    "<-"    shift, and go to state 874
    "??"    shift, and go to state 754
    "?."    shift, and go to state 755
    "?["    shift, and go to state 756
    "<|"    shift, and go to state 757
    "|>"    shift, and go to state 758
    ":="    shift, and go to state 759
    "<<<"   shift, and go to state 760
    ">>>"   shift, and go to state 761
    "<<<="  shift, and go to state 875
    ">>>="  shift, and go to state 876
    "&&"    shift, and go to state 764
    "||"    shift, and go to state 765
    "^^"    shift, and go to state 766
    "&&="   shift, and go to state 877
    "||="   shift, and go to state 878
    "^^="   shift, and go to state 879
    ".."    shift, and go to state 770
    '='     shift, and go to state 880
    '?'     shift, and go to state 772
    '|'     shift, and go to state 773
    '^'     shift, and go to state 774
    '&'     shift, and go to state 775
    '<'     shift, and go to state 776
    '>'     shift, and go to state 777
    '-'     shift, and go to state 778
    '+'     shift, and go to state 779
    '*'     shift, and go to state 780
    '/'     shift, and go to state 781
    '%'     shift, and go to state 782
    '.'     shift, and go to state 783
    '['     shift, and go to state 784
    '$'     shift, and go to state 503
    '@'     shift, and go to state 675

    " <|"     reduce using rule 355 (expr_assign)
    $default  reduce using rule 289 (expression_yield_no_pipe)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 904

  334 block_or_lambda: '@' '@' .

    $default  reduce using rule 334 (block_or_lambda)


State 905

  344 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 967

    $default  reduce using rule 341 (optional_capture_list)

    optional_capture_list  go to state 1155


State 906

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  504 expr_mtag: "$$" '(' expr . ')'
  512          | expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1156


State 907

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  505 expr_mtag: "$i" '(' expr . ')'
  512          | expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1157


State 908

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  506 expr_mtag: "$v" '(' expr . ')'
  512          | expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1158


State 909

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  507 expr_mtag: "$b" '(' expr . ')'
  512          | expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1159


State 910

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  508 expr_mtag: "$a" '(' expr . ')'
  512          | expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1160


State 911

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  510 expr_mtag: "$c" '(' expr . ')' '(' ')'
  511          | "$c" '(' expr . ')' '(' expr_list ')'
  512          | expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1161


State 912

  635 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  636                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  872 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1162
    ','   shift, and go to state 841


State 913

  793 optional_block: "where" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 675

    expression_block  go to state 676
    block_or_lambda   go to state 677
    expr_block        go to state 1163


State 914

  780 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  781                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1164


State 915

  265 name_in_namespace: "name" .
  266                  | "name" . "::" "name"
  776 make_struct_fields: "name" . copy_or_move expr
  777                   | "name" . ":=" expr

    "<-"  shift, and go to state 840
    ":="  shift, and go to state 1165
    "::"  shift, and go to state 98
    '='   shift, and go to state 842

    $default  reduce using rule 265 (name_in_namespace)

    copy_or_move  go to state 1166


State 916

  433 expr: '-' . expr
  701 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  704                            | type_declaration_no_options '-' . "const"
  706                            | type_declaration_no_options '-' . '&'
  709                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "const"                           shift, and go to state 597
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '&'                               shift, and go to state 598
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 1167
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504
    '#'                               shift, and go to state 600

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 703
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 917

  686 dim_list: '[' . expr ']'
  693 type_declaration_no_options: type_declaration_no_options '[' . ']'
  837 make_dim_decl: '[' . expr_list optional_comma ']'
  870 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  871                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 708
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 709
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    ']'                               shift, and go to state 601
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 710
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1168
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 918

  460 expr: '(' . expr_list optional_comma ')'
  810 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  811                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1169
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 712
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 919

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  826 make_tuple: expr .
  827           | expr . "=>" expr

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "=>"   shift, and go to state 1170
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 826 (make_tuple)


State 920

  778 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  779                   | make_struct_fields . ',' "name" ":=" expr
  782                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  783                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  786 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1171

    $default  reduce using rule 786 (make_struct_dim)


State 921

  787 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  808 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 913
    "end of expression"  shift, and go to state 1172

    $default  reduce using rule 792 (optional_block)

    optional_block  go to state 1173


State 922

  809 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1174
    ",]]"  shift, and go to state 1175
    ']'    shift, and go to state 1176

    optional_trailing_delim_sqr_sqr  go to state 1177


State 923

  828 make_tuple: make_tuple . ',' expr
  835 make_dim: make_tuple .

    ','  shift, and go to state 1178

    $default  reduce using rule 835 (make_dim)


State 924

  836 make_dim: make_dim . "end of expression" make_tuple
  838 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1179
    ";]]"                shift, and go to state 1180
    ']'                  shift, and go to state 1181

    optional_trailing_semicolon_sqr_sqr  go to state 1182


State 925

  635 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  636                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  873 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1183
    ','   shift, and go to state 841


State 926

  460 expr: '(' . expr_list optional_comma ')'
  813 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1184
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 712
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 927

  787 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  812 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 913
    "end of expression"  shift, and go to state 1172

    $default  reduce using rule 792 (optional_block)

    optional_block  go to state 1185


State 928

  836 make_dim: make_dim . "end of expression" make_tuple
  839 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1186
    "end of expression"  shift, and go to state 1179
    ";}]"                shift, and go to state 1187

    optional_trailing_semicolon_cur_sqr  go to state 1188


State 929

  635 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  636                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  875 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1189
    ','   shift, and go to state 841


State 930

  829 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1190
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 931

  794 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1191


State 932

  858 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 692
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 1192
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 933

  795 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 795 (optional_trailing_semicolon_cur_cur)


State 934

  862 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 862 (make_table_decl)


State 935

  256 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options_list '>' $@8 expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    type_declaration_no_options_list  go to state 1193
    name_in_namespace                 go to state 351
    basic_type_declaration            go to state 352
    structure_type_declaration        go to state 353
    auto_type_declaration             go to state 354
    bitfield_type_declaration         go to state 355
    type_declaration_no_options       go to state 356
    type_declaration                  go to state 1089


State 936

  247 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 247 (expr_keyword)


State 937

  259 expression_keyword: "type function" '<' $@9 . type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    type_declaration_no_options_list  go to state 1194
    name_in_namespace                 go to state 351
    basic_type_declaration            go to state 352
    structure_type_declaration        go to state 353
    auto_type_declaration             go to state 354
    bitfield_type_declaration         go to state 355
    type_declaration_no_options       go to state 356
    type_declaration                  go to state 1089


State 938

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 939

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1195
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 940

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 222
    STRING_CHARACTER_ESC  shift, and go to state 223

    $default  reduce using rule 29 (string_builder_body)


State 941

  635 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  636                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  874 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1196
    ','   shift, and go to state 841


State 942

  860 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  869 optional_comma: ',' .

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 869 (optional_comma)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 692
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 1197
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 943

  861 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1198


State 944

  219 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 244 (expressions)

    expressions  go to state 1199


State 945

  635 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  636                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  870 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1200
    ','   shift, and go to state 841


State 946

  871 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_name_with_pos_list  go to state 1201


State 947

  328 expr_list: expr_list ',' . expr
  869 optional_comma: ',' .

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 869 (optional_comma)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1119
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 948

  837 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1202


State 949

  460 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1203


State 950

  400 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1204


State 951

  519 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1205


State 952

  404 func_addr_expr: '@' '@' '<' . $@22 type_declaration_no_options '>' $@23 func_addr_name
  407               | '@' '@' '<' . $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    ':'       reduce using rule 405 ($@24)
    '>'       reduce using rule 405 ($@24)
    '('       reduce using rule 405 ($@24)
    $default  reduce using rule 402 ($@22)

    $@22  go to state 1206
    $@24  go to state 1207


State 953

  399 func_addr_name: name_in_namespace .

    $default  reduce using rule 399 (func_addr_name)


State 954

  401 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 401 (func_addr_expr)


State 955

   72 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1208
    "elif"         shift, and go to state 1209
    "static_elif"  shift, and go to state 1210

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1211
    expression_else      go to state 1212


State 956

   74 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1213
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 957

  347 expr_full_block_assumed_piped: block_or_lambda $@21 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    optional_annotation_list  go to state 1214


State 958

  395 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  837 make_dim_decl: '[' . expr_list optional_comma ']'
  870 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  871                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 708
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 709
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 914
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 915
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 710
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_fields      go to state 1215
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 959

  415 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 415 (expr_call)


State 960

  328 expr_list: expr_list . ',' expr
  396 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  417 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1216
    ')'  shift, and go to state 1217


State 961

  778 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  779                   | make_struct_fields . ',' "name" ":=" expr
  782                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  783                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  785 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1171

    $default  reduce using rule 785 (make_struct_single)


State 962

  416 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1218


State 963

  303 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  305                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1219

    tuple_expansion  go to state 1220


State 964

  304 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  306                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1219

    tuple_expansion  go to state 1221


State 965

  308 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 308 (expression_let)


State 966

  307 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 307 (expression_let)


State 967

  342 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1222
    ":="  shift, and go to state 1223
    '='   shift, and go to state 1224
    '&'   shift, and go to state 1225

    capture_entry  go to state 1226
    capture_list   go to state 1227


State 968

  345 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1228


State 969

  260 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 260 (expr_pipe)


State 970

  478 expr: expr "is" "type" . '<' $@28 type_declaration_no_options '>' $@29

    '<'  shift, and go to state 1229


State 971

  518 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1230


State 972

  480 expr: expr "is" "name" .

    $default  reduce using rule 480 (expr)


State 973

  479 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 479 (expr)


State 974

  484 expr: expr "as" "type" . '<' $@30 type_declaration '>' $@31

    '<'  shift, and go to state 1231


State 975

  516 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1232


State 976

  481 expr: expr "as" "name" .

    $default  reduce using rule 481 (expr)


State 977

  485 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 485 (expr)


State 978

  376 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 675

    expression_block  go to state 676
    block_or_lambda   go to state 677
    expr_block        go to state 1233


State 979

  374 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 675

    expression_block  go to state 676
    block_or_lambda   go to state 677
    expr_block        go to state 1234


State 980

  375 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 675

    expression_block  go to state 676
    block_or_lambda   go to state 677
    expr_block        go to state 1235


State 981

  377 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 377 (expr_assign_pipe_right)


State 982

  386 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 386 (expr_assign_pipe)


State 983

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  365 expr_assign: expr "+=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 365 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 984

  387 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 387 (expr_assign_pipe)


State 985

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr "-=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 986

  389 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 389 (expr_assign_pipe)


State 987

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  368 expr_assign: expr "/=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 368 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 988

  388 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 388 (expr_assign_pipe)


State 989

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  367 expr_assign: expr "*=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 367 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 990

  390 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 390 (expr_assign_pipe)


State 991

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  369 expr_assign: expr "%=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 369 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 992

  380 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 380 (expr_assign_pipe)


State 993

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  359 expr_assign: expr "&=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 359 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 994

  381 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 381 (expr_assign_pipe)


State 995

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  360 expr_assign: expr "|=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 360 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 996

  382 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 382 (expr_assign_pipe)


State 997

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  361 expr_assign: expr "^=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 361 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 998

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  434     | expr "<<" expr .
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '-'   shift, and go to state 778
    '+'   shift, and go to state 779
    '*'   shift, and go to state 780
    '/'   shift, and go to state 781
    '%'   shift, and go to state 782
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 434 (expr)


State 999

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  435     | expr ">>" expr .
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '-'   shift, and go to state 778
    '+'   shift, and go to state 779
    '*'   shift, and go to state 780
    '/'   shift, and go to state 781
    '%'   shift, and go to state 782
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 435 (expr)


State 1000

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  447     | expr "<=" expr .
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 447 (expr)


State 1001

  391 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 391 (expr_assign_pipe)


State 1002

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  370 expr_assign: expr "<<=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 370 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1003

  392 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 392 (expr_assign_pipe)


State 1004

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  371 expr_assign: expr ">>=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 371 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1005

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  448     | expr ">=" expr .
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 448 (expr)


State 1006

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  445     | expr "==" expr .
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 445 (expr)


State 1007

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  446     | expr "!=" expr .
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 446 (expr)


State 1008

  397 expr_method_call: expr "->" "name" . '(' ')'
  398                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1236


State 1009

  379 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 379 (expr_assign_pipe)


State 1010

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  357 expr_assign: expr "<-" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 357 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1011

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  474     | expr "??" expr .
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 474 (expr)


State 1012

  513 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1237


State 1013

  465 expr: expr "?." "name" .

    $default  reduce using rule 465 (expr)


State 1014

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  463     | expr "?[" expr . ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ']'    shift, and go to state 1238


State 1015

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  498     | expr "<|" expr .
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 752
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 498 (expr)


State 1016

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  499     | expr "|>" expr .
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 752
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 499 (expr)


State 1017

  418 expr_call: basic_type_declaration . '(' ')'
  419          | basic_type_declaration . '(' expr_list ')'
  500 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 786

    $default  reduce using rule 500 (expr)


State 1018

  358 expr_assign: expr ":=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 358 (expr_assign)


State 1019

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  436     | expr "<<<" expr .
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '-'   shift, and go to state 778
    '+'   shift, and go to state 779
    '*'   shift, and go to state 780
    '/'   shift, and go to state 781
    '%'   shift, and go to state 782
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 436 (expr)


State 1020

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  437     | expr ">>>" expr .
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '-'   shift, and go to state 778
    '+'   shift, and go to state 779
    '*'   shift, and go to state 780
    '/'   shift, and go to state 781
    '%'   shift, and go to state 782
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 437 (expr)


State 1021

  393 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 393 (expr_assign_pipe)


State 1022

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  372 expr_assign: expr "<<<=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 372 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1023

  394 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 394 (expr_assign_pipe)


State 1024

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  373 expr_assign: expr ">>>=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 373 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1025

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  452     | expr "&&" expr .
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 452 (expr)


State 1026

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  453     | expr "||" expr .
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "^^"   shift, and go to state 766
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 453 (expr)


State 1027

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  454     | expr "^^" expr .
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 454 (expr)


State 1028

  383 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 383 (expr_assign_pipe)


State 1029

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  362 expr_assign: expr "&&=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 362 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1030

  384 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 384 (expr_assign_pipe)


State 1031

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  363 expr_assign: expr "||=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 363 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1032

  385 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 385 (expr_assign_pipe)


State 1033

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  364 expr_assign: expr "^^=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 364 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1034

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  455     | expr ".." expr .
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    ".."  error (nonassociative)

    $default  reduce using rule 455 (expr)


State 1035

  378 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 378 (expr_assign_pipe)


State 1036

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  356 expr_assign: expr '=' expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 356 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1037

  486 expr: expr '?' "as" . "name"
  489     | expr '?' "as" . "type" '<' $@32 type_declaration '>' $@33
  490     | expr '?' "as" . basic_type_declaration
  517 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1239
    "bool"      shift, and go to state 316
    "void"      shift, and go to state 317
    "string"    shift, and go to state 318
    "int"       shift, and go to state 320
    "int2"      shift, and go to state 321
    "int3"      shift, and go to state 322
    "int4"      shift, and go to state 323
    "uint"      shift, and go to state 324
    "bitfield"  shift, and go to state 463
    "uint2"     shift, and go to state 326
    "uint3"     shift, and go to state 327
    "uint4"     shift, and go to state 328
    "float"     shift, and go to state 329
    "float2"    shift, and go to state 330
    "float3"    shift, and go to state 331
    "float4"    shift, and go to state 332
    "range"     shift, and go to state 333
    "urange"    shift, and go to state 334
    "range64"   shift, and go to state 335
    "urange64"  shift, and go to state 336
    "int64"     shift, and go to state 338
    "uint64"    shift, and go to state 339
    "double"    shift, and go to state 340
    "int8"      shift, and go to state 343
    "uint8"     shift, and go to state 344
    "int16"     shift, and go to state 345
    "uint16"    shift, and go to state 346
    "$f"        shift, and go to state 1240
    "name"      shift, and go to state 1241

    basic_type_declaration  go to state 1242


State 1038

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  475     | expr '?' expr . ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    ':'    shift, and go to state 1243
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784


State 1039

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  450     | expr '|' expr .
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 450 (expr)


State 1040

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  451     | expr '^' expr .
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 451 (expr)


State 1041

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  449     | expr '&' expr .
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 449 (expr)


State 1042

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  443     | expr '<' expr .
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 443 (expr)


State 1043

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  444     | expr '>' expr .
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 444 (expr)


State 1044

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  439     | expr '-' expr .
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '*'   shift, and go to state 780
    '/'   shift, and go to state 781
    '%'   shift, and go to state 782
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 439 (expr)


State 1045

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  438     | expr '+' expr .
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '*'   shift, and go to state 780
    '/'   shift, and go to state 781
    '%'   shift, and go to state 782
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 438 (expr)


State 1046

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  440     | expr '*' expr .
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 440 (expr)


State 1047

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  441     | expr '/' expr .
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 441 (expr)


State 1048

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  442     | expr '%' expr .
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 442 (expr)


State 1049

  466 expr: expr '.' "?." . "name"
  515 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1244
    "name"  shift, and go to state 1245


State 1050

  464 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1246
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1051

  512 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1247


State 1052

  408 expr_field: expr '.' "name" .
  410           | expr '.' "name" . '(' ')'
  411           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1248

    '('       [reduce using rule 408 (expr_field)]
    $default  reduce using rule 408 (expr_field)


State 1053

  409 expr_field: expr '.' '.' . "name"
  514 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1249
    "name"  shift, and go to state 1250


State 1054

  462 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1251
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1055

  414 expr_field: expr '.' $@26 . error $@27

    error  shift, and go to state 1252


State 1056

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  461     | expr '[' expr . ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ']'    shift, and go to state 1253


State 1057

  418 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 418 (expr_call)


State 1058

  328 expr_list: expr_list . ',' expr
  419 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 863
    ')'  shift, and go to state 1254


State 1059

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  596 enum_list: enum_list "name" '=' expr . "end of expression"

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1255
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784


State 1060

  616 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 . "end of code block"

    "end of code block"  shift, and go to state 1256


State 1061

  118 annotation_list: annotation_list . ',' annotation_declaration
  120 optional_annotation_list: '[' annotation_list . ']'
  541 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' "end of expression"

    ','  shift, and go to state 107
    ']'  shift, and go to state 1257


State 1062

  538 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  540                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "public"   shift, and go to state 1258
    "private"  shift, and go to state 1259

    $default  reduce using rule 528 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1260


State 1063

  533 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1261

    $default  reduce using rule 531 (optional_static_member_variable)

    optional_static_member_variable  go to state 1262


State 1064

  536 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1263


State 1065

  472 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  473     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1264
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1066

  576 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 576 (let_variable_name_with_pos_list)


State 1067

  579 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 579 (let_variable_declaration)


State 1068

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  355 expr_assign: expr .
  356            | expr . '=' expr
  357            | expr . "<-" expr
  358            | expr . ":=" expr
  359            | expr . "&=" expr
  360            | expr . "|=" expr
  361            | expr . "^=" expr
  362            | expr . "&&=" expr
  363            | expr . "||=" expr
  364            | expr . "^^=" expr
  365            | expr . "+=" expr
  366            | expr . "-=" expr
  367            | expr . "*=" expr
  368            | expr . "/=" expr
  369            | expr . "%=" expr
  370            | expr . "<<=" expr
  371            | expr . ">>=" expr
  372            | expr . "<<<=" expr
  373            | expr . ">>>=" expr
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  578 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "+="                 shift, and go to state 864
    "-="                 shift, and go to state 865
    "/="                 shift, and go to state 866
    "*="                 shift, and go to state 867
    "%="                 shift, and go to state 868
    "&="                 shift, and go to state 869
    "|="                 shift, and go to state 870
    "^="                 shift, and go to state 871
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    "<<="                shift, and go to state 872
    ">>="                shift, and go to state 873
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "<-"                 shift, and go to state 874
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    ":="                 shift, and go to state 759
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "<<<="               shift, and go to state 875
    ">>>="               shift, and go to state 876
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    "&&="                shift, and go to state 877
    "||="                shift, and go to state 878
    "^^="                shift, and go to state 879
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1265
    '='                  shift, and go to state 880
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784
    '$'                  shift, and go to state 503
    '@'                  shift, and go to state 675

    $default  reduce using rule 355 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1069

  580 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 580 (let_variable_declaration)


State 1070

  696 type_declaration_no_options: "type" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 695 ($@50)

    $@50  go to state 1266


State 1071

  719 type_declaration_no_options: "array" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 718 ($@55)

    $@55  go to state 1267


State 1072

  722 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' . $@57

    $default  reduce using rule 721 ($@57)

    $@57  go to state 1268


State 1073

  685 table_type_pair: type_declaration "end of expression" . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1269


State 1074

  725 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 724 ($@59)

    $@59  go to state 1270


State 1075

  715 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 714 ($@53)

    $@53  go to state 1271


State 1076

  677 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1272


State 1077

  683 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' . $@48

    $default  reduce using rule 682 ($@48)

    $@48  go to state 1273


State 1078

  729 type_declaration_no_options: "block" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 728 ($@61)

    $@61  go to state 1274


State 1079

  732 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1275


State 1080

  736 type_declaration_no_options: "function" '<' $@64 type_declaration '>' . $@65

    $default  reduce using rule 735 ($@65)

    $@65  go to state 1276


State 1081

  739 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type . '>' $@67

    '>'  shift, and go to state 1277


State 1082

  743 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' . $@69

    $default  reduce using rule 742 ($@69)

    $@69  go to state 1278


State 1083

  746 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type . '>' $@71

    '>'  shift, and go to state 1279


State 1084

  549 tuple_type_list: tuple_type_list "end of expression" . tuple_type

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 609
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    tuple_type                   go to state 1280
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 612


State 1085

  749 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' . $@73

    $default  reduce using rule 748 ($@73)

    $@73  go to state 1281


State 1086

  555 variant_type_list: variant_type_list "end of expression" . variant_type

    "name"  shift, and go to state 614

    variant_type  go to state 1282


State 1087

  752 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' . $@75

    $default  reduce using rule 751 ($@75)

    $@75  go to state 1283


State 1088

  253 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  700 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 1284
    '>'                  shift, and go to state 1285


State 1089

  252 type_declaration_no_options_list: type_declaration .
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 252 (type_declaration_no_options_list)


State 1090

  698 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 698 (type_declaration_no_options)


State 1091

  249 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 249 (optional_expr_list)


State 1092

  687 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 687 (dim_list)


State 1093

  547 tuple_type: "name" ':' type_declaration .
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 547 (tuple_type)


State 1094

  553 variant_type: "name" ':' type_declaration .
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 553 (variant_type)


State 1095

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  633 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1286


State 1096

  634 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 634 (variable_name_with_pos_list)


State 1097

  635 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  636                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1287

    $default  reduce using rule 635 (variable_name_with_pos_list)


State 1098

  563 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  564                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 840
    '='   shift, and go to state 842
    '|'   shift, and go to state 417

    $default  reduce using rule 563 (variable_declaration)

    copy_or_move  go to state 1288


State 1099

  566 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 566 (variable_declaration)


State 1100

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  355 expr_assign: expr .
  356            | expr . '=' expr
  357            | expr . "<-" expr
  358            | expr . ":=" expr
  359            | expr . "&=" expr
  360            | expr . "|=" expr
  361            | expr . "^=" expr
  362            | expr . "&&=" expr
  363            | expr . "||=" expr
  364            | expr . "^^=" expr
  365            | expr . "+=" expr
  366            | expr . "-=" expr
  367            | expr . "*=" expr
  368            | expr . "/=" expr
  369            | expr . "%=" expr
  370            | expr . "<<=" expr
  371            | expr . ">>=" expr
  372            | expr . "<<<=" expr
  373            | expr . ">>>=" expr
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  565 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 732
    "as"    shift, and go to state 733
    "+="    shift, and go to state 864
    "-="    shift, and go to state 865
    "/="    shift, and go to state 866
    "*="    shift, and go to state 867
    "%="    shift, and go to state 868
    "&="    shift, and go to state 869
    "|="    shift, and go to state 870
    "^="    shift, and go to state 871
    "<<"    shift, and go to state 742
    ">>"    shift, and go to state 743
    "++"    shift, and go to state 744
    "--"    shift, and go to state 745
    "<="    shift, and go to state 746
    "<<="   shift, and go to state 872
    ">>="   shift, and go to state 873
    ">="    shift, and go to state 749
    "=="    shift, and go to state 750
    "!="    shift, and go to state 751
    "->"    shift, and go to state 752
    "<-"    shift, and go to state 874
    "??"    shift, and go to state 754
    "?."    shift, and go to state 755
    "?["    shift, and go to state 756
    "<|"    shift, and go to state 757
    "|>"    shift, and go to state 758
    ":="    shift, and go to state 759
    "<<<"   shift, and go to state 760
    ">>>"   shift, and go to state 761
    "<<<="  shift, and go to state 875
    ">>>="  shift, and go to state 876
    "&&"    shift, and go to state 764
    "||"    shift, and go to state 765
    "^^"    shift, and go to state 766
    "&&="   shift, and go to state 877
    "||="   shift, and go to state 878
    "^^="   shift, and go to state 879
    ".."    shift, and go to state 770
    '='     shift, and go to state 880
    '?'     shift, and go to state 772
    '|'     shift, and go to state 773
    '^'     shift, and go to state 774
    '&'     shift, and go to state 775
    '<'     shift, and go to state 776
    '>'     shift, and go to state 777
    '-'     shift, and go to state 778
    '+'     shift, and go to state 779
    '*'     shift, and go to state 780
    '/'     shift, and go to state 781
    '%'     shift, and go to state 782
    '.'     shift, and go to state 783
    '['     shift, and go to state 784
    '$'     shift, and go to state 503
    '@'     shift, and go to state 675

    " <|"     reduce using rule 355 (expr_assign)
    $default  reduce using rule 565 (variable_declaration)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1101

  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"
  816 make_struct_decl: "struct" '<' $@88 type_declaration_no_options . '>' $@89 '(' use_initializer make_struct_dim_decl ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1289
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1102

  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"
  819 make_struct_decl: "class" '<' $@90 type_declaration_no_options . '>' $@91 '(' use_initializer make_struct_dim_decl ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1290
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1103

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1291
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1104

  272 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1292


State 1105

  278 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  807 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 914
    "name"  shift, and go to state 1293

    $default  reduce using rule 807 (use_initializer)

    make_struct_fields  go to state 961
    make_struct_single  go to state 1294


State 1106

  276 expr_new: "new" new_type_declaration '(' expr_list . ')'
  328 expr_list: expr_list . ',' expr

    ','  shift, and go to state 863
    ')'  shift, and go to state 1295


State 1107

  277 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1296


State 1108

  275 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1297


State 1109

  322 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  323               | "typeinfo" '(' name_in_namespace '<' . "name" "end of expression" "name" '>' expr ')'

    "name"  shift, and go to state 1298


State 1110

  321 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1299


State 1111

  325 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  326               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1300
    '>'                  shift, and go to state 1301


State 1112

  324 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1302


State 1113

  320 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1303


State 1114

  842 make_dim_decl: "array" "struct" '<' $@98 . type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1304


State 1115

  845 make_dim_decl: "array" "tuple" '<' $@100 . type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1305


State 1116

  848 make_dim_decl: "array" "variant" '<' $@102 . type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1306


State 1117

  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"
  852 make_dim_decl: "array" '<' $@104 type_declaration_no_options . '>' $@105 '(' optional_expr_list ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1307
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1118

  849 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1308


State 1119

  328 expr_list: expr_list ',' expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 328 (expr_list)


State 1120

  365 expr_assign: expr "+=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 365 (expr_assign)


State 1121

  366 expr_assign: expr "-=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 366 (expr_assign)


State 1122

  368 expr_assign: expr "/=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 368 (expr_assign)


State 1123

  367 expr_assign: expr "*=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 367 (expr_assign)


State 1124

  369 expr_assign: expr "%=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 369 (expr_assign)


State 1125

  359 expr_assign: expr "&=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 359 (expr_assign)


State 1126

  360 expr_assign: expr "|=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 360 (expr_assign)


State 1127

  361 expr_assign: expr "^=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 361 (expr_assign)


State 1128

  370 expr_assign: expr "<<=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 370 (expr_assign)


State 1129

  371 expr_assign: expr ">>=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 371 (expr_assign)


State 1130

  357 expr_assign: expr "<-" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 357 (expr_assign)


State 1131

  372 expr_assign: expr "<<<=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 372 (expr_assign)


State 1132

  373 expr_assign: expr ">>>=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 373 (expr_assign)


State 1133

  362 expr_assign: expr "&&=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 362 (expr_assign)


State 1134

  363 expr_assign: expr "||=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 363 (expr_assign)


State 1135

  364 expr_assign: expr "^^=" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 364 (expr_assign)


State 1136

  356 expr_assign: expr '=' expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 356 (expr_assign)


State 1137

  293 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 293 (expression_try_catch)


State 1138

  865 make_table_decl: "table" '<' type_declaration_no_options "end of expression" . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1309


State 1139

  864 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1310


State 1140

  863 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1311


State 1141

  470 expr: "deref" '(' expr ')' .

    $default  reduce using rule 470 (expr)


State 1142

   81 expression_with_alias: "assume" "name" '=' $@5 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1312
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1143

  311 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1313
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1144

  314 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1314
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1145

  471 expr: "addr" '(' expr ')' .

    $default  reduce using rule 471 (expr)


State 1146

  317 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1315
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1147

  502 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 502 (expr)


State 1148

  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"
  856 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options . '>' $@107 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1316
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1149

  853 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1317


State 1150

  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"
  825 make_struct_decl: "default" '<' $@94 type_declaration_no_options . '>' $@95 use_initializer

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1318
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1151

  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"
  834 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options . '>' $@97 '(' use_initializer make_struct_dim_decl ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1319
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1152

  831 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1320


State 1153

  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"
  822 make_struct_decl: "variant" '<' $@92 type_declaration_no_options . '>' $@93 '(' make_variant_dim ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1321
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1154

  222 expr_call_pipe: "generator" '<' type_declaration_no_options '>' . optional_capture_list expr_full_block_assumed_piped
  472 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  473     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 967

    $default  reduce using rule 341 (optional_capture_list)

    optional_capture_list  go to state 1322


State 1155

  344 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1323


State 1156

  504 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 504 (expr_mtag)


State 1157

  505 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 505 (expr_mtag)


State 1158

  506 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 506 (expr_mtag)


State 1159

  507 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 507 (expr_mtag)


State 1160

  508 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 508 (expr_mtag)


State 1161

  510 expr_mtag: "$c" '(' expr ')' . '(' ')'
  511          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1324


State 1162

  872 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1325
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1163

  793 optional_block: "where" expr_block .

    $default  reduce using rule 793 (optional_block)


State 1164

  780 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  781                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1326
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1165

  777 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1327
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1166

  776 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1328
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1167

  701 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  837 make_dim_decl: '[' . expr_list optional_comma ']'
  870 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  871                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 708
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 709
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    ']'                               shift, and go to state 826
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 710
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1168

  327 expr_list: expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  686 dim_list: '[' expr . ']'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ']'    shift, and go to state 827

    ']'       [reduce using rule 327 (expr_list)]
    $default  reduce using rule 327 (expr_list)


State 1169

  810 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  811                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 913
    "$f"     shift, and go to state 914
    "name"   shift, and go to state 1293

    $default  reduce using rule 792 (optional_block)

    make_struct_fields  go to state 920
    make_struct_dim     go to state 1329
    optional_block      go to state 1330


State 1170

  827 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1331
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1171

  778 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  779                   | make_struct_fields ',' . "name" ":=" expr
  782                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  783                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1332
    "name"  shift, and go to state 1333


State 1172

  787 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 914
    "name"  shift, and go to state 1293

    make_struct_fields  go to state 1334


State 1173

  808 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1174
    ",]]"  shift, and go to state 1175
    ']'    shift, and go to state 1176

    optional_trailing_delim_sqr_sqr  go to state 1335


State 1174

  801 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 801 (optional_trailing_delim_sqr_sqr)


State 1175

  802 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 802 (optional_trailing_delim_sqr_sqr)


State 1176

  800 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1336


State 1177

  809 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 809 (make_struct_decl)


State 1178

  828 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1337
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1179

  836 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 919
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple              go to state 1338
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1180

  799 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 799 (optional_trailing_semicolon_sqr_sqr)


State 1181

  798 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1339


State 1182

  838 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 838 (make_dim_decl)


State 1183

  873 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1340
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1184

  813 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 914
    "name"  shift, and go to state 1293

    make_struct_fields  go to state 920
    make_struct_dim     go to state 1341


State 1185

  812 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1342
    ";}]"                shift, and go to state 1343
    ",}]"                shift, and go to state 1344

    optional_trailing_delim_cur_sqr  go to state 1345


State 1186

  796 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1346


State 1187

  797 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 797 (optional_trailing_semicolon_cur_sqr)


State 1188

  839 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 839 (make_dim_decl)


State 1189

  875 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1347
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1190

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  829 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 829 (make_map_tuple)


State 1191

  794 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 794 (optional_trailing_semicolon_cur_cur)


State 1192

  858 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 858 (make_table)


State 1193

  253 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  256 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list . '>' $@8 expr

    "end of expression"  shift, and go to state 1284
    '>'                  shift, and go to state 1348


State 1194

  253 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  259 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list . '>' $@10 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 1284
    '>'                  shift, and go to state 1349


State 1195

   30 string_builder_body: string_builder_body "{" expr . "}"
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    "}"    shift, and go to state 1350
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784


State 1196

  874 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1351
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1197

  860 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 860 (expr_map_tuple_list)


State 1198

  861 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 861 (make_table_decl)


State 1199

  219 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  245 expressions: expressions . expression_any
  246            | expressions . error

    error                             shift, and go to state 430
    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 433
    "if"                              shift, and go to state 434
    "static_if"                       shift, and go to state 435
    "for"                             shift, and go to state 436
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "return"                          shift, and go to state 443
    "null"                            shift, and go to state 444
    "break"                           shift, and go to state 445
    "try"                             shift, and go to state 446
    "table"                           shift, and go to state 447
    "delete"                          shift, and go to state 448
    "deref"                           shift, and go to state 449
    "with"                            shift, and go to state 450
    "assume"                          shift, and go to state 451
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 454
    "continue"                        shift, and go to state 455
    "pass"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 457
    "label"                           shift, and go to state 458
    "goto"                            shift, and go to state 459
    "unsafe"                          shift, and go to state 460
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "yield"                           shift, and go to state 467
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 490
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    "end of code block"               shift, and go to state 1352
    "end of expression"               shift, and go to state 495
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder             go to state 505
    expr_reader                go to state 506
    expression_label           go to state 507
    expression_goto            go to state 508
    if_or_static_if            go to state 509
    expression_if_one_liner    go to state 510
    expression_if_then_else    go to state 511
    expression_for_loop        go to state 512
    expression_unsafe          go to state 513
    expression_while_loop      go to state 514
    expression_with            go to state 515
    expression_with_alias      go to state 516
    expr_call_pipe             go to state 517
    expression_any             go to state 518
    expr_keyword               go to state 519
    expression_keyword         go to state 520
    expr_pipe                  go to state 521
    name_in_namespace          go to state 522
    expression_delete          go to state 523
    expr_new                   go to state 524
    expression_break           go to state 525
    expression_continue        go to state 526
    expression_return_no_pipe  go to state 527
    expression_return          go to state 528
    expression_yield_no_pipe   go to state 529
    expression_yield           go to state 530
    expression_try_catch       go to state 531
    kwd_let                    go to state 532
    expression_let             go to state 533
    expr_cast                  go to state 534
    expr_type_decl             go to state 535
    expr_type_info             go to state 536
    block_or_lambda            go to state 537
    expr_full_block            go to state 538
    expr_numeric_const         go to state 539
    expr_assign                go to state 540
    expr_assign_pipe           go to state 541
    expr_named_call            go to state 542
    expr_method_call           go to state 543
    func_addr_expr             go to state 544
    expr_field                 go to state 545
    expr_call                  go to state 546
    expr                       go to state 547
    expr_mtag                  go to state 548
    basic_type_declaration     go to state 549
    make_decl                  go to state 550
    make_struct_decl           go to state 551
    make_tuple_call            go to state 552
    make_dim_decl              go to state 553
    make_table_decl            go to state 554
    array_comprehension        go to state 555


State 1200

  870 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1353
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1201

  635 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  636                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  871 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1354
    ','   shift, and go to state 841


State 1202

  837 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 837 (make_dim_decl)


State 1203

  460 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 460 (expr)


State 1204

  400 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1355
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1205

  519 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1356
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1206

  404 func_addr_expr: '@' '@' '<' $@22 . type_declaration_no_options '>' $@23 func_addr_name

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1357


State 1207

  407 func_addr_expr: '@' '@' '<' $@24 . optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1358


State 1208

   60 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1359


State 1209

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1210

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1211

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1360
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1212

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 72 (expression_if_then_else)


State 1213

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner "end of expression"
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1361
    "is"    shift, and go to state 732
    "as"    shift, and go to state 733
    "<<"    shift, and go to state 742
    ">>"    shift, and go to state 743
    "++"    shift, and go to state 744
    "--"    shift, and go to state 745
    "<="    shift, and go to state 746
    ">="    shift, and go to state 749
    "=="    shift, and go to state 750
    "!="    shift, and go to state 751
    "->"    shift, and go to state 752
    "??"    shift, and go to state 754
    "?."    shift, and go to state 755
    "?["    shift, and go to state 756
    "<|"    shift, and go to state 757
    "|>"    shift, and go to state 758
    "<<<"   shift, and go to state 760
    ">>>"   shift, and go to state 761
    "&&"    shift, and go to state 764
    "||"    shift, and go to state 765
    "^^"    shift, and go to state 766
    ".."    shift, and go to state 770
    '?'     shift, and go to state 772
    '|'     shift, and go to state 773
    '^'     shift, and go to state 774
    '&'     shift, and go to state 775
    '<'     shift, and go to state 776
    '>'     shift, and go to state 777
    '-'     shift, and go to state 778
    '+'     shift, and go to state 779
    '*'     shift, and go to state 780
    '/'     shift, and go to state 781
    '%'     shift, and go to state 782
    '.'     shift, and go to state 783
    '['     shift, and go to state 784

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1362


State 1214

  347 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "[["  shift, and go to state 967

    $default  reduce using rule 341 (optional_capture_list)

    optional_capture_list  go to state 1363


State 1215

  395 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  778 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  779                   | make_struct_fields . ',' "name" ":=" expr
  782                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  783                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1171
    ']'  shift, and go to state 1364


State 1216

  328 expr_list: expr_list ',' . expr
  396 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 1365
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1119
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1217

  417 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 417 (expr_call)


State 1218

  416 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 416 (expr_call)


State 1219

  301 tuple_expansion: "name" .

    $default  reduce using rule 301 (tuple_expansion)


State 1220

  302 tuple_expansion: tuple_expansion . ',' "name"
  303 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  305                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1366
    ']'  shift, and go to state 1367


State 1221

  302 tuple_expansion: tuple_expansion . ',' "name"
  304 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  306                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1366
    ')'  shift, and go to state 1368


State 1222

  337 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1369


State 1223

  338 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1370


State 1224

  336 capture_entry: '=' . "name"

    "name"  shift, and go to state 1371


State 1225

  335 capture_entry: '&' . "name"

    "name"  shift, and go to state 1372


State 1226

  339 capture_list: capture_entry .

    $default  reduce using rule 339 (capture_list)


State 1227

  340 capture_list: capture_list . ',' capture_entry
  342 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1373
    ']'  shift, and go to state 1374


State 1228

  345 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1375


State 1229

  478 expr: expr "is" "type" '<' . $@28 type_declaration_no_options '>' $@29

    $default  reduce using rule 476 ($@28)

    $@28  go to state 1376


State 1230

  518 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1377
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1231

  484 expr: expr "as" "type" '<' . $@30 type_declaration '>' $@31

    $default  reduce using rule 482 ($@30)

    $@30  go to state 1378


State 1232

  516 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1379
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1233

  376 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 376 (expr_assign_pipe_right)


State 1234

  374 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 374 (expr_assign_pipe_right)


State 1235

  375 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 375 (expr_assign_pipe_right)


State 1236

  397 expr_method_call: expr "->" "name" '(' . ')'
  398                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1380
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1381
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1237

  513 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1382
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1238

  463 expr: expr "?[" expr ']' .

    $default  reduce using rule 463 (expr)


State 1239

  489 expr: expr '?' "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 1383


State 1240

  517 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1384


State 1241

  486 expr: expr '?' "as" "name" .

    $default  reduce using rule 486 (expr)


State 1242

  490 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 490 (expr)


State 1243

  475 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1385
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1244

  515 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1386


State 1245

  466 expr: expr '.' "?." "name" .

    $default  reduce using rule 466 (expr)


State 1246

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  464     | expr '.' "?[" expr . ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ']'    shift, and go to state 1387


State 1247

  512 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1388
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1248

  410 expr_field: expr '.' "name" '(' . ')'
  411           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1389
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1390
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1249

  514 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1391


State 1250

  409 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 409 (expr_field)


State 1251

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  462     | expr '.' '[' expr . ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ']'    shift, and go to state 1392


State 1252

  414 expr_field: expr '.' $@26 error . $@27

    $default  reduce using rule 413 ($@27)

    $@27  go to state 1393


State 1253

  461 expr: expr '[' expr ']' .

    $default  reduce using rule 461 (expr)


State 1254

  419 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 419 (expr_call)


State 1255

  596 enum_list: enum_list "name" '=' expr "end of expression" .

    $default  reduce using rule 596 (enum_list)


State 1256

  616 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block" .

    $default  reduce using rule 616 (enum_declaration)


State 1257

  120 optional_annotation_list: '[' annotation_list ']' .
  541 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . "end of expression"

    "end of expression"  shift, and go to state 1394

    $default  reduce using rule 120 (optional_annotation_list)


State 1258

  529 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 529 (optional_public_or_private_member_variable)


State 1259

  530 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 530 (optional_public_or_private_member_variable)


State 1260

  538 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@35 function_declaration_header "end of expression"
  540                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "abstract"  shift, and go to state 1395
    "static"    shift, and go to state 1261

    $default  reduce using rule 531 (optional_static_member_variable)

    optional_static_member_variable  go to state 1396


State 1261

  532 optional_static_member_variable: "static" .

    $default  reduce using rule 532 (optional_static_member_variable)


State 1262

  533 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1397
    "sealed"    shift, and go to state 1398

    $default  reduce using rule 523 (optional_override)

    optional_override  go to state 1399


State 1263

  536 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression" .

    $default  reduce using rule 536 (struct_variable_declaration_list)


State 1264

  472 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  473     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 967

    $default  reduce using rule 341 (optional_capture_list)

    optional_capture_list  go to state 1400


State 1265

  578 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 578 (let_variable_declaration)


State 1266

  696 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 696 (type_declaration_no_options)


State 1267

  719 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 719 (type_declaration_no_options)


State 1268

  722 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57 .

    $default  reduce using rule 722 (type_declaration_no_options)


State 1269

  685 table_type_pair: type_declaration "end of expression" type_declaration .
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 685 (table_type_pair)


State 1270

  725 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 725 (type_declaration_no_options)


State 1271

  715 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 715 (type_declaration_no_options)


State 1272

  677 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 677 (bitfield_bits)


State 1273

  683 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48 .

    $default  reduce using rule 683 (bitfield_type_declaration)


State 1274

  729 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 729 (type_declaration_no_options)


State 1275

  732 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 731 ($@63)

    $@63  go to state 1401


State 1276

  736 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65 .

    $default  reduce using rule 736 (type_declaration_no_options)


State 1277

  739 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' . $@67

    $default  reduce using rule 738 ($@67)

    $@67  go to state 1402


State 1278

  743 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69 .

    $default  reduce using rule 743 (type_declaration_no_options)


State 1279

  746 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' . $@71

    $default  reduce using rule 745 ($@71)

    $@71  go to state 1403


State 1280

  549 tuple_type_list: tuple_type_list "end of expression" tuple_type .

    $default  reduce using rule 549 (tuple_type_list)


State 1281

  749 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73 .

    $default  reduce using rule 749 (type_declaration_no_options)


State 1282

  555 variant_type_list: variant_type_list "end of expression" variant_type .

    $default  reduce using rule 555 (variant_type_list)


State 1283

  752 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75 .

    $default  reduce using rule 752 (type_declaration_no_options)


State 1284

  253 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1404


State 1285

  700 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1405


State 1286

  633 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 633 (variable_name_with_pos_list)


State 1287

  636 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1406


State 1288

  564 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1407
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1289

  816 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' . $@89 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 815 ($@89)

    $@89  go to state 1408


State 1290

  819 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' . $@91 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 818 ($@91)

    $@91  go to state 1409


State 1291

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  328 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 286
    ','                    shift, and go to state 863

    expression_block  go to state 1410


State 1292

  272 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 271 ($@12)

    $@12  go to state 1411


State 1293

  776 make_struct_fields: "name" . copy_or_move expr
  777                   | "name" . ":=" expr

    "<-"  shift, and go to state 840
    ":="  shift, and go to state 1165
    '='   shift, and go to state 842

    copy_or_move  go to state 1166


State 1294

  278 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1412


State 1295

  276 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 276 (expr_new)


State 1296

  277 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 277 (expr_new)


State 1297

  275 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 275 (expr_new)


State 1298

  322 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  323               | "typeinfo" '(' name_in_namespace '<' "name" . "end of expression" "name" '>' expr ')'

    "end of expression"  shift, and go to state 1413
    '>'                  shift, and go to state 1414


State 1299

  321 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 321 (expr_type_info)


State 1300

  326 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1415


State 1301

  325 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1416


State 1302

  324 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 324 (expr_type_info)


State 1303

  320 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 319 ($@20)

    $@20  go to state 1417


State 1304

  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"
  842 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options . '>' $@99 '(' use_initializer make_struct_dim_decl ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1418
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1305

  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"
  845 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options . '>' $@101 '(' use_initializer make_struct_dim_decl ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1419
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1306

  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"
  848 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options . '>' $@103 '(' make_variant_dim ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1420
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1307

  852 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' . $@105 '(' optional_expr_list ')'

    $default  reduce using rule 851 ($@105)

    $@105  go to state 1421


State 1308

  849 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 849 (make_dim_decl)


State 1309

  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"
  865 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1422
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1310

  864 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 692
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 700
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    expr_map_tuple_list     go to state 1423
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1311

  863 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 863 (make_table_decl)


State 1312

   81 expression_with_alias: "assume" "name" '=' $@5 expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 81 (expression_with_alias)


State 1313

  311 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 310 ($@14)

    $@14  go to state 1424


State 1314

  314 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 313 ($@16)

    $@16  go to state 1425


State 1315

  317 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 316 ($@18)

    $@18  go to state 1426


State 1316

  856 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' . $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 855 ($@107)

    $@107  go to state 1427


State 1317

  853 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 853 (make_dim_decl)


State 1318

  825 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' . $@95 use_initializer

    $default  reduce using rule 824 ($@95)

    $@95  go to state 1428


State 1319

  834 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' . $@97 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 833 ($@97)

    $@97  go to state 1429


State 1320

  831 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 831 (make_tuple_call)


State 1321

  822 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' . $@93 '(' make_variant_dim ')'

    $default  reduce using rule 821 ($@93)

    $@93  go to state 1430


State 1322

  222 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list . expr_full_block_assumed_piped
  472 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  473     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1431
    '$'  shift, and go to state 503
    '@'  shift, and go to state 675

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 1432


State 1323

  344 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1433


State 1324

  510 expr_mtag: "$c" '(' expr ')' '(' . ')'
  511          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1434
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1435
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1325

  328 expr_list: expr_list . ',' expr
  872 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1436
    ','                  shift, and go to state 863


State 1326

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  780 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  781                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1437


State 1327

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  777 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 777 (make_struct_fields)


State 1328

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  776 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 776 (make_struct_fields)


State 1329

  787 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  811 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 913
    "end of expression"  shift, and go to state 1172

    $default  reduce using rule 792 (optional_block)

    optional_block  go to state 1438


State 1330

  810 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1174
    ",]]"  shift, and go to state 1175
    ']'    shift, and go to state 1176

    optional_trailing_delim_sqr_sqr  go to state 1439


State 1331

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  827 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 827 (make_tuple)


State 1332

  782 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  783                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1440


State 1333

  778 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  779                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 840
    ":="  shift, and go to state 1441
    '='   shift, and go to state 842

    copy_or_move  go to state 1442


State 1334

  778 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  779                   | make_struct_fields . ',' "name" ":=" expr
  782                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  783                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  787 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1171

    $default  reduce using rule 787 (make_struct_dim)


State 1335

  808 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 808 (make_struct_decl)


State 1336

  800 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 800 (optional_trailing_delim_sqr_sqr)


State 1337

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  828 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 828 (make_tuple)


State 1338

  828 make_tuple: make_tuple . ',' expr
  836 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1178

    $default  reduce using rule 836 (make_dim)


State 1339

  798 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 798 (optional_trailing_semicolon_sqr_sqr)


State 1340

  328 expr_list: expr_list . ',' expr
  873 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1443
    ','                  shift, and go to state 863


State 1341

  787 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  813 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 913
    "end of expression"  shift, and go to state 1172

    $default  reduce using rule 792 (optional_block)

    optional_block  go to state 1444


State 1342

  803 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1445


State 1343

  804 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 804 (optional_trailing_delim_cur_sqr)


State 1344

  805 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 805 (optional_trailing_delim_cur_sqr)


State 1345

  812 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 812 (make_struct_decl)


State 1346

  796 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 796 (optional_trailing_semicolon_cur_sqr)


State 1347

  328 expr_list: expr_list . ',' expr
  875 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1446
    ','                  shift, and go to state 863


State 1348

  256 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' . $@8 expr

    $default  reduce using rule 255 ($@8)

    $@8  go to state 1447


State 1349

  259 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' . $@10 optional_expr_list_in_braces

    $default  reduce using rule 258 ($@10)

    $@10  go to state 1448


State 1350

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1351

  328 expr_list: expr_list . ',' expr
  874 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1449
    ','                  shift, and go to state 863


State 1352

  219 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 219 (expression_block)


State 1353

  328 expr_list: expr_list . ',' expr
  870 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1450
    ','                  shift, and go to state 863


State 1354

  871 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1451
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1355

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  400 func_addr_name: "$i" '(' expr . ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1452


State 1356

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  519          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1453


State 1357

  404 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options . '>' $@23 func_addr_name
  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1454
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1358

  407 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list . optional_function_type '>' $@25 func_addr_name

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1455


State 1359

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1360

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 732
    "as"                   shift, and go to state 733
    "<<"                   shift, and go to state 742
    ">>"                   shift, and go to state 743
    "++"                   shift, and go to state 744
    "--"                   shift, and go to state 745
    "<="                   shift, and go to state 746
    ">="                   shift, and go to state 749
    "=="                   shift, and go to state 750
    "!="                   shift, and go to state 751
    "->"                   shift, and go to state 752
    "??"                   shift, and go to state 754
    "?."                   shift, and go to state 755
    "?["                   shift, and go to state 756
    "<|"                   shift, and go to state 757
    "|>"                   shift, and go to state 758
    "<<<"                  shift, and go to state 760
    ">>>"                  shift, and go to state 761
    "&&"                   shift, and go to state 764
    "||"                   shift, and go to state 765
    "^^"                   shift, and go to state 766
    ".."                   shift, and go to state 770
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 772
    '|'                    shift, and go to state 773
    '^'                    shift, and go to state 774
    '&'                    shift, and go to state 775
    '<'                    shift, and go to state 776
    '>'                    shift, and go to state 777
    '-'                    shift, and go to state 778
    '+'                    shift, and go to state 779
    '*'                    shift, and go to state 780
    '/'                    shift, and go to state 781
    '%'                    shift, and go to state 782
    '.'                    shift, and go to state 783
    '['                    shift, and go to state 784

    expression_block  go to state 1456


State 1361

   66 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 65 ($@2)

    $@2  go to state 1457


State 1362

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1458


State 1363

  347 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1459


State 1364

  395 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1460


State 1365

  396 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  837 make_dim_decl: '[' . expr_list optional_comma ']'
  870 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  871                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 708
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 709
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 914
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 915
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 710
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_fields      go to state 1461
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1366

  302 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1462


State 1367

  303 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  305                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ']'  shift, and go to state 1463


State 1368

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  306                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1464
    '&'  shift, and go to state 389

    $default  reduce using rule 570 (optional_ref)

    optional_ref  go to state 1465


State 1369

  337 capture_entry: "<-" "name" .

    $default  reduce using rule 337 (capture_entry)


State 1370

  338 capture_entry: ":=" "name" .

    $default  reduce using rule 338 (capture_entry)


State 1371

  336 capture_entry: '=' "name" .

    $default  reduce using rule 336 (capture_entry)


State 1372

  335 capture_entry: '&' "name" .

    $default  reduce using rule 335 (capture_entry)


State 1373

  340 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1222
    ":="  shift, and go to state 1223
    '='   shift, and go to state 1224
    '&'   shift, and go to state 1225

    capture_entry  go to state 1466


State 1374

  342 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1467


State 1375

  345 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1468
    "begin of code block"  shift, and go to state 286

    expression_block       go to state 1469
    block_or_simple_block  go to state 1470


State 1376

  478 expr: expr "is" "type" '<' $@28 . type_declaration_no_options '>' $@29

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1471


State 1377

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  518          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1472


State 1378

  484 expr: expr "as" "type" '<' $@30 . type_declaration '>' $@31

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1473


State 1379

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  516          | expr "as" "$f" '(' expr . ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1474


State 1380

  397 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 397 (expr_method_call)


State 1381

  328 expr_list: expr_list . ',' expr
  398 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 863
    ')'  shift, and go to state 1475


State 1382

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  513          | expr "?." "$f" '(' expr . ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1476


State 1383

  489 expr: expr '?' "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 487 ($@32)

    $@32  go to state 1477


State 1384

  517 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1478
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1385

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  475     | expr '?' expr ':' expr .
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 475 (expr)


State 1386

  515 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1479
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1387

  464 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 464 (expr)


State 1388

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr '.' "$f" '(' expr . ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1480


State 1389

  410 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 410 (expr_field)


State 1390

  328 expr_list: expr_list . ',' expr
  411 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 863
    ')'  shift, and go to state 1481


State 1391

  514 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1482
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1392

  462 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 462 (expr)


State 1393

  414 expr_field: expr '.' $@26 error $@27 .

    $default  reduce using rule 414 (expr_field)


State 1394

  541 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' "end of expression" .

    $default  reduce using rule 541 (struct_variable_declaration_list)


State 1395

  538 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@35 function_declaration_header "end of expression"

    "const"  shift, and go to state 1483

    $default  reduce using rule 526 (optional_constant)

    optional_constant  go to state 1484


State 1396

  540 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@36 function_declaration_header expression_block

    "override"  shift, and go to state 1397
    "sealed"    shift, and go to state 1398

    $default  reduce using rule 523 (optional_override)

    optional_override  go to state 1485


State 1397

  524 optional_override: "override" .

    $default  reduce using rule 524 (optional_override)


State 1398

  525 optional_override: "sealed" .

    $default  reduce using rule 525 (optional_override)


State 1399

  533 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1258
    "private"  shift, and go to state 1259

    $default  reduce using rule 528 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1486


State 1400

  472 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  473     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1431


State 1401

  732 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 732 (type_declaration_no_options)


State 1402

  739 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67 .

    $default  reduce using rule 739 (type_declaration_no_options)


State 1403

  746 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71 .

    $default  reduce using rule 746 (type_declaration_no_options)


State 1404

  253 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" type_declaration .
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 253 (type_declaration_no_options_list)


State 1405

  700 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 248 (optional_expr_list)

    string_builder          go to state 505
    expr_reader             go to state 506
    optional_expr_list      go to state 1487
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 825
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1406

  636 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 636 (variable_name_with_pos_list)


State 1407

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  564 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 564 (variable_declaration)


State 1408

  816 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1488


State 1409

  819 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1489


State 1410

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 76 (expression_for_loop)


State 1411

  272 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 272 (new_type_declaration)


State 1412

  278 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 278 (expr_new)


State 1413

  323 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" . "name" '>' expr ')'

    "name"  shift, and go to state 1490


State 1414

  322 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1491
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1415

  326 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1492


State 1416

  325 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1493
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1417

  320 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 320 (expr_type_decl)


State 1418

  842 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' . $@99 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 841 ($@99)

    $@99  go to state 1494


State 1419

  845 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' . $@101 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 844 ($@101)

    $@101  go to state 1495


State 1420

  848 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' . $@103 '(' make_variant_dim ')'

    $default  reduce using rule 847 ($@103)

    $@103  go to state 1496


State 1421

  852 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 . '(' optional_expr_list ')'

    '('  shift, and go to state 1497


State 1422

  865 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1498


State 1423

  860 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  864 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 942

    $default  reduce using rule 868 (optional_comma)

    optional_comma  go to state 1499


State 1424

  311 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1500
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1425

  314 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1501
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1426

  317 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1502
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1427

  856 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1503


State 1428

  825 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 . use_initializer

    "uninitialized"  shift, and go to state 1504

    $default  reduce using rule 806 (use_initializer)

    use_initializer  go to state 1505


State 1429

  834 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1506


State 1430

  822 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 . '(' make_variant_dim ')'

    '('  shift, and go to state 1507


State 1431

  472 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  473     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1508
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1509
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1432

  222 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped .

    $default  reduce using rule 222 (expr_call_pipe)


State 1433

  344 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1468
    "begin of code block"  shift, and go to state 286

    expression_block       go to state 1469
    block_or_simple_block  go to state 1510


State 1434

  510 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 510 (expr_mtag)


State 1435

  328 expr_list: expr_list . ',' expr
  511 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 863
    ')'  shift, and go to state 1511


State 1436

  872 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1512
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1437

  780 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  781                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 840
    ":="  shift, and go to state 1513
    '='   shift, and go to state 842

    copy_or_move  go to state 1514


State 1438

  811 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1174
    ",]]"  shift, and go to state 1175
    ']'    shift, and go to state 1176

    optional_trailing_delim_sqr_sqr  go to state 1515


State 1439

  810 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 810 (make_struct_decl)


State 1440

  782 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  783                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1516
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1441

  779 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1517
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1442

  778 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1518
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1443

  873 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1519
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1444

  813 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1342
    ";}]"                shift, and go to state 1343
    ",}]"                shift, and go to state 1344

    optional_trailing_delim_cur_sqr  go to state 1520


State 1445

  803 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 803 (optional_trailing_delim_cur_sqr)


State 1446

  875 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 692
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 1521
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1447

  256 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1522
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1448

  259 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 . optional_expr_list_in_braces

    '('  shift, and go to state 1523

    '('       [reduce using rule 250 (optional_expr_list_in_braces)]
    $default  reduce using rule 250 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1524


State 1449

  874 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 692
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 1525
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1450

  870 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1526
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1451

  328 expr_list: expr_list . ',' expr
  871 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1527
    ','                  shift, and go to state 863


State 1452

  400 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 400 (func_addr_name)


State 1453

  519 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 519 (expr_mtag)


State 1454

  404 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' . $@23 func_addr_name

    $default  reduce using rule 403 ($@23)

    $@23  go to state 1528


State 1455

  407 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type . '>' $@25 func_addr_name

    '>'  shift, and go to state 1529


State 1456

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1208
    "elif"         shift, and go to state 1209
    "static_elif"  shift, and go to state 1210

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1211
    expression_else      go to state 1530


State 1457

   66 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "return"                          shift, and go to state 1531
    "null"                            shift, and go to state 444
    "break"                           shift, and go to state 445
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "continue"                        shift, and go to state 455
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "yield"                           shift, and go to state 1532
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder             go to state 505
    expr_reader                go to state 506
    expression_if_one_liner    go to state 1533
    expression_keyword         go to state 567
    name_in_namespace          go to state 522
    expr_new                   go to state 524
    expression_break           go to state 1534
    expression_continue        go to state 1535
    expression_return_no_pipe  go to state 1536
    expression_yield_no_pipe   go to state 1537
    expr_cast                  go to state 534
    expr_type_decl             go to state 535
    expr_type_info             go to state 536
    block_or_lambda            go to state 537
    expr_full_block            go to state 538
    expr_numeric_const         go to state 539
    expr_named_call            go to state 542
    expr_method_call           go to state 543
    func_addr_expr             go to state 544
    expr_field                 go to state 545
    expr_call                  go to state 546
    expr                       go to state 1538
    expr_mtag                  go to state 548
    basic_type_declaration     go to state 549
    make_decl                  go to state 550
    make_struct_decl           go to state 551
    make_tuple_call            go to state 552
    make_dim_decl              go to state 553
    make_table_decl            go to state 554
    array_comprehension        go to state 555


State 1458

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 74 (expression_if_then_else)


State 1459

  347 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1539


State 1460

  395 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 395 (expr_named_call)


State 1461

  396 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  778 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  779                   | make_struct_fields . ',' "name" ":=" expr
  782                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  783                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1171
    ']'  shift, and go to state 1540


State 1462

  302 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 302 (tuple_expansion)


State 1463

  303 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  305                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1541
    '&'  shift, and go to state 389

    $default  reduce using rule 570 (optional_ref)

    optional_ref  go to state 1542


State 1464

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1543


State 1465

  306 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 572
    ":="  shift, and go to state 573
    '='   shift, and go to state 574

    copy_or_move_or_clone  go to state 1544


State 1466

  340 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 340 (capture_list)


State 1467

  342 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 342 (optional_capture_list)


State 1468

  330 block_or_simple_block: "=>" . expr
  331                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 1545
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1546
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1469

  329 block_or_simple_block: expression_block .

    $default  reduce using rule 329 (block_or_simple_block)


State 1470

  345 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 345 (expr_full_block)


State 1471

  478 expr: expr "is" "type" '<' $@28 type_declaration_no_options . '>' $@29
  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1547
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1472

  518 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 518 (expr_mtag)


State 1473

  484 expr: expr "as" "type" '<' $@30 type_declaration . '>' $@31
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1548


State 1474

  516 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 516 (expr_mtag)


State 1475

  398 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 398 (expr_method_call)


State 1476

  513 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 513 (expr_mtag)


State 1477

  489 expr: expr '?' "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1549


State 1478

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr '?' "as" "$f" '(' expr . ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1550


State 1479

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr '.' "?." "$f" '(' expr . ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1551


State 1480

  512 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 512 (expr_mtag)


State 1481

  411 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 411 (expr_field)


State 1482

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr '.' '.' "$f" '(' expr . ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1552


State 1483

  527 optional_constant: "const" .

    $default  reduce using rule 527 (optional_constant)


State 1484

  538 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@35 function_declaration_header "end of expression"

    $default  reduce using rule 537 ($@35)

    $@35  go to state 1553


State 1485

  540 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@36 function_declaration_header expression_block

    "const"  shift, and go to state 1483

    $default  reduce using rule 526 (optional_constant)

    optional_constant  go to state 1554


State 1486

  533 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_declaration         go to state 1555
    variable_name_with_pos_list  go to state 622


State 1487

  700 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1556


State 1488

  816 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1504

    $default  reduce using rule 806 (use_initializer)

    use_initializer  go to state 1557


State 1489

  819 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1504

    $default  reduce using rule 806 (use_initializer)

    use_initializer  go to state 1558


State 1490

  323 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" . '>' expr ')'

    '>'  shift, and go to state 1559


State 1491

  322 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1560


State 1492

  326 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1561


State 1493

  325 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1562


State 1494

  842 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1563


State 1495

  845 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1564


State 1496

  848 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 . '(' make_variant_dim ')'

    '('  shift, and go to state 1565


State 1497

  852 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 248 (optional_expr_list)

    string_builder          go to state 505
    expr_reader             go to state 506
    optional_expr_list      go to state 1566
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 825
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1498

  865 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 692
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 700
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    expr_map_tuple_list     go to state 1567
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1499

  864 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1568


State 1500

  311 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 311 (expr_cast)


State 1501

  314 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 314 (expr_cast)


State 1502

  317 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 317 (expr_cast)


State 1503

  856 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1569
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1504

  807 use_initializer: "uninitialized" .

    $default  reduce using rule 807 (use_initializer)


State 1505

  825 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer .

    $default  reduce using rule 825 (make_struct_decl)


State 1506

  834 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1504

    $default  reduce using rule 806 (use_initializer)

    use_initializer  go to state 1570


State 1507

  822 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 914
    "name"  shift, and go to state 1293

    make_struct_fields  go to state 1571
    make_variant_dim    go to state 1572


State 1508

  472 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 472 (expr)


State 1509

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  473     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1573


State 1510

  344 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 344 (expr_block)


State 1511

  511 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 511 (expr_mtag)


State 1512

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  872 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1574
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784

    $default  reduce using rule 866 (array_comprehension_where)

    array_comprehension_where  go to state 1575


State 1513

  781 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1576
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1514

  780 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1577
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1515

  811 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 811 (make_struct_decl)


State 1516

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  782 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  783                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1578


State 1517

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  779 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 779 (make_struct_fields)


State 1518

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  778 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 778 (make_struct_fields)


State 1519

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  873 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1574
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784

    $default  reduce using rule 866 (array_comprehension_where)

    array_comprehension_where  go to state 1579


State 1520

  813 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 813 (make_struct_decl)


State 1521

  875 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1574

    $default  reduce using rule 866 (array_comprehension_where)

    array_comprehension_where  go to state 1580


State 1522

  256 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 256 (expression_keyword)


State 1523

  251 optional_expr_list_in_braces: '(' . optional_expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 248 (optional_expr_list)

    string_builder          go to state 505
    expr_reader             go to state 506
    optional_expr_list      go to state 1581
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 825
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1524

  259 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces .

    $default  reduce using rule 259 (expression_keyword)


State 1525

  874 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1574

    $default  reduce using rule 866 (array_comprehension_where)

    array_comprehension_where  go to state 1582


State 1526

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  870 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1574
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784

    $default  reduce using rule 866 (array_comprehension_where)

    array_comprehension_where  go to state 1583


State 1527

  871 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1584
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1528

  404 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 950
    "name"  shift, and go to state 59

    name_in_namespace  go to state 953
    func_addr_name     go to state 1585


State 1529

  407 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' . $@25 func_addr_name

    $default  reduce using rule 406 ($@25)

    $@25  go to state 1586


State 1530

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1531

  282 expression_return_no_pipe: "return" .
  283                          | "return" . expr_list
  284                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 1587
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 282 (expression_return_no_pipe)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 642
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1532

  288 expression_yield_no_pipe: "yield" . expr
  289                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 1588
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1589
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1533

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 66 (expression_else_one_liner)


State 1534

   70 expression_if_one_liner: expression_break .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1535

   71 expression_if_one_liner: expression_continue .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1536

   68 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1537

   69 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1538

   67 expression_if_one_liner: expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 67 (expression_if_one_liner)


State 1539

  347 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1590


State 1540

  396 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1591


State 1541

  303 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1592


State 1542

  305 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 572
    ":="  shift, and go to state 573
    '='   shift, and go to state 574

    copy_or_move_or_clone  go to state 1593


State 1543

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "<-"        shift, and go to state 572
    "??"        shift, and go to state 410
    ":="        shift, and go to state 573
    '='         shift, and go to state 574
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    copy_or_move_or_clone  go to state 1594
    dim_list               go to state 416


State 1544

  306 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1595
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1545

  331 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1596
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1546

  330 block_or_simple_block: "=>" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    ".."  error (nonassociative)

    $default  reduce using rule 330 (block_or_simple_block)


State 1547

  478 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' . $@29

    $default  reduce using rule 477 ($@29)

    $@29  go to state 1597


State 1548

  484 expr: expr "as" "type" '<' $@30 type_declaration '>' . $@31

    $default  reduce using rule 483 ($@31)

    $@31  go to state 1598


State 1549

  489 expr: expr '?' "as" "type" '<' $@32 type_declaration . '>' $@33
  754 type_declaration: type_declaration . '|' type_declaration_no_options
  755                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1599


State 1550

  517 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 517 (expr_mtag)


State 1551

  515 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 515 (expr_mtag)


State 1552

  514 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 514 (expr_mtag)


State 1553

  538 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1600


State 1554

  540 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@36 function_declaration_header expression_block

    $default  reduce using rule 539 ($@36)

    $@36  go to state 1601


State 1555

  533 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 533 (structure_variable_declaration)


State 1556

  700 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 700 (type_declaration_no_options)


State 1557

  816 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 914
    "name"  shift, and go to state 1293
    '('     shift, and go to state 1602

    make_struct_fields    go to state 1603
    make_struct_dim_list  go to state 1604
    make_struct_dim_decl  go to state 1605


State 1558

  819 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 914
    "name"  shift, and go to state 1293
    '('     shift, and go to state 1602

    make_struct_fields    go to state 1603
    make_struct_dim_list  go to state 1604
    make_struct_dim_decl  go to state 1606


State 1559

  323 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1607
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1560

  322 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 322 (expr_type_info)


State 1561

  326 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1608
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1562

  325 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 325 (expr_type_info)


State 1563

  842 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1504

    $default  reduce using rule 806 (use_initializer)

    use_initializer  go to state 1609


State 1564

  845 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1504

    $default  reduce using rule 806 (use_initializer)

    use_initializer  go to state 1610


State 1565

  848 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 914
    "name"  shift, and go to state 1293

    make_struct_fields  go to state 1571
    make_variant_dim    go to state 1611


State 1566

  852 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1612


State 1567

  860 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  865 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 942

    $default  reduce using rule 868 (optional_comma)

    optional_comma  go to state 1613


State 1568

  864 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 864 (make_table_decl)


State 1569

  328 expr_list: expr_list . ',' expr
  856 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 947

    $default  reduce using rule 868 (optional_comma)

    optional_comma  go to state 1614


State 1570

  834 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 914
    "name"  shift, and go to state 1293
    '('     shift, and go to state 1602

    make_struct_fields    go to state 1603
    make_struct_dim_list  go to state 1604
    make_struct_dim_decl  go to state 1615


State 1571

  778 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  779                   | make_struct_fields . ',' "name" ":=" expr
  782                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  783                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  784 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1171

    $default  reduce using rule 784 (make_variant_dim)


State 1572

  822 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1616


State 1573

  473 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 473 (expr)


State 1574

  867 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1617


State 1575

  872 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1618


State 1576

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  781 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 781 (make_struct_fields)


State 1577

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  780 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 780 (make_struct_fields)


State 1578

  782 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  783                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 840
    ":="  shift, and go to state 1619
    '='   shift, and go to state 842

    copy_or_move  go to state 1620


State 1579

  873 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1621


State 1580

  875 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1622


State 1581

  251 optional_expr_list_in_braces: '(' optional_expr_list . optional_comma ')'

    ','  shift, and go to state 1623

    $default  reduce using rule 868 (optional_comma)

    optional_comma  go to state 1624


State 1582

  874 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1625


State 1583

  870 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1626


State 1584

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  871 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1574
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784

    $default  reduce using rule 866 (array_comprehension_where)

    array_comprehension_where  go to state 1627


State 1585

  404 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name .

    $default  reduce using rule 404 (func_addr_expr)


State 1586

  407 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 950
    "name"  shift, and go to state 59

    name_in_namespace  go to state 953
    func_addr_name     go to state 1628


State 1587

  284 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 862
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1588

  289 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1629
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1589

  288 expression_yield_no_pipe: "yield" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 288 (expression_yield_no_pipe)


State 1590

  347 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 347 (expr_full_block_assumed_piped)


State 1591

  396 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 396 (expr_named_call)


State 1592

  303 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  692 type_declaration_no_options: type_declaration_no_options . dim_list
  693                            | type_declaration_no_options . '[' ']'
  701                            | type_declaration_no_options . '-' '[' ']'
  702                            | type_declaration_no_options . "explicit"
  703                            | type_declaration_no_options . "const"
  704                            | type_declaration_no_options . '-' "const"
  705                            | type_declaration_no_options . '&'
  706                            | type_declaration_no_options . '-' '&'
  707                            | type_declaration_no_options . '#'
  708                            | type_declaration_no_options . "implicit"
  709                            | type_declaration_no_options . '-' '#'
  710                            | type_declaration_no_options . "==" "const"
  711                            | type_declaration_no_options . "==" '&'
  712                            | type_declaration_no_options . '?'
  716                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "<-"        shift, and go to state 572
    "??"        shift, and go to state 410
    ":="        shift, and go to state 573
    '='         shift, and go to state 574
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    copy_or_move_or_clone  go to state 1630
    dim_list               go to state 416


State 1593

  305 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1631
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1594

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1632
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1595

  306 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1633
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784


State 1596

  331 block_or_simple_block: "=>" "<-" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 331 (block_or_simple_block)


State 1597

  478 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29 .

    $default  reduce using rule 478 (expr)


State 1598

  484 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31 .

    $default  reduce using rule 484 (expr)


State 1599

  489 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 488 ($@33)

    $@33  go to state 1634


State 1600

  538 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1635


State 1601

  540 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1636


State 1602

  788 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 914
    "name"  shift, and go to state 1293

    make_struct_fields  go to state 1637


State 1603

  778 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  779                   | make_struct_fields . ',' "name" ":=" expr
  782                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  783                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  790 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1171

    $default  reduce using rule 790 (make_struct_dim_decl)


State 1604

  789 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  791 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1638

    $default  reduce using rule 868 (optional_comma)

    optional_comma  go to state 1639


State 1605

  816 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1640


State 1606

  819 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1641


State 1607

  323 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr . ')'
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1642


State 1608

  326 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1643


State 1609

  842 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 914
    "name"  shift, and go to state 1293
    '('     shift, and go to state 1602

    make_struct_fields    go to state 1603
    make_struct_dim_list  go to state 1604
    make_struct_dim_decl  go to state 1644


State 1610

  845 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 914
    "name"  shift, and go to state 1293
    '('     shift, and go to state 1602

    make_struct_fields    go to state 1603
    make_struct_dim_list  go to state 1604
    make_struct_dim_decl  go to state 1645


State 1611

  848 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1646


State 1612

  852 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')' .

    $default  reduce using rule 852 (make_dim_decl)


State 1613

  865 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1647


State 1614

  856 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1648


State 1615

  834 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1649


State 1616

  822 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')' .

    $default  reduce using rule 822 (make_struct_decl)


State 1617

  867 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1650
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1618

  872 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1651


State 1619

  783 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1652
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1620

  782 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1653
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1621

  873 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1654


State 1622

  875 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1655


State 1623

  869 optional_comma: ',' .

    $default  reduce using rule 869 (optional_comma)


State 1624

  251 optional_expr_list_in_braces: '(' optional_expr_list optional_comma . ')'

    ')'  shift, and go to state 1656


State 1625

  874 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 874 (array_comprehension)


State 1626

  870 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 870 (array_comprehension)


State 1627

  871 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1657


State 1628

  407 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name .

    $default  reduce using rule 407 (func_addr_expr)


State 1629

  289 expression_yield_no_pipe: "yield" "<-" expr .
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 289 (expression_yield_no_pipe)


State 1630

  303 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1658
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1631

  305 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . "end of expression"
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1659
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784


State 1632

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1660
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784


State 1633

  306 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 306 (tuple_expansion_variable_declaration)


State 1634

  489 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 489 (expr)


State 1635

  538 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression" .

    $default  reduce using rule 538 (struct_variable_declaration_list)


State 1636

  540 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1661


State 1637

  778 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  779                   | make_struct_fields . ',' "name" ":=" expr
  782                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  783                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  788 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1171
    ')'  shift, and go to state 1662


State 1638

  789 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  869 optional_comma: ',' .

    '('  shift, and go to state 1663

    $default  reduce using rule 869 (optional_comma)


State 1639

  791 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 791 (make_struct_dim_decl)


State 1640

  816 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 816 (make_struct_decl)


State 1641

  819 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 819 (make_struct_decl)


State 1642

  323 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')' .

    $default  reduce using rule 323 (expr_type_info)


State 1643

  326 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 326 (expr_type_info)


State 1644

  842 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1664


State 1645

  845 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1665


State 1646

  848 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')' .

    $default  reduce using rule 848 (make_dim_decl)


State 1647

  865 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 865 (make_table_decl)


State 1648

  856 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')' .

    $default  reduce using rule 856 (make_dim_decl)


State 1649

  834 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 834 (make_tuple_call)


State 1650

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  867 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 867 (array_comprehension_where)


State 1651

  872 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 872 (array_comprehension)


State 1652

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  783 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 783 (make_struct_fields)


State 1653

  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'
  782 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 782 (make_struct_fields)


State 1654

  873 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 873 (array_comprehension)


State 1655

  875 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 875 (array_comprehension)


State 1656

  251 optional_expr_list_in_braces: '(' optional_expr_list optional_comma ')' .

    $default  reduce using rule 251 (optional_expr_list_in_braces)


State 1657

  871 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 871 (array_comprehension)


State 1658

  303 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  397 expr_method_call: expr . "->" "name" '(' ')'
  398                 | expr . "->" "name" '(' expr_list ')'
  408 expr_field: expr . '.' "name"
  409           | expr . '.' '.' "name"
  410           | expr . '.' "name" '(' ')'
  411           | expr . '.' "name" '(' expr_list ')'
  414           | expr . '.' $@26 error $@27
  434 expr: expr . "<<" expr
  435     | expr . ">>" expr
  436     | expr . "<<<" expr
  437     | expr . ">>>" expr
  438     | expr . '+' expr
  439     | expr . '-' expr
  440     | expr . '*' expr
  441     | expr . '/' expr
  442     | expr . '%' expr
  443     | expr . '<' expr
  444     | expr . '>' expr
  445     | expr . "==" expr
  446     | expr . "!=" expr
  447     | expr . "<=" expr
  448     | expr . ">=" expr
  449     | expr . '&' expr
  450     | expr . '|' expr
  451     | expr . '^' expr
  452     | expr . "&&" expr
  453     | expr . "||" expr
  454     | expr . "^^" expr
  455     | expr . ".." expr
  458     | expr . "++"
  459     | expr . "--"
  461     | expr . '[' expr ']'
  462     | expr . '.' '[' expr ']'
  463     | expr . "?[" expr ']'
  464     | expr . '.' "?[" expr ']'
  465     | expr . "?." "name"
  466     | expr . '.' "?." "name"
  474     | expr . "??" expr
  475     | expr . '?' expr ':' expr
  478     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  479     | expr . "is" basic_type_declaration
  480     | expr . "is" "name"
  481     | expr . "as" "name"
  484     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  485     | expr . "as" basic_type_declaration
  486     | expr . '?' "as" "name"
  489     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  490     | expr . '?' "as" basic_type_declaration
  498     | expr . "<|" expr
  499     | expr . "|>" expr
  500     | expr . "|>" basic_type_declaration
  512 expr_mtag: expr . '.' "$f" '(' expr ')'
  513          | expr . "?." "$f" '(' expr ')'
  514          | expr . '.' '.' "$f" '(' expr ')'
  515          | expr . '.' "?." "$f" '(' expr ')'
  516          | expr . "as" "$f" '(' expr ')'
  517          | expr . '?' "as" "$f" '(' expr ')'
  518          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1666
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784


State 1659

  305 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 305 (tuple_expansion_variable_declaration)


State 1660

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 304 (tuple_expansion_variable_declaration)


State 1661

  540 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block .

    $default  reduce using rule 540 (struct_variable_declaration_list)


State 1662

  788 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 788 (make_struct_dim_list)


State 1663

  789 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 914
    "name"  shift, and go to state 1293

    make_struct_fields  go to state 1667


State 1664

  842 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 842 (make_dim_decl)


State 1665

  845 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 845 (make_dim_decl)


State 1666

  303 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 303 (tuple_expansion_variable_declaration)


State 1667

  778 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  779                   | make_struct_fields . ',' "name" ":=" expr
  782                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  783                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  789 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1171
    ')'  shift, and go to state 1668


State 1668

  789 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 789 (make_struct_dim_list)
