Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 320 conflicts: 1 shift/reduce
State 417 conflicts: 1 shift/reduce
State 521 conflicts: 2 shift/reduce
State 523 conflicts: 2 shift/reduce
State 632 conflicts: 1 shift/reduce
State 828 conflicts: 1 shift/reduce
State 1056 conflicts: 1 shift/reduce
State 1173 conflicts: 1 shift/reduce
State 1452 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty

   65 $@2: %empty

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner

   67 expression_if_one_liner: expr
   68                        | expression_return_no_pipe
   69                        | expression_yield_no_pipe
   70                        | expression_break
   71                        | expression_continue

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else

   73 $@3: %empty

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression"

   75 $@4: %empty

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   77 expression_unsafe: "unsafe" expression_block

   78 expression_while_loop: "while" expr expression_block

   79 expression_with: "with" expr expression_block

   80 $@5: %empty

   81 expression_with_alias: "assume" "name" '=' $@5 expr

   82 annotation_argument_value: string_constant
   83                          | "name"
   84                          | "integer constant"
   85                          | "floating point constant"
   86                          | "true"
   87                          | "false"

   88 annotation_argument_value_list: annotation_argument_value
   89                               | annotation_argument_value_list ',' annotation_argument_value

   90 annotation_argument_name: "name"
   91                         | "type"
   92                         | "in"

   93 annotation_argument: annotation_argument_name '=' string_constant
   94                    | annotation_argument_name '=' "name"
   95                    | annotation_argument_name '=' "integer constant"
   96                    | annotation_argument_name '=' "floating point constant"
   97                    | annotation_argument_name '=' "true"
   98                    | annotation_argument_name '=' "false"
   99                    | annotation_argument_name
  100                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  101 annotation_argument_list: annotation_argument
  102                         | annotation_argument_list ',' annotation_argument

  103 metadata_argument_list: '@' annotation_argument
  104                       | metadata_argument_list '@' annotation_argument
  105                       | metadata_argument_list "end of expression"

  106 annotation_declaration_name: name_in_namespace
  107                            | "require"
  108                            | "private"

  109 annotation_declaration_basic: annotation_declaration_name
  110                             | annotation_declaration_name '(' annotation_argument_list ')'

  111 annotation_declaration: annotation_declaration_basic
  112                       | '!' annotation_declaration
  113                       | annotation_declaration "&&" annotation_declaration
  114                       | annotation_declaration "||" annotation_declaration
  115                       | annotation_declaration "^^" annotation_declaration
  116                       | '(' annotation_declaration ')'
  117                       | "|>" annotation_declaration

  118 annotation_list: annotation_declaration
  119                | annotation_list ',' annotation_declaration

  120 optional_annotation_list: %empty
  121                         | '[' annotation_list ']'

  122 optional_function_argument_list: %empty
  123                                | '(' ')'
  124                                | '(' function_argument_list ')'

  125 optional_function_type: %empty
  126                       | ':' type_declaration

  127 function_name: "name"
  128              | "operator" '!'
  129              | "operator" '~'
  130              | "operator" "+="
  131              | "operator" "-="
  132              | "operator" "*="
  133              | "operator" "/="
  134              | "operator" "%="
  135              | "operator" "&="
  136              | "operator" "|="
  137              | "operator" "^="
  138              | "operator" "&&="
  139              | "operator" "||="
  140              | "operator" "^^="
  141              | "operator" "&&"
  142              | "operator" "||"
  143              | "operator" "^^"
  144              | "operator" '+'
  145              | "operator" '-'
  146              | "operator" '*'
  147              | "operator" '/'
  148              | "operator" '%'
  149              | "operator" '<'
  150              | "operator" '>'
  151              | "operator" ".."
  152              | "operator" "=="
  153              | "operator" "!="
  154              | "operator" "<="
  155              | "operator" ">="
  156              | "operator" '&'
  157              | "operator" '|'
  158              | "operator" '^'
  159              | "++" "operator"
  160              | "--" "operator"
  161              | "operator" "++"
  162              | "operator" "--"
  163              | "operator" "<<"
  164              | "operator" ">>"
  165              | "operator" "<<="
  166              | "operator" ">>="
  167              | "operator" "<<<"
  168              | "operator" ">>>"
  169              | "operator" "<<<="
  170              | "operator" ">>>="
  171              | "operator" '[' ']'
  172              | "operator" "?[" ']'
  173              | "operator" '.'
  174              | "operator" "?."
  175              | "operator" '.' "name"
  176              | "operator" '.' "name" ":="
  177              | "operator" "?." "name"
  178              | "operator" ":="
  179              | "operator" "delete"
  180              | "operator" "??"
  181              | "operator" "is"
  182              | "operator" "as"
  183              | "operator" "is" "name"
  184              | "operator" "as" "name"
  185              | "operator" '?' "as"
  186              | "operator" '?' "as" "name"
  187              | "bool"
  188              | "string"
  189              | "int"
  190              | "int2"
  191              | "int3"
  192              | "int4"
  193              | "uint"
  194              | "uint2"
  195              | "uint3"
  196              | "uint4"
  197              | "float"
  198              | "float2"
  199              | "float3"
  200              | "float4"
  201              | "range"
  202              | "urange"
  203              | "range64"
  204              | "urange64"
  205              | "int64"
  206              | "uint64"
  207              | "double"
  208              | "int8"
  209              | "uint8"
  210              | "int16"
  211              | "uint16"

  212 global_function_declaration: optional_annotation_list "def" function_declaration

  213 optional_public_or_private_function: %empty
  214                                    | "private"
  215                                    | "public"

  216 function_declaration_header: function_name optional_function_argument_list optional_function_type

  217 $@6: %empty

  218 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  219 expression_block: "begin of code block" expressions "end of code block"
  220                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  221 expr_call_pipe: expr expr_full_block_assumed_piped
  222               | expression_keyword expr_full_block_assumed_piped
  223               | "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped

  224 expression_any: "end of expression"
  225               | expr_pipe
  226               | expr_keyword
  227               | expr_assign_pipe
  228               | expr_assign "end of expression"
  229               | expression_delete "end of expression"
  230               | expression_let
  231               | expression_while_loop
  232               | expression_unsafe
  233               | expression_with
  234               | expression_with_alias
  235               | expression_for_loop
  236               | expression_break "end of expression"
  237               | expression_continue "end of expression"
  238               | expression_return
  239               | expression_yield
  240               | expression_if_then_else
  241               | expression_try_catch
  242               | expression_label "end of expression"
  243               | expression_goto "end of expression"
  244               | "pass" "end of expression"

  245 expressions: %empty
  246            | expressions expression_any
  247            | expressions error

  248 expr_keyword: "keyword" expr expression_block

  249 optional_expr_list: %empty
  250                   | expr_list optional_comma

  251 optional_expr_list_in_braces: %empty
  252                             | '(' optional_expr_list optional_comma ')'

  253 optional_expr_map_tuple_list: %empty
  254                             | expr_map_tuple_list optional_comma

  255 type_declaration_no_options_list: type_declaration
  256                                 | type_declaration_no_options_list c_or_s type_declaration

  257 $@7: %empty

  258 $@8: %empty

  259 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr

  260 $@9: %empty

  261 $@10: %empty

  262 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

  263 expr_pipe: expr_assign " <|" expr_block
  264          | "@ <|" expr_block
  265          | "@@ <|" expr_block
  266          | "$ <|" expr_block
  267          | expr_call_pipe

  268 name_in_namespace: "name"
  269                  | "name" "::" "name"
  270                  | "::" "name"

  271 expression_delete: "delete" expr
  272                  | "delete" "explicit" expr

  273 $@11: %empty

  274 $@12: %empty

  275 new_type_declaration: '<' $@11 type_declaration '>' $@12
  276                     | structure_type_declaration

  277 expr_new: "new" new_type_declaration
  278         | "new" new_type_declaration '(' use_initializer ')'
  279         | "new" new_type_declaration '(' expr_list ')'
  280         | "new" new_type_declaration '(' make_struct_single ')'
  281         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  282         | "new" make_decl

  283 expression_break: "break"

  284 expression_continue: "continue"

  285 expression_return_no_pipe: "return"
  286                          | "return" expr_list
  287                          | "return" "<-" expr_list

  288 expression_return: expression_return_no_pipe "end of expression"
  289                  | "return" expr_pipe
  290                  | "return" "<-" expr_pipe

  291 expression_yield_no_pipe: "yield" expr
  292                         | "yield" "<-" expr

  293 expression_yield: expression_yield_no_pipe "end of expression"
  294                 | "yield" expr_pipe
  295                 | "yield" "<-" expr_pipe

  296 expression_try_catch: "try" expression_block "recover" expression_block

  297 kwd_let_var_or_nothing: "let"
  298                       | "var"
  299                       | %empty

  300 kwd_let: "let"
  301        | "var"

  302 optional_in_scope: "inscope"
  303                  | %empty

  304 tuple_expansion: "name"
  305                | tuple_expansion ',' "name"

  306 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  307                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  308                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  309                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  310 expression_let: kwd_let optional_in_scope let_variable_declaration
  311               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  312 $@13: %empty

  313 $@14: %empty

  314 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  315 $@15: %empty

  316 $@16: %empty

  317 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  318 $@17: %empty

  319 $@18: %empty

  320 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  321 $@19: %empty

  322 $@20: %empty

  323 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  324 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  325               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  326               | "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  327               | "typeinfo" name_in_namespace '(' expr ')'
  328               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  329               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  330 expr_list: expr
  331          | expr_list ',' expr

  332 block_or_simple_block: expression_block
  333                      | "=>" expr
  334                      | "=>" "<-" expr

  335 block_or_lambda: '$'
  336                | '@'
  337                | '@' '@'

  338 capture_entry: '&' "name"
  339              | '=' "name"
  340              | "<-" "name"
  341              | ":=" "name"

  342 capture_list: capture_entry
  343             | capture_list ',' capture_entry

  344 optional_capture_list: %empty
  345                      | "[[" capture_list ']' ']'

  346 expr_block: expression_block
  347           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  348 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  349 $@21: %empty

  350 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  351 expr_numeric_const: "integer constant"
  352                   | "unsigned integer constant"
  353                   | "long integer constant"
  354                   | "unsigned long integer constant"
  355                   | "unsigned int8 constant"
  356                   | "floating point constant"
  357                   | "double constant"

  358 expr_assign: expr
  359            | expr '=' expr
  360            | expr "<-" expr
  361            | expr ":=" expr
  362            | expr "&=" expr
  363            | expr "|=" expr
  364            | expr "^=" expr
  365            | expr "&&=" expr
  366            | expr "||=" expr
  367            | expr "^^=" expr
  368            | expr "+=" expr
  369            | expr "-=" expr
  370            | expr "*=" expr
  371            | expr "/=" expr
  372            | expr "%=" expr
  373            | expr "<<=" expr
  374            | expr ">>=" expr
  375            | expr "<<<=" expr
  376            | expr ">>>=" expr

  377 expr_assign_pipe_right: "@ <|" expr_block
  378                       | "@@ <|" expr_block
  379                       | "$ <|" expr_block
  380                       | expr_call_pipe

  381 expr_assign_pipe: expr '=' expr_assign_pipe_right
  382                 | expr "<-" expr_assign_pipe_right
  383                 | expr "&=" expr_assign_pipe_right
  384                 | expr "|=" expr_assign_pipe_right
  385                 | expr "^=" expr_assign_pipe_right
  386                 | expr "&&=" expr_assign_pipe_right
  387                 | expr "||=" expr_assign_pipe_right
  388                 | expr "^^=" expr_assign_pipe_right
  389                 | expr "+=" expr_assign_pipe_right
  390                 | expr "-=" expr_assign_pipe_right
  391                 | expr "*=" expr_assign_pipe_right
  392                 | expr "/=" expr_assign_pipe_right
  393                 | expr "%=" expr_assign_pipe_right
  394                 | expr "<<=" expr_assign_pipe_right
  395                 | expr ">>=" expr_assign_pipe_right
  396                 | expr "<<<=" expr_assign_pipe_right
  397                 | expr ">>>=" expr_assign_pipe_right

  398 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  399                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  400 expr_method_call: expr "->" "name" '(' ')'
  401                 | expr "->" "name" '(' expr_list ')'

  402 func_addr_name: name_in_namespace
  403               | "$i" '(' expr ')'

  404 func_addr_expr: '@' '@' func_addr_name

  405 $@22: %empty

  406 $@23: %empty

  407 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name

  408 $@24: %empty

  409 $@25: %empty

  410 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

  411 expr_field: expr '.' "name"
  412           | expr '.' '.' "name"
  413           | expr '.' "name" '(' ')'
  414           | expr '.' "name" '(' expr_list ')'

  415 $@26: %empty

  416 $@27: %empty

  417 expr_field: expr '.' $@26 error $@27

  418 expr_call: name_in_namespace '(' ')'
  419          | name_in_namespace '(' make_struct_single ')'
  420          | name_in_namespace '(' expr_list ')'
  421          | basic_type_declaration '(' ')'
  422          | basic_type_declaration '(' expr_list ')'

  423 expr: "null"
  424     | name_in_namespace
  425     | expr_numeric_const
  426     | expr_reader
  427     | string_builder
  428     | make_decl
  429     | "true"
  430     | "false"
  431     | expr_field
  432     | expr_mtag
  433     | '!' expr
  434     | '~' expr
  435     | '+' expr
  436     | '-' expr
  437     | expr "<<" expr
  438     | expr ">>" expr
  439     | expr "<<<" expr
  440     | expr ">>>" expr
  441     | expr '+' expr
  442     | expr '-' expr
  443     | expr '*' expr
  444     | expr '/' expr
  445     | expr '%' expr
  446     | expr '<' expr
  447     | expr '>' expr
  448     | expr "==" expr
  449     | expr "!=" expr
  450     | expr "<=" expr
  451     | expr ">=" expr
  452     | expr '&' expr
  453     | expr '|' expr
  454     | expr '^' expr
  455     | expr "&&" expr
  456     | expr "||" expr
  457     | expr "^^" expr
  458     | expr ".." expr
  459     | "++" expr
  460     | "--" expr
  461     | expr "++"
  462     | expr "--"
  463     | '(' expr_list optional_comma ')'
  464     | expr '[' expr ']'
  465     | expr '.' '[' expr ']'
  466     | expr "?[" expr ']'
  467     | expr '.' "?[" expr ']'
  468     | expr "?." "name"
  469     | expr '.' "?." "name"
  470     | func_addr_expr
  471     | expr_call
  472     | '*' expr
  473     | "deref" '(' expr ')'
  474     | "addr" '(' expr ')'
  475     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  476     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  477     | expr "??" expr
  478     | expr '?' expr ':' expr

  479 $@28: %empty

  480 $@29: %empty

  481 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr "is" basic_type_declaration
  483     | expr "is" "name"
  484     | expr "as" "name"

  485 $@30: %empty

  486 $@31: %empty

  487 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr "as" basic_type_declaration
  489     | expr '?' "as" "name"

  490 $@32: %empty

  491 $@33: %empty

  492 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr '?' "as" basic_type_declaration
  494     | expr_type_info
  495     | expr_type_decl
  496     | expr_cast
  497     | expr_new
  498     | expr_method_call
  499     | expr_named_call
  500     | expr_full_block
  501     | expr "<|" expr
  502     | expr "|>" expr
  503     | expr "|>" basic_type_declaration
  504     | name_in_namespace "name"
  505     | "unsafe" '(' expr ')'
  506     | expression_keyword

  507 expr_mtag: "$$" '(' expr ')'
  508          | "$i" '(' expr ')'
  509          | "$v" '(' expr ')'
  510          | "$b" '(' expr ')'
  511          | "$a" '(' expr ')'
  512          | "..."
  513          | "$c" '(' expr ')' '(' ')'
  514          | "$c" '(' expr ')' '(' expr_list ')'
  515          | expr '.' "$f" '(' expr ')'
  516          | expr "?." "$f" '(' expr ')'
  517          | expr '.' '.' "$f" '(' expr ')'
  518          | expr '.' "?." "$f" '(' expr ')'
  519          | expr "as" "$f" '(' expr ')'
  520          | expr '?' "as" "$f" '(' expr ')'
  521          | expr "is" "$f" '(' expr ')'
  522          | '@' '@' "$c" '(' expr ')'

  523 optional_field_annotation: %empty
  524                          | "[[" annotation_argument_list ']' ']'
  525                          | metadata_argument_list

  526 optional_override: %empty
  527                  | "override"
  528                  | "sealed"

  529 optional_constant: %empty
  530                  | "const"

  531 optional_public_or_private_member_variable: %empty
  532                                           | "public"
  533                                           | "private"

  534 optional_static_member_variable: %empty
  535                                | "static"

  536 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  537 struct_variable_declaration_list: %empty

  538 $@34: %empty

  539 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression"

  540 $@35: %empty

  541 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"

  542 $@36: %empty

  543 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  544                                 | struct_variable_declaration_list '[' annotation_list ']' "end of expression"

  545 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  546                              | "$a" '(' expr ')'

  547 function_argument_list: function_argument_declaration
  548                       | function_argument_list "end of expression" function_argument_declaration

  549 tuple_type: type_declaration
  550           | "name" ':' type_declaration

  551 tuple_type_list: tuple_type
  552                | tuple_type_list c_or_s tuple_type

  553 tuple_alias_type_list: %empty
  554                      | tuple_alias_type_list c_or_s
  555                      | tuple_alias_type_list tuple_type c_or_s

  556 variant_type: "name" ':' type_declaration

  557 variant_type_list: variant_type
  558                  | variant_type_list c_or_s variant_type

  559 variant_alias_type_list: %empty
  560                        | variant_alias_type_list c_or_s
  561                        | variant_alias_type_list variant_type c_or_s

  562 copy_or_move: '='
  563             | "<-"

  564 variable_declaration: variable_name_with_pos_list
  565                     | variable_name_with_pos_list '&'
  566                     | variable_name_with_pos_list ':' type_declaration
  567                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  568                     | variable_name_with_pos_list copy_or_move expr
  569                     | variable_name_with_pos_list copy_or_move expr_pipe

  570 copy_or_move_or_clone: '='
  571                      | "<-"
  572                      | ":="

  573 optional_ref: %empty
  574             | '&'

  575 let_variable_name_with_pos_list: "name"
  576                                | "$i" '(' expr ')'
  577                                | "name" "aka" "name"
  578                                | let_variable_name_with_pos_list ',' "name"
  579                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  580 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  581                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  582                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  583                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  584                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  585 global_variable_declaration_list: %empty

  586 $@37: %empty

  587 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration

  588 optional_shared: %empty
  589                | "shared"

  590 optional_public_or_private_variable: %empty
  591                                    | "private"
  592                                    | "public"

  593 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  594 $@38: %empty

  595 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

  596 enum_list: %empty
  597          | enum_list "end of expression"
  598          | enum_list "name" "end of expression"
  599          | enum_list "name" '=' expr "end of expression"

  600 optional_public_or_private_alias: %empty
  601                                 | "private"
  602                                 | "public"

  603 $@39: %empty

  604 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration

  605 alias_list: single_alias "end of expression"
  606           | alias_list single_alias "end of expression"

  607 alias_declaration: "typedef" "begin of code block" alias_list "end of code block"

  608 $@40: %empty

  609 alias_declaration: "typedef" $@40 single_alias "end of expression"

  610 optional_public_or_private_enum: %empty
  611                                | "private"
  612                                | "public"

  613 enum_name: "name"

  614 $@41: %empty

  615 $@42: %empty

  616 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"

  617 $@43: %empty

  618 $@44: %empty

  619 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

  620 optional_structure_parent: %empty
  621                          | ':' name_in_namespace

  622 optional_sealed: %empty
  623                | "sealed"

  624 structure_name: optional_sealed "name" optional_structure_parent

  625 class_or_struct: "class"
  626                | "struct"

  627 optional_public_or_private_structure: %empty
  628                                     | "private"
  629                                     | "public"

  630 optional_struct_variable_declaration_list: %empty
  631                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  632 $@45: %empty

  633 $@46: %empty

  634 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

  635 variable_name_with_pos_list: "name"
  636                            | "$i" '(' expr ')'
  637                            | "name" "aka" "name"
  638                            | variable_name_with_pos_list ',' "name"
  639                            | variable_name_with_pos_list ',' "name" "aka" "name"

  640 basic_type_declaration: "bool"
  641                       | "string"
  642                       | "int"
  643                       | "int8"
  644                       | "int16"
  645                       | "int64"
  646                       | "int2"
  647                       | "int3"
  648                       | "int4"
  649                       | "uint"
  650                       | "uint8"
  651                       | "uint16"
  652                       | "uint64"
  653                       | "uint2"
  654                       | "uint3"
  655                       | "uint4"
  656                       | "float"
  657                       | "float2"
  658                       | "float3"
  659                       | "float4"
  660                       | "void"
  661                       | "range"
  662                       | "urange"
  663                       | "range64"
  664                       | "urange64"
  665                       | "double"
  666                       | "bitfield"

  667 enum_basic_type_declaration: "int"
  668                            | "int8"
  669                            | "int16"
  670                            | "uint"
  671                            | "uint8"
  672                            | "uint16"
  673                            | "int64"
  674                            | "uint64"

  675 structure_type_declaration: name_in_namespace

  676 auto_type_declaration: "auto"
  677                      | "auto" '(' "name" ')'
  678                      | "$t" '(' expr ')'

  679 bitfield_bits: "name"
  680              | bitfield_bits "end of expression" "name"

  681 bitfield_alias_bits: %empty
  682                    | bitfield_alias_bits "end of expression"
  683                    | bitfield_alias_bits "name" "end of expression"

  684 $@47: %empty

  685 $@48: %empty

  686 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48

  687 c_or_s: ','
  688       | "end of expression"

  689 table_type_pair: type_declaration
  690                | type_declaration c_or_s type_declaration

  691 dim_list: '[' expr ']'
  692         | dim_list '[' expr ']'

  693 type_declaration_no_options: basic_type_declaration
  694                            | auto_type_declaration
  695                            | bitfield_type_declaration
  696                            | structure_type_declaration
  697                            | type_declaration_no_options dim_list
  698                            | type_declaration_no_options '[' ']'

  699 $@49: %empty

  700 $@50: %empty

  701 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50
  702                            | "typedecl" '(' expr ')'
  703                            | '$' name_in_namespace '(' optional_expr_list ')'

  704 $@51: %empty

  705 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  706                            | type_declaration_no_options '-' '[' ']'
  707                            | type_declaration_no_options "explicit"
  708                            | type_declaration_no_options "const"
  709                            | type_declaration_no_options '-' "const"
  710                            | type_declaration_no_options '&'
  711                            | type_declaration_no_options '-' '&'
  712                            | type_declaration_no_options '#'
  713                            | type_declaration_no_options "implicit"
  714                            | type_declaration_no_options '-' '#'
  715                            | type_declaration_no_options "==" "const"
  716                            | type_declaration_no_options "==" '&'
  717                            | type_declaration_no_options '?'

  718 $@52: %empty

  719 $@53: %empty

  720 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53
  721                            | type_declaration_no_options "??"

  722 $@54: %empty

  723 $@55: %empty

  724 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55

  725 $@56: %empty

  726 $@57: %empty

  727 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57

  728 $@58: %empty

  729 $@59: %empty

  730 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59
  731                            | "block"

  732 $@60: %empty

  733 $@61: %empty

  734 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61

  735 $@62: %empty

  736 $@63: %empty

  737 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63
  738                            | "function"

  739 $@64: %empty

  740 $@65: %empty

  741 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65

  742 $@66: %empty

  743 $@67: %empty

  744 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67
  745                            | "lambda"

  746 $@68: %empty

  747 $@69: %empty

  748 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69

  749 $@70: %empty

  750 $@71: %empty

  751 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71

  752 $@72: %empty

  753 $@73: %empty

  754 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73

  755 $@74: %empty

  756 $@75: %empty

  757 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75

  758 type_declaration: type_declaration_no_options
  759                 | type_declaration '|' type_declaration_no_options
  760                 | type_declaration '|' '#'

  761 $@76: %empty

  762 $@77: %empty

  763 $@78: %empty

  764 $@79: %empty

  765 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

  766 $@80: %empty

  767 $@81: %empty

  768 $@82: %empty

  769 $@83: %empty

  770 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

  771 $@84: %empty

  772 $@85: %empty

  773 $@86: %empty

  774 $@87: %empty

  775 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

  776 make_decl: make_struct_decl
  777          | make_dim_decl
  778          | make_table_decl
  779          | array_comprehension
  780          | make_tuple_call

  781 make_struct_fields: "name" copy_or_move expr
  782                   | "name" ":=" expr
  783                   | make_struct_fields ',' "name" copy_or_move expr
  784                   | make_struct_fields ',' "name" ":=" expr
  785                   | "$f" '(' expr ')' copy_or_move expr
  786                   | "$f" '(' expr ')' ":=" expr
  787                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  789 make_variant_dim: make_struct_fields

  790 make_struct_single: make_struct_fields

  791 make_struct_dim: make_struct_fields
  792                | make_struct_dim "end of expression" make_struct_fields

  793 make_struct_dim_list: '(' make_struct_fields ')'
  794                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  795 make_struct_dim_decl: make_struct_fields
  796                     | make_struct_dim_list optional_comma

  797 optional_make_struct_dim_decl: make_struct_dim_decl
  798                              | %empty

  799 optional_block: %empty
  800               | "where" expr_block

  801 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  802                                    | ";}}"

  803 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  804                                    | ";}]"

  805 optional_trailing_semicolon_sqr_sqr: ']' ']'
  806                                    | ";]]"

  807 optional_trailing_delim_sqr_sqr: ']' ']'
  808                                | ";]]"
  809                                | ",]]"

  810 optional_trailing_delim_cur_sqr: "end of code block" ']'
  811                                | ";}]"
  812                                | ",}]"

  813 use_initializer: %empty
  814                | "uninitialized"

  815 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  816                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  817                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  818                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  819                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  820                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  821 $@88: %empty

  822 $@89: %empty

  823 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

  824 $@90: %empty

  825 $@91: %empty

  826 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

  827 $@92: %empty

  828 $@93: %empty

  829 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

  830 $@94: %empty

  831 $@95: %empty

  832 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer

  833 make_tuple: expr
  834           | expr "=>" expr
  835           | make_tuple ',' expr

  836 make_map_tuple: expr "=>" expr
  837               | expr

  838 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  839 $@96: %empty

  840 $@97: %empty

  841 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

  842 make_dim: make_tuple
  843         | make_dim "end of expression" make_tuple

  844 make_dim_decl: '[' expr_list optional_comma ']'
  845              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  846              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  847 $@98: %empty

  848 $@99: %empty

  849 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

  850 $@100: %empty

  851 $@101: %empty

  852 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

  853 $@102: %empty

  854 $@103: %empty

  855 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'
  856              | "array" '(' expr_list optional_comma ')'

  857 $@104: %empty

  858 $@105: %empty

  859 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'
  860              | "fixed_array" '(' expr_list optional_comma ')'

  861 $@106: %empty

  862 $@107: %empty

  863 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

  864 make_table: make_map_tuple
  865           | make_table "end of expression" make_map_tuple

  866 expr_map_tuple_list: make_map_tuple
  867                    | expr_map_tuple_list ',' make_map_tuple

  868 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  869                | "{{" make_table optional_trailing_semicolon_cur_cur
  870                | "table" '(' optional_expr_map_tuple_list ')'
  871                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  872                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  873 array_comprehension_where: %empty
  874                          | "end of expression" "where" expr

  875 optional_comma: %empty
  876               | ','

  877 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  878                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  879                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  880                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  881                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  882                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 112 128 433
    '#' (35) 712 714 760
    '$' (36) 20 335 703 705
    '%' (37) 35 42 148 445
    '&' (38) 156 338 452 565 574 710 711 716
    '(' (40) 100 110 116 123 124 252 278 279 280 281 307 309 324 325 326 327 328 329 398 399 400 401 403 413 414 418 419 420 421 422 463 473 474 475 476 505 507 508 509 510 511 513 514 515 516 517 518 519 520 521 522 546 576 636 677 678 702 703 705 785 786 787 788 793 794 817 818 820 823 826 829 838 841 849 852 855 856 859 860 863 870 871 872
    ')' (41) 100 110 116 123 124 252 278 279 280 281 307 309 324 325 326 327 328 329 398 399 400 401 403 413 414 418 419 420 421 422 463 473 474 475 476 505 507 508 509 510 511 513 514 515 516 517 518 519 520 521 522 546 576 636 677 678 702 703 705 785 786 787 788 793 794 817 818 820 823 826 829 838 841 849 852 855 856 859 860 863 870 871 872
    '*' (42) 146 443 472
    '+' (43) 144 435 441
    ',' (44) 51 89 102 119 305 331 343 399 578 579 638 639 687 783 784 787 788 794 835 867 876
    '-' (45) 145 436 442 706 709 711 714
    '.' (46) 43 173 175 176 411 412 413 414 417 465 467 469 515 517 518
    '/' (47) 44 147 444
    ':' (58) 53 54 126 306 307 478 550 556 566 567 580 581 582 619 621
    "end of expression" (59) 15 16 74 105 224 228 229 236 237 242 243 244 288 293 306 307 308 309 329 539 541 544 548 580 581 583 597 598 599 605 606 609 680 682 683 688 792 843 865 874 877 878 879 880 881 882
    '<' (60) 149 223 259 262 275 314 317 320 323 325 326 328 329 407 410 446 475 476 481 487 492 686 701 705 720 724 727 730 734 737 741 744 748 751 754 757 823 826 829 832 841 849 852 855 859 863 871 872
    '=' (61) 81 93 94 95 96 97 98 100 339 359 381 562 570 599 604
    '>' (62) 150 223 259 262 275 314 317 320 323 325 326 328 329 407 410 447 475 476 481 487 492 686 701 705 720 724 727 730 734 737 741 744 748 751 754 757 823 826 829 832 841 849 852 855 859 863 871 872
    '?' (63) 185 186 478 489 492 493 520 717
    '@' (64) 103 104 336 337 404 407 410 522
    '[' (91) 121 171 398 399 464 465 544 691 692 698 706 844 877 878
    ']' (93) 121 171 172 306 308 345 398 399 464 465 466 467 524 544 691 692 698 706 803 805 807 810 844 877 878 879 880
    '^' (94) 158 454
    "begin of code block" (123) 219 220 593 607 616 619 631 765 770 775 868 881
    '|' (124) 157 453 759 760
    "end of code block" (125) 219 220 593 607 616 619 631 765 770 775 801 803 810 868 880 881 882
    '~' (126) 129 434
    error (256) 247 417
    "lexer error" (258)
    "struct" (259) 626 823 849
    "class" (260) 625 826
    "let" (261) 297 300
    "def" (262) 212 541 543
    "while" (263) 78
    "if" (264) 62 74
    "static_if" (265) 63
    "else" (266) 60 66
    "for" (267) 76 877 878 879 880 881 882
    "recover" (268) 296
    "true" (269) 86 97 429
    "false" (270) 87 98 430
    "new" (271) 277 278 279 280 281 282
    "typeinfo" (272) 324 325 326 327 328 329
    "type" (273) 91 323 481 487 492 701
    "in" (274) 76 92 877 878 879 880 881 882
    "is" (275) 181 183 481 482 483 521
    "as" (276) 46 182 184 185 186 484 487 488 489 492 493 519 520
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 724 849 852 855 856 859
    "return" (280) 285 286 287 289 290
    "null" (281) 423
    "break" (282) 283
    "try" (283) 296
    "options" (284) 36
    "table" (285) 727 870 871 872
    "expect" (286) 49
    "const" (287) 530 708 709 715
    "require" (288) 37 107
    "operator" (289) 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186
    "enum" (290) 616 619
    "finally" (291) 220
    "delete" (292) 179 271 272
    "deref" (293) 473
    "typedef" (294) 607 609
    "typedecl" (295) 702
    "with" (296) 79
    "aka" (297) 577 579 637 639
    "assume" (298) 81
    "cast" (299) 314
    "override" (300) 527
    "abstract" (301) 541
    "upcast" (302) 317
    "iterator" (303) 730 878
    "var" (304) 298 301
    "addr" (305) 474
    "continue" (306) 284
    "where" (307) 800 874
    "pass" (308) 244
    "reinterpret" (309) 320
    "module" (310) 22
    "public" (311) 18 48 215 532 592 602 612 629
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 713
    "explicit" (315) 272 707
    "shared" (316) 589
    "private" (317) 19 108 214 533 591 601 611 628
    "smart_ptr" (318) 720
    "unsafe" (319) 77 505
    "inscope" (320) 302
    "static" (321) 535
    "fixed_array" (322) 860 863
    "default" (323) 832
    "uninitialized" (324) 281 814
    "bool" (325) 187 640
    "void" (326) 660
    "string" (327) 188 641
    "auto" (328) 676 677
    "int" (329) 189 642 667
    "int2" (330) 190 646
    "int3" (331) 191 647
    "int4" (332) 192 648
    "uint" (333) 193 649 670
    "bitfield" (334) 666 686 775
    "uint2" (335) 194 653
    "uint3" (336) 195 654
    "uint4" (337) 196 655
    "float" (338) 197 656
    "float2" (339) 198 657
    "float3" (340) 199 658
    "float4" (341) 200 659
    "range" (342) 201 661
    "urange" (343) 202 662
    "range64" (344) 203 663
    "urange64" (345) 204 664
    "block" (346) 731 734 737
    "int64" (347) 205 645 673
    "uint64" (348) 206 652 674
    "double" (349) 207 665
    "function" (350) 738 741 744
    "lambda" (351) 745 748 751
    "int8" (352) 208 643 668
    "uint8" (353) 209 650 671
    "int16" (354) 210 644 669
    "uint16" (355) 211 651 672
    "tuple" (356) 754 765 838 841 852
    "variant" (357) 757 770 829 855
    "generator" (358) 223 475 476
    "yield" (359) 291 292 294 295
    "sealed" (360) 528 623
    "+=" (361) 130 368 389
    "-=" (362) 131 369 390
    "/=" (363) 133 371 392
    "*=" (364) 132 370 391
    "%=" (365) 134 372 393
    "&=" (366) 135 362 383
    "|=" (367) 136 363 384
    "^=" (368) 137 364 385
    "<<" (369) 163 437
    ">>" (370) 164 438
    "++" (371) 159 161 459 461
    "--" (372) 160 162 460 462
    "<=" (373) 154 450
    "<<=" (374) 165 373 394
    ">>=" (375) 166 374 395
    ">=" (376) 155 451
    "==" (377) 152 448 715 716
    "!=" (378) 153 449
    "->" (379) 400 401
    "<-" (380) 287 290 292 295 334 340 360 382 563 571
    "??" (381) 180 477 721
    "?." (382) 174 177 468 469 516 518
    "?[" (383) 172 466 467
    "<|" (384) 501
    " <|" (385) 263
    "$ <|" (386) 266 379
    "@ <|" (387) 264 377
    "@@ <|" (388) 265 378
    "|>" (389) 117 502 503
    ":=" (390) 176 178 341 361 572 782 784 786 788
    "<<<" (391) 167 439
    ">>>" (392) 168 440
    "<<<=" (393) 169 375 396
    ">>>=" (394) 170 376 397
    "=>" (395) 333 334 834 836
    "::" (396) 269 270
    "&&" (397) 113 141 455
    "||" (398) 114 142 456
    "^^" (399) 115 143 457
    "&&=" (400) 138 365 386
    "||=" (401) 139 366 387
    "^^=" (402) 140 367 388
    ".." (403) 151 458
    "$$" (404) 507
    "$i" (405) 403 508 576 636
    "$v" (406) 509
    "$b" (407) 510
    "$a" (408) 511 546
    "$t" (409) 678
    "$c" (410) 513 514 522
    "$f" (411) 515 516 517 518 519 520 521 785 786 787 788
    "..." (412) 512
    "[[" (413) 306 308 345 524 815 816 817 818 845 879
    "[{" (414) 819 820 846 880
    "{{" (415) 869 882
    "integer constant" <i> (416) 52 53 54 55 84 95 351
    "long integer constant" <i64> (417) 353
    "unsigned integer constant" <ui> (418) 352
    "unsigned long integer constant" <ui64> (419) 354
    "unsigned int8 constant" <ui> (420) 355
    "floating point constant" <fd> (421) 85 96 356
    "double constant" <d> (422) 357
    "name" <s> (423) 21 38 46 81 83 90 94 127 175 176 177 183 184 186 268 269 270 304 305 325 326 328 329 338 339 340 341 400 401 411 412 413 414 468 469 483 484 489 504 550 556 575 577 578 579 598 599 604 613 624 635 637 638 639 677 679 680 683 765 770 775 781 782 783 784
    "keyword" <s> (424) 39 248 259
    "type function" <s> (425) 40 262
    "start of the string" (426) 27 31
    STRING_CHARACTER <ch> (427) 23 25 32 33
    STRING_CHARACTER_ESC (428) 24 26
    "end of the string" (429) 27 31
    "{" (430) 30
    "}" (431) 30
    "end of failed eader macro" (432)
    ";}}" (433) 802
    ";}]" (434) 804 811
    ";]]" (435) 806 808
    ",]]" (436) 809
    ",}]" (437) 812
    UNARY_MINUS (438)
    UNARY_PLUS (439)
    PRE_INC (440)
    PRE_DEC (441)
    POST_INC (442)
    POST_DEC (443)
    DEREF (444)


Nonterminals, with rules where they appear

    $accept (217)
        on left: 0
    program (218)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (219)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (220)
        on left: 17 18 19
        on right: 22
    module_name <s> (221)
        on left: 20 21
        on right: 22
    module_declaration (222)
        on left: 22
        on right: 2
    character_sequence <s> (223)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (224)
        on left: 27
        on right: 82 93
    string_builder_body <pExpression> (225)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (226)
        on left: 31
        on right: 427
    reader_character_sequence (227)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (228)
        on left: 35
        on right: 16 426
    $@1 (229)
        on left: 34
        on right: 35
    options_declaration (230)
        on left: 36
        on right: 9
    require_declaration (231)
        on left: 37
        on right: 8
    keyword_or_name <s> (232)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (233)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (234)
        on left: 45 46
        on right: 37
    is_public_module <b> (235)
        on left: 47 48
        on right: 45 46
    expect_declaration (236)
        on left: 49
        on right: 7
    expect_list (237)
        on left: 50 51
        on right: 49 51
    expect_error (238)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (239)
        on left: 54
        on right: 242
    expression_goto <pExpression> (240)
        on left: 55 56
        on right: 243
    elif_or_static_elif <b> (241)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (242)
        on left: 59 60 61
        on right: 61 72
    if_or_static_if <b> (243)
        on left: 62 63
        on right: 72
    expression_else_one_liner <pExpression> (244)
        on left: 64 66
        on right: 74
    $@2 (245)
        on left: 65
        on right: 66
    expression_if_one_liner <pExpression> (246)
        on left: 67 68 69 70 71
        on right: 66 74
    expression_if_then_else <pExpression> (247)
        on left: 72 74
        on right: 240
    $@3 (248)
        on left: 73
        on right: 74
    expression_for_loop <pExpression> (249)
        on left: 76
        on right: 235
    $@4 (250)
        on left: 75
        on right: 76
    expression_unsafe <pExpression> (251)
        on left: 77
        on right: 232
    expression_while_loop <pExpression> (252)
        on left: 78
        on right: 231
    expression_with <pExpression> (253)
        on left: 79
        on right: 233
    expression_with_alias <pExpression> (254)
        on left: 81
        on right: 234
    $@5 (255)
        on left: 80
        on right: 81
    annotation_argument_value <aa> (256)
        on left: 82 83 84 85 86 87
        on right: 88 89
    annotation_argument_value_list <aaList> (257)
        on left: 88 89
        on right: 89 100
    annotation_argument_name <s> (258)
        on left: 90 91 92
        on right: 93 94 95 96 97 98 99 100
    annotation_argument <aa> (259)
        on left: 93 94 95 96 97 98 99 100
        on right: 101 102 103 104
    annotation_argument_list <aaList> (260)
        on left: 101 102
        on right: 36 102 110 524
    metadata_argument_list <aaList> (261)
        on left: 103 104 105
        on right: 104 105 525
    annotation_declaration_name <s> (262)
        on left: 106 107 108
        on right: 109 110
    annotation_declaration_basic <fa> (263)
        on left: 109 110
        on right: 111
    annotation_declaration <fa> (264)
        on left: 111 112 113 114 115 116 117
        on right: 112 113 114 115 116 117 118 119
    annotation_list <faList> (265)
        on left: 118 119
        on right: 119 121 544
    optional_annotation_list <faList> (266)
        on left: 120 121
        on right: 212 347 348 350 541 543 616 619 634
    optional_function_argument_list <pVarDeclList> (267)
        on left: 122 123 124
        on right: 216 347 348 350 410 737 744 751
    optional_function_type <pTypeDecl> (268)
        on left: 125 126
        on right: 216 347 348 350 410 737 744 751
    function_name <s> (269)
        on left: 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211
        on right: 216
    global_function_declaration (270)
        on left: 212
        on right: 6
    optional_public_or_private_function <b> (271)
        on left: 213 214 215
        on right: 218
    function_declaration_header <pFuncDecl> (272)
        on left: 216
        on right: 218 541 543
    function_declaration <pFuncDecl> (273)
        on left: 218
        on right: 212
    $@6 (274)
        on left: 217
        on right: 218
    expression_block <pExpression> (275)
        on left: 219 220
        on right: 60 61 72 76 77 78 79 218 248 296 332 346 350 543
    expr_call_pipe <pExpression> (276)
        on left: 221 222 223
        on right: 267 380
    expression_any <pExpression> (277)
        on left: 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244
        on right: 246
    expressions <pExpression> (278)
        on left: 245 246 247
        on right: 219 220 246 247
    expr_keyword <pExpression> (279)
        on left: 248
        on right: 226
    optional_expr_list <pExpression> (280)
        on left: 249 250
        on right: 252 703 705 859
    optional_expr_list_in_braces <pExpression> (281)
        on left: 251 252
        on right: 262
    optional_expr_map_tuple_list <pExpression> (282)
        on left: 253 254
        on right: 870 871 872
    type_declaration_no_options_list <pTypeDeclList> (283)
        on left: 255 256
        on right: 256 259 262 705
    expression_keyword <pExpression> (284)
        on left: 259 262
        on right: 222 506
    $@7 (285)
        on left: 257
        on right: 259
    $@8 (286)
        on left: 258
        on right: 259
    $@9 (287)
        on left: 260
        on right: 262
    $@10 (288)
        on left: 261
        on right: 262
    expr_pipe <pExpression> (289)
        on left: 263 264 265 266 267
        on right: 225 289 290 294 295 569 582 584
    name_in_namespace <s> (290)
        on left: 268 269 270
        on right: 35 106 324 325 326 327 328 329 398 399 402 418 419 420 424 504 621 675 703 705
    expression_delete <pExpression> (291)
        on left: 271 272
        on right: 229
    new_type_declaration <pTypeDecl> (292)
        on left: 275 276
        on right: 277 278 279 280 281
    $@11 (293)
        on left: 273
        on right: 275
    $@12 (294)
        on left: 274
        on right: 275
    expr_new <pExpression> (295)
        on left: 277 278 279 280 281 282
        on right: 497
    expression_break <pExpression> (296)
        on left: 283
        on right: 70 236
    expression_continue <pExpression> (297)
        on left: 284
        on right: 71 237
    expression_return_no_pipe <pExpression> (298)
        on left: 285 286 287
        on right: 68 288
    expression_return <pExpression> (299)
        on left: 288 289 290
        on right: 238
    expression_yield_no_pipe <pExpression> (300)
        on left: 291 292
        on right: 69 293
    expression_yield <pExpression> (301)
        on left: 293 294 295
        on right: 239
    expression_try_catch <pExpression> (302)
        on left: 296
        on right: 241
    kwd_let_var_or_nothing <b> (303)
        on left: 297 298 299
        on right: 545
    kwd_let <b> (304)
        on left: 300 301
        on right: 310 311 593 595
    optional_in_scope <b> (305)
        on left: 302 303
        on right: 310 311
    tuple_expansion <pNameList> (306)
        on left: 304 305
        on right: 305 306 307 308 309
    tuple_expansion_variable_declaration <pVarDecl> (307)
        on left: 306 307 308 309
        on right: 311
    expression_let <pExpression> (308)
        on left: 310 311
        on right: 230
    expr_cast <pExpression> (309)
        on left: 314 317 320
        on right: 496
    $@13 (310)
        on left: 312
        on right: 314
    $@14 (311)
        on left: 313
        on right: 314
    $@15 (312)
        on left: 315
        on right: 317
    $@16 (313)
        on left: 316
        on right: 317
    $@17 (314)
        on left: 318
        on right: 320
    $@18 (315)
        on left: 319
        on right: 320
    expr_type_decl <pExpression> (316)
        on left: 323
        on right: 495
    $@19 (317)
        on left: 321
        on right: 323
    $@20 (318)
        on left: 322
        on right: 323
    expr_type_info <pExpression> (319)
        on left: 324 325 326 327 328 329
        on right: 494
    expr_list <pExpression> (320)
        on left: 330 331
        on right: 76 250 279 286 287 331 399 401 414 420 422 463 514 838 844 856 860 863 877 878 879 880 881 882
    block_or_simple_block <pExpression> (321)
        on left: 332 333 334
        on right: 347 348
    block_or_lambda <i> (322)
        on left: 335 336 337
        on right: 347 348 350
    capture_entry <pCapt> (323)
        on left: 338 339 340 341
        on right: 342 343
    capture_list <pCaptList> (324)
        on left: 342 343
        on right: 343 345
    optional_capture_list <pCaptList> (325)
        on left: 344 345
        on right: 223 347 348 350 475 476
    expr_block <pExpression> (326)
        on left: 346 347
        on right: 263 264 265 266 377 378 379 800
    expr_full_block <pExpression> (327)
        on left: 348
        on right: 500
    expr_full_block_assumed_piped <pExpression> (328)
        on left: 350
        on right: 221 222 223
    $@21 (329)
        on left: 349
        on right: 350
    expr_numeric_const <pExpression> (330)
        on left: 351 352 353 354 355 356 357
        on right: 425
    expr_assign <pExpression> (331)
        on left: 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376
        on right: 228 263
    expr_assign_pipe_right <pExpression> (332)
        on left: 377 378 379 380
        on right: 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397
    expr_assign_pipe <pExpression> (333)
        on left: 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397
        on right: 227
    expr_named_call <pExpression> (334)
        on left: 398 399
        on right: 499
    expr_method_call <pExpression> (335)
        on left: 400 401
        on right: 498
    func_addr_name <pExpression> (336)
        on left: 402 403
        on right: 404 407 410
    func_addr_expr <pExpression> (337)
        on left: 404 407 410
        on right: 470
    $@22 (338)
        on left: 405
        on right: 407
    $@23 (339)
        on left: 406
        on right: 407
    $@24 (340)
        on left: 408
        on right: 410
    $@25 (341)
        on left: 409
        on right: 410
    expr_field <pExpression> (342)
        on left: 411 412 413 414 417
        on right: 431
    $@26 (343)
        on left: 415
        on right: 417
    $@27 (344)
        on left: 416
        on right: 417
    expr_call <pExpression> (345)
        on left: 418 419 420 421 422
        on right: 471
    expr <pExpression> (346)
        on left: 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 481 482 483 484 487 488 489 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506
        on right
    $@28 (347)
        on left: 479
        on right: 481
    $@29 (348)
        on left: 480
        on right: 481
    $@30 (349)
        on left: 485
        on right: 487
    $@31 (350)
        on left: 486
        on right: 487
    $@32 (351)
        on left: 490
        on right: 492
    $@33 (352)
        on left: 491
        on right: 492
    expr_mtag <pExpression> (353)
        on left: 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522
        on right: 432
    optional_field_annotation <aaList> (354)
        on left: 523 524 525
        on right: 536 545 587 595
    optional_override <i> (355)
        on left: 526 527 528
        on right: 536 543
    optional_constant <b> (356)
        on left: 529 530
        on right: 541 543
    optional_public_or_private_member_variable <b> (357)
        on left: 531 532 533
        on right: 536 541 543
    optional_static_member_variable <b> (358)
        on left: 534 535
        on right: 536 543
    structure_variable_declaration <pVarDecl> (359)
        on left: 536
        on right: 539
    struct_variable_declaration_list <pVarDeclList> (360)
        on left: 537 539 541 543 544
        on right: 539 541 543 544 631
    $@34 (361)
        on left: 538
        on right: 539
    $@35 (362)
        on left: 540
        on right: 541
    $@36 (363)
        on left: 542
        on right: 543
    function_argument_declaration <pVarDecl> (364)
        on left: 545 546
        on right: 547 548
    function_argument_list <pVarDeclList> (365)
        on left: 547 548
        on right: 124 548
    tuple_type <pVarDecl> (366)
        on left: 549 550
        on right: 551 552 555
    tuple_type_list <pVarDeclList> (367)
        on left: 551 552
        on right: 552 754
    tuple_alias_type_list <pVarDeclList> (368)
        on left: 553 554 555
        on right: 554 555 765
    variant_type <pVarDecl> (369)
        on left: 556
        on right: 557 558 561
    variant_type_list <pVarDeclList> (370)
        on left: 557 558
        on right: 558 757
    variant_alias_type_list <pVarDeclList> (371)
        on left: 559 560 561
        on right: 560 561 770
    copy_or_move <b> (372)
        on left: 562 563
        on right: 567 568 569 781 783 785 787
    variable_declaration <pVarDecl> (373)
        on left: 564 565 566 567 568 569
        on right: 536 545
    copy_or_move_or_clone <i> (374)
        on left: 570 571 572
        on right: 306 307 308 309 581 582 583 584
    optional_ref <b> (375)
        on left: 573 574
        on right: 308 309 583 584
    let_variable_name_with_pos_list <pNameWithPosList> (376)
        on left: 575 576 577 578 579
        on right: 578 579 580 581 582 583 584
    let_variable_declaration <pVarDecl> (377)
        on left: 580 581 582 583 584
        on right: 310 587 595
    global_variable_declaration_list <pVarDeclList> (378)
        on left: 585 587
        on right: 587 593
    $@37 (379)
        on left: 586
        on right: 587
    optional_shared <b> (380)
        on left: 588 589
        on right: 22 593 595
    optional_public_or_private_variable <b> (381)
        on left: 590 591 592
        on right: 593 595
    global_let (382)
        on left: 593 595
        on right: 5
    $@38 (383)
        on left: 594
        on right: 595
    enum_list <pEnum> (384)
        on left: 596 597 598 599
        on right: 597 598 599 616 619
    optional_public_or_private_alias <b> (385)
        on left: 600 601 602
        on right: 604 765 770 775
    single_alias (386)
        on left: 604
        on right: 605 606 609
    $@39 (387)
        on left: 603
        on right: 604
    alias_list (388)
        on left: 605 606
        on right: 606 607
    alias_declaration (389)
        on left: 607 609
        on right: 10
    $@40 (390)
        on left: 608
        on right: 609
    optional_public_or_private_enum <b> (391)
        on left: 610 611 612
        on right: 616 619
    enum_name <pEnum> (392)
        on left: 613
        on right: 616 619
    enum_declaration (393)
        on left: 616 619
        on right: 4
    $@41 (394)
        on left: 614
        on right: 616
    $@42 (395)
        on left: 615
        on right: 616
    $@43 (396)
        on left: 617
        on right: 619
    $@44 (397)
        on left: 618
        on right: 619
    optional_structure_parent <s> (398)
        on left: 620 621
        on right: 624
    optional_sealed <b> (399)
        on left: 622 623
        on right: 624
    structure_name <pStructure> (400)
        on left: 624
        on right: 634
    class_or_struct <b> (401)
        on left: 625 626
        on right: 634
    optional_public_or_private_structure <b> (402)
        on left: 627 628 629
        on right: 634
    optional_struct_variable_declaration_list <pVarDeclList> (403)
        on left: 630 631
        on right: 634
    structure_declaration (404)
        on left: 634
        on right: 3
    $@45 (405)
        on left: 632
        on right: 634
    $@46 (406)
        on left: 633
        on right: 634
    variable_name_with_pos_list <pNameWithPosList> (407)
        on left: 635 636 637 638 639
        on right: 76 564 565 566 567 568 569 638 639 877 878 879 880 881 882
    basic_type_declaration <type> (408)
        on left: 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666
        on right: 421 422 482 488 493 503 693
    enum_basic_type_declaration <type> (409)
        on left: 667 668 669 670 671 672 673 674
        on right: 619
    structure_type_declaration <pTypeDecl> (410)
        on left: 675
        on right: 276 696
    auto_type_declaration <pTypeDecl> (411)
        on left: 676 677 678
        on right: 694
    bitfield_bits <pNameList> (412)
        on left: 679 680
        on right: 680 686
    bitfield_alias_bits <pNameList> (413)
        on left: 681 682 683
        on right: 682 683 775
    bitfield_type_declaration <pTypeDecl> (414)
        on left: 686
        on right: 695
    $@47 (415)
        on left: 684
        on right: 686
    $@48 (416)
        on left: 685
        on right: 686
    c_or_s (417)
        on left: 687 688
        on right: 256 326 552 554 555 558 560 561 690 872
    table_type_pair <aTypePair> (418)
        on left: 689 690
        on right: 727
    dim_list <pTypeDecl> (419)
        on left: 691 692
        on right: 692 697
    type_declaration_no_options <pTypeDecl> (420)
        on left: 693 694 695 696 697 698 701 702 703 705 706 707 708 709 710 711 712 713 714 715 716 717 720 721 724 727 730 731 734 737 738 741 744 745 748 751 754 757
        on right: 223 306 307 314 317 320 407 475 476 481 580 581 582 697 698 706 707 708 709 710 711 712 713 714 715 716 717 721 758 759 815 816 817 818 819 820 823 826 829 832 841 845 846 849 852 855 859 863 871 872
    $@49 (421)
        on left: 699
        on right: 701
    $@50 (422)
        on left: 700
        on right: 701
    $@51 (423)
        on left: 704
        on right: 705
    $@52 (424)
        on left: 718
        on right: 720
    $@53 (425)
        on left: 719
        on right: 720
    $@54 (426)
        on left: 722
        on right: 724
    $@55 (427)
        on left: 723
        on right: 724
    $@56 (428)
        on left: 725
        on right: 727
    $@57 (429)
        on left: 726
        on right: 727
    $@58 (430)
        on left: 728
        on right: 730
    $@59 (431)
        on left: 729
        on right: 730
    $@60 (432)
        on left: 732
        on right: 734
    $@61 (433)
        on left: 733
        on right: 734
    $@62 (434)
        on left: 735
        on right: 737
    $@63 (435)
        on left: 736
        on right: 737
    $@64 (436)
        on left: 739
        on right: 741
    $@65 (437)
        on left: 740
        on right: 741
    $@66 (438)
        on left: 742
        on right: 744
    $@67 (439)
        on left: 743
        on right: 744
    $@68 (440)
        on left: 746
        on right: 748
    $@69 (441)
        on left: 747
        on right: 748
    $@70 (442)
        on left: 749
        on right: 751
    $@71 (443)
        on left: 750
        on right: 751
    $@72 (444)
        on left: 752
        on right: 754
    $@73 (445)
        on left: 753
        on right: 754
    $@74 (446)
        on left: 755
        on right: 757
    $@75 (447)
        on left: 756
        on right: 757
    type_declaration <pTypeDecl> (448)
        on left: 758 759 760
        on right: 126 255 256 275 323 487 492 549 550 556 566 567 604 689 690 701 720 724 730 734 741 748 759 760
    tuple_alias_declaration (449)
        on left: 765
        on right: 12
    $@76 (450)
        on left: 761
        on right: 765
    $@77 (451)
        on left: 762
        on right: 765
    $@78 (452)
        on left: 763
        on right: 765
    $@79 (453)
        on left: 764
        on right: 765
    variant_alias_declaration (454)
        on left: 770
        on right: 11
    $@80 (455)
        on left: 766
        on right: 770
    $@81 (456)
        on left: 767
        on right: 770
    $@82 (457)
        on left: 768
        on right: 770
    $@83 (458)
        on left: 769
        on right: 770
    bitfield_alias_declaration (459)
        on left: 775
        on right: 13
    $@84 (460)
        on left: 771
        on right: 775
    $@85 (461)
        on left: 772
        on right: 775
    $@86 (462)
        on left: 773
        on right: 775
    $@87 (463)
        on left: 774
        on right: 775
    make_decl <pExpression> (464)
        on left: 776 777 778 779 780
        on right: 282 428
    make_struct_fields <pMakeStruct> (465)
        on left: 781 782 783 784 785 786 787 788
        on right: 398 399 783 784 787 788 789 790 791 792 793 794 795
    make_variant_dim <pExpression> (466)
        on left: 789
        on right: 829 855
    make_struct_single <pExpression> (467)
        on left: 790
        on right: 280 281 419
    make_struct_dim <pExpression> (468)
        on left: 791 792
        on right: 792 815 818 819 820
    make_struct_dim_list <pExpression> (469)
        on left: 793 794
        on right: 794 796
    make_struct_dim_decl <pExpression> (470)
        on left: 795 796
        on right: 797
    optional_make_struct_dim_decl <pExpression> (471)
        on left: 797 798
        on right: 823 826 841 849 852
    optional_block <pExpression> (472)
        on left: 799 800
        on right: 815 816 817 818 819 820
    optional_trailing_semicolon_cur_cur (473)
        on left: 801 802
        on right: 869
    optional_trailing_semicolon_cur_sqr (474)
        on left: 803 804
        on right: 846
    optional_trailing_semicolon_sqr_sqr (475)
        on left: 805 806
        on right: 845
    optional_trailing_delim_sqr_sqr (476)
        on left: 807 808 809
        on right: 815 816 817 818
    optional_trailing_delim_cur_sqr (477)
        on left: 810 811 812
        on right: 819 820
    use_initializer <b> (478)
        on left: 813 814
        on right: 278 823 826 832 841 849 852
    make_struct_decl <pExpression> (479)
        on left: 815 816 817 818 819 820 823 826 829 832
        on right: 776
    $@88 (480)
        on left: 821
        on right: 823
    $@89 (481)
        on left: 822
        on right: 823
    $@90 (482)
        on left: 824
        on right: 826
    $@91 (483)
        on left: 825
        on right: 826
    $@92 (484)
        on left: 827
        on right: 829
    $@93 (485)
        on left: 828
        on right: 829
    $@94 (486)
        on left: 830
        on right: 832
    $@95 (487)
        on left: 831
        on right: 832
    make_tuple <pExpression> (488)
        on left: 833 834 835
        on right: 835 842 843
    make_map_tuple <pExpression> (489)
        on left: 836 837
        on right: 864 865 866 867 881 882
    make_tuple_call <pExpression> (490)
        on left: 838 841
        on right: 780
    $@96 (491)
        on left: 839
        on right: 841
    $@97 (492)
        on left: 840
        on right: 841
    make_dim <pExpression> (493)
        on left: 842 843
        on right: 843 845 846
    make_dim_decl <pExpression> (494)
        on left: 844 845 846 849 852 855 856 859 860 863
        on right: 777
    $@98 (495)
        on left: 847
        on right: 849
    $@99 (496)
        on left: 848
        on right: 849
    $@100 (497)
        on left: 850
        on right: 852
    $@101 (498)
        on left: 851
        on right: 852
    $@102 (499)
        on left: 853
        on right: 855
    $@103 (500)
        on left: 854
        on right: 855
    $@104 (501)
        on left: 857
        on right: 859
    $@105 (502)
        on left: 858
        on right: 859
    $@106 (503)
        on left: 861
        on right: 863
    $@107 (504)
        on left: 862
        on right: 863
    make_table <pExpression> (505)
        on left: 864 865
        on right: 865 869
    expr_map_tuple_list <pExpression> (506)
        on left: 866 867
        on right: 254 867 868
    make_table_decl <pExpression> (507)
        on left: 868 869 870 871 872
        on right: 778
    array_comprehension_where <pExpression> (508)
        on left: 873 874
        on right: 877 878 879 880 881 882
    optional_comma <b> (509)
        on left: 875 876
        on right: 250 252 254 463 796 838 844 856 860 863 868
    array_comprehension <pExpression> (510)
        on left: 877 878 879 880 881 882
        on right: 779


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 120 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  300 kwd_let: "let" .

    $default  reduce using rule 300 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  607 alias_declaration: "typedef" . "begin of code block" alias_list "end of code block"
  609                  | "typedef" . $@40 single_alias "end of expression"

    "begin of code block"  shift, and go to state 48

    $default  reduce using rule 608 ($@40)

    $@40  go to state 49


State 8

  301 kwd_let: "var" .

    $default  reduce using rule 301 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  775 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 600 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  765 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 600 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  770 variant_alias_declaration: "variant" . optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 600 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 15

  121 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  212 global_function_declaration: optional_annotation_list . "def" function_declaration
  616 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  619                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"
  634 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  593 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  595           | kwd_let . optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 588 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   91 annotation_argument_name: "type" .

    $default  reduce using rule 91 (annotation_argument_name)


State 33

   92 annotation_argument_name: "in" .

    $default  reduce using rule 92 (annotation_argument_name)


State 34

   90 annotation_argument_name: "name" .

    $default  reduce using rule 90 (annotation_argument_name)


State 35

   93 annotation_argument: annotation_argument_name . '=' string_constant
   94                    | annotation_argument_name . '=' "name"
   95                    | annotation_argument_name . '=' "integer constant"
   96                    | annotation_argument_name . '=' "floating point constant"
   97                    | annotation_argument_name . '=' "true"
   98                    | annotation_argument_name . '=' "false"
   99                    | annotation_argument_name .
  100                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 99 (annotation_argument)


State 36

  101 annotation_argument_list: annotation_argument .

    $default  reduce using rule 101 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 88


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  607 alias_declaration: "typedef" "begin of code block" . alias_list "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 600 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 90
    alias_list                        go to state 91


State 49

  609 alias_declaration: "typedef" $@40 . single_alias "end of expression"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 600 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 92


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 588 (optional_shared)

    optional_shared  go to state 93


State 53

  602 optional_public_or_private_alias: "public" .

    $default  reduce using rule 602 (optional_public_or_private_alias)


State 54

  601 optional_public_or_private_alias: "private" .

    $default  reduce using rule 601 (optional_public_or_private_alias)


State 55

  775 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 771 ($@84)

    $@84  go to state 94


State 56

  765 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 761 ($@76)

    $@76  go to state 95


State 57

  770 variant_alias_declaration: "variant" optional_public_or_private_alias . $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 766 ($@80)

    $@80  go to state 96


State 58

  270 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 97


State 59

  268 name_in_namespace: "name" .
  269                  | "name" . "::" "name"

    "::"  shift, and go to state 98

    "::"      [reduce using rule 268 (name_in_namespace)]
    $default  reduce using rule 268 (name_in_namespace)


State 60

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 99


State 61

  107 annotation_declaration_name: "require" .

    $default  reduce using rule 107 (annotation_declaration_name)


State 62

  108 annotation_declaration_name: "private" .

    $default  reduce using rule 108 (annotation_declaration_name)


State 63

  117 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 64

  112 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 101
    name_in_namespace             go to state 70


State 65

  116 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 102
    name_in_namespace             go to state 70


State 66

  109 annotation_declaration_basic: annotation_declaration_name .
  110                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 103

    $default  reduce using rule 109 (annotation_declaration_basic)


State 67

  111 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 111 (annotation_declaration)


State 68

  113 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  114                       | annotation_declaration . "||" annotation_declaration
  115                       | annotation_declaration . "^^" annotation_declaration
  118 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 118 (annotation_list)


State 69

  119 annotation_list: annotation_list . ',' annotation_declaration
  121 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 107
    ']'  shift, and go to state 108


State 70

  106 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 106 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  626 class_or_struct: "struct" .

    $default  reduce using rule 626 (class_or_struct)


State 73

  625 class_or_struct: "class" .

    $default  reduce using rule 625 (class_or_struct)


State 74

  212 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 213 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 75

  616 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  619                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 610 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 115


State 76

  634 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 627 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 118


State 77

  589 optional_shared: "shared" .

    $default  reduce using rule 589 (optional_shared)


State 78

  593 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  595           | kwd_let optional_shared . optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 590 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 121


State 79

   93 annotation_argument: annotation_argument_name '=' . string_constant
   94                    | annotation_argument_name '=' . "name"
   95                    | annotation_argument_name '=' . "integer constant"
   96                    | annotation_argument_name '=' . "floating point constant"
   97                    | annotation_argument_name '=' . "true"
   98                    | annotation_argument_name '=' . "false"
  100                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 122
    "false"                    shift, and go to state 123
    "integer constant"         shift, and go to state 124
    "floating point constant"  shift, and go to state 125
    "name"                     shift, and go to state 126
    "start of the string"      shift, and go to state 127
    '('                        shift, and go to state 128

    string_constant  go to state 129


State 80

  102 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 130


State 81

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 131


State 82

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 132


State 83

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 42 (require_module_name)


State 84

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 133


State 85

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 86

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 134


State 87

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 89

  604 single_alias: optional_public_or_private_alias . "name" $@39 '=' type_declaration

    "name"  shift, and go to state 136


State 90

  605 alias_list: single_alias . "end of expression"

    "end of expression"  shift, and go to state 137


State 91

  606 alias_list: alias_list . single_alias "end of expression"
  607 alias_declaration: "typedef" "begin of code block" alias_list . "end of code block"

    "public"             shift, and go to state 53
    "private"            shift, and go to state 54
    "end of code block"  shift, and go to state 138

    $default  reduce using rule 600 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 139


State 92

  609 alias_declaration: "typedef" $@40 single_alias . "end of expression"

    "end of expression"  shift, and go to state 140


State 93

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 94

  775 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 . "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "name"  shift, and go to state 144


State 95

  765 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 . "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "name"  shift, and go to state 145


State 96

  770 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 . "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "name"  shift, and go to state 146


State 97

  270 name_in_namespace: "::" "name" .

    $default  reduce using rule 270 (name_in_namespace)


State 98

  269 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 99

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 100

  113 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  114                       | annotation_declaration . "||" annotation_declaration
  115                       | annotation_declaration . "^^" annotation_declaration
  117                       | "|>" annotation_declaration .

    $default  reduce using rule 117 (annotation_declaration)


State 101

  112 annotation_declaration: '!' annotation_declaration .
  113                       | annotation_declaration . "&&" annotation_declaration
  114                       | annotation_declaration . "||" annotation_declaration
  115                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 112 (annotation_declaration)


State 102

  113 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  114                       | annotation_declaration . "||" annotation_declaration
  115                       | annotation_declaration . "^^" annotation_declaration
  116                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106
    ')'   shift, and go to state 150


State 103

  110 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 104

  113 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 152
    name_in_namespace             go to state 70


State 105

  114 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 153
    name_in_namespace             go to state 70


State 106

  115 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 154
    name_in_namespace             go to state 70


State 107

  119 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 155
    name_in_namespace             go to state 70


State 108

  121 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 121 (optional_annotation_list)


State 109

  215 optional_public_or_private_function: "public" .

    $default  reduce using rule 215 (optional_public_or_private_function)


State 110

  214 optional_public_or_private_function: "private" .

    $default  reduce using rule 214 (optional_public_or_private_function)


State 111

  218 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 217 ($@6)

    $@6  go to state 156


State 112

  212 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 212 (global_function_declaration)


State 113

  612 optional_public_or_private_enum: "public" .

    $default  reduce using rule 612 (optional_public_or_private_enum)


State 114

  611 optional_public_or_private_enum: "private" .

    $default  reduce using rule 611 (optional_public_or_private_enum)


State 115

  616 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  619                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 116

  629 optional_public_or_private_structure: "public" .

    $default  reduce using rule 629 (optional_public_or_private_structure)


State 117

  628 optional_public_or_private_structure: "private" .

    $default  reduce using rule 628 (optional_public_or_private_structure)


State 118

  634 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@45 structure_name $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 632 ($@45)

    $@45  go to state 159


State 119

  592 optional_public_or_private_variable: "public" .

    $default  reduce using rule 592 (optional_public_or_private_variable)


State 120

  591 optional_public_or_private_variable: "private" .

    $default  reduce using rule 591 (optional_public_or_private_variable)


State 121

  593 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  595           | kwd_let optional_shared optional_public_or_private_variable . $@38 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 160

    $default  reduce using rule 594 ($@38)

    $@38  go to state 161


State 122

   97 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 97 (annotation_argument)


State 123

   98 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 98 (annotation_argument)


State 124

   95 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 95 (annotation_argument)


State 125

   96 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 96 (annotation_argument)


State 126

   94 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 94 (annotation_argument)


State 127

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 128

  100 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 129

   93 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 93 (annotation_argument)


State 130

  102 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 131

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 132

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 133

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 134

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 135

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 136

  604 single_alias: optional_public_or_private_alias "name" . $@39 '=' type_declaration

    $default  reduce using rule 603 ($@39)

    $@39  go to state 174


State 137

  605 alias_list: single_alias "end of expression" .

    $default  reduce using rule 605 (alias_list)


State 138

  607 alias_declaration: "typedef" "begin of code block" alias_list "end of code block" .

    $default  reduce using rule 607 (alias_declaration)


State 139

  606 alias_list: alias_list single_alias . "end of expression"

    "end of expression"  shift, and go to state 175


State 140

  609 alias_declaration: "typedef" $@40 single_alias "end of expression" .

    $default  reduce using rule 609 (alias_declaration)


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  775 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" . $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 772 ($@85)

    $@85  go to state 176


State 145

  765 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" . $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 762 ($@77)

    $@77  go to state 177


State 146

  770 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" . $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 767 ($@81)

    $@81  go to state 178


State 147

  269 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 269 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  116 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 116 (annotation_declaration)


State 151

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  110 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 180


State 152

  113 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration "&&" annotation_declaration .
  114                       | annotation_declaration . "||" annotation_declaration
  115                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 113 (annotation_declaration)


State 153

  113 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  114                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration "||" annotation_declaration .
  115                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 104
    "^^"  shift, and go to state 106

    $default  reduce using rule 114 (annotation_declaration)


State 154

  113 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  114                       | annotation_declaration . "||" annotation_declaration
  115                       | annotation_declaration . "^^" annotation_declaration
  115                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 104

    $default  reduce using rule 115 (annotation_declaration)


State 155

  113 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  114                       | annotation_declaration . "||" annotation_declaration
  115                       | annotation_declaration . "^^" annotation_declaration
  119 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 119 (annotation_list)


State 156

  218 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  613 enum_name: "name" .

    $default  reduce using rule 613 (enum_name)


State 158

  616 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . "begin of code block" $@41 enum_list $@42 "end of code block"
  619                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 212
    ':'                    shift, and go to state 213


State 159

  634 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 . structure_name $@46 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 622 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  593 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 585 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  595 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 523 (optional_field_annotation)

    metadata_argument_list     go to state 220
    optional_field_annotation  go to state 221


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 222
    STRING_CHARACTER_ESC  shift, and go to state 223
    "end of the string"   shift, and go to state 224


State 165

   86 annotation_argument_value: "true" .

    $default  reduce using rule 86 (annotation_argument_value)


State 166

   87 annotation_argument_value: "false" .

    $default  reduce using rule 87 (annotation_argument_value)


State 167

   84 annotation_argument_value: "integer constant" .

    $default  reduce using rule 84 (annotation_argument_value)


State 168

   85 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 169

   83 annotation_argument_value: "name" .

    $default  reduce using rule 83 (annotation_argument_value)


State 170

   82 annotation_argument_value: string_constant .

    $default  reduce using rule 82 (annotation_argument_value)


State 171

   88 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 88 (annotation_argument_value_list)


State 172

   89 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 225
    ')'  shift, and go to state 226


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  604 single_alias: optional_public_or_private_alias "name" $@39 . '=' type_declaration

    '='  shift, and go to state 227


State 175

  606 alias_list: alias_list single_alias "end of expression" .

    $default  reduce using rule 606 (alias_list)


State 176

  775 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 . "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "begin of code block"  shift, and go to state 228


State 177

  765 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 . "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "begin of code block"  shift, and go to state 229


State 178

  770 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 . "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "begin of code block"  shift, and go to state 230


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  110 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 110 (annotation_declaration_basic)


State 181

  128 function_name: "operator" . '!'
  129              | "operator" . '~'
  130              | "operator" . "+="
  131              | "operator" . "-="
  132              | "operator" . "*="
  133              | "operator" . "/="
  134              | "operator" . "%="
  135              | "operator" . "&="
  136              | "operator" . "|="
  137              | "operator" . "^="
  138              | "operator" . "&&="
  139              | "operator" . "||="
  140              | "operator" . "^^="
  141              | "operator" . "&&"
  142              | "operator" . "||"
  143              | "operator" . "^^"
  144              | "operator" . '+'
  145              | "operator" . '-'
  146              | "operator" . '*'
  147              | "operator" . '/'
  148              | "operator" . '%'
  149              | "operator" . '<'
  150              | "operator" . '>'
  151              | "operator" . ".."
  152              | "operator" . "=="
  153              | "operator" . "!="
  154              | "operator" . "<="
  155              | "operator" . ">="
  156              | "operator" . '&'
  157              | "operator" . '|'
  158              | "operator" . '^'
  161              | "operator" . "++"
  162              | "operator" . "--"
  163              | "operator" . "<<"
  164              | "operator" . ">>"
  165              | "operator" . "<<="
  166              | "operator" . ">>="
  167              | "operator" . "<<<"
  168              | "operator" . ">>>"
  169              | "operator" . "<<<="
  170              | "operator" . ">>>="
  171              | "operator" . '[' ']'
  172              | "operator" . "?[" ']'
  173              | "operator" . '.'
  174              | "operator" . "?."
  175              | "operator" . '.' "name"
  176              | "operator" . '.' "name" ":="
  177              | "operator" . "?." "name"
  178              | "operator" . ":="
  179              | "operator" . "delete"
  180              | "operator" . "??"
  181              | "operator" . "is"
  182              | "operator" . "as"
  183              | "operator" . "is" "name"
  184              | "operator" . "as" "name"
  185              | "operator" . '?' "as"
  186              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 231
    "as"      shift, and go to state 232
    "delete"  shift, and go to state 233
    "+="      shift, and go to state 234
    "-="      shift, and go to state 235
    "/="      shift, and go to state 236
    "*="      shift, and go to state 237
    "%="      shift, and go to state 238
    "&="      shift, and go to state 239
    "|="      shift, and go to state 240
    "^="      shift, and go to state 241
    "<<"      shift, and go to state 242
    ">>"      shift, and go to state 243
    "++"      shift, and go to state 244
    "--"      shift, and go to state 245
    "<="      shift, and go to state 246
    "<<="     shift, and go to state 247
    ">>="     shift, and go to state 248
    ">="      shift, and go to state 249
    "=="      shift, and go to state 250
    "!="      shift, and go to state 251
    "??"      shift, and go to state 252
    "?."      shift, and go to state 253
    "?["      shift, and go to state 254
    ":="      shift, and go to state 255
    "<<<"     shift, and go to state 256
    ">>>"     shift, and go to state 257
    "<<<="    shift, and go to state 258
    ">>>="    shift, and go to state 259
    "&&"      shift, and go to state 260
    "||"      shift, and go to state 261
    "^^"      shift, and go to state 262
    "&&="     shift, and go to state 263
    "||="     shift, and go to state 264
    "^^="     shift, and go to state 265
    ".."      shift, and go to state 266
    '?'       shift, and go to state 267
    '|'       shift, and go to state 268
    '^'       shift, and go to state 269
    '&'       shift, and go to state 270
    '<'       shift, and go to state 271
    '>'       shift, and go to state 272
    '-'       shift, and go to state 273
    '+'       shift, and go to state 274
    '*'       shift, and go to state 275
    '/'       shift, and go to state 276
    '%'       shift, and go to state 277
    '~'       shift, and go to state 278
    '!'       shift, and go to state 279
    '.'       shift, and go to state 280
    '['       shift, and go to state 281


State 182

  187 function_name: "bool" .

    $default  reduce using rule 187 (function_name)


State 183

  188 function_name: "string" .

    $default  reduce using rule 188 (function_name)


State 184

  189 function_name: "int" .

    $default  reduce using rule 189 (function_name)


State 185

  190 function_name: "int2" .

    $default  reduce using rule 190 (function_name)


State 186

  191 function_name: "int3" .

    $default  reduce using rule 191 (function_name)


State 187

  192 function_name: "int4" .

    $default  reduce using rule 192 (function_name)


State 188

  193 function_name: "uint" .

    $default  reduce using rule 193 (function_name)


State 189

  194 function_name: "uint2" .

    $default  reduce using rule 194 (function_name)


State 190

  195 function_name: "uint3" .

    $default  reduce using rule 195 (function_name)


State 191

  196 function_name: "uint4" .

    $default  reduce using rule 196 (function_name)


State 192

  197 function_name: "float" .

    $default  reduce using rule 197 (function_name)


State 193

  198 function_name: "float2" .

    $default  reduce using rule 198 (function_name)


State 194

  199 function_name: "float3" .

    $default  reduce using rule 199 (function_name)


State 195

  200 function_name: "float4" .

    $default  reduce using rule 200 (function_name)


State 196

  201 function_name: "range" .

    $default  reduce using rule 201 (function_name)


State 197

  202 function_name: "urange" .

    $default  reduce using rule 202 (function_name)


State 198

  203 function_name: "range64" .

    $default  reduce using rule 203 (function_name)


State 199

  204 function_name: "urange64" .

    $default  reduce using rule 204 (function_name)


State 200

  205 function_name: "int64" .

    $default  reduce using rule 205 (function_name)


State 201

  206 function_name: "uint64" .

    $default  reduce using rule 206 (function_name)


State 202

  207 function_name: "double" .

    $default  reduce using rule 207 (function_name)


State 203

  208 function_name: "int8" .

    $default  reduce using rule 208 (function_name)


State 204

  209 function_name: "uint8" .

    $default  reduce using rule 209 (function_name)


State 205

  210 function_name: "int16" .

    $default  reduce using rule 210 (function_name)


State 206

  211 function_name: "uint16" .

    $default  reduce using rule 211 (function_name)


State 207

  159 function_name: "++" . "operator"

    "operator"  shift, and go to state 282


State 208

  160 function_name: "--" . "operator"

    "operator"  shift, and go to state 283


State 209

  127 function_name: "name" .

    $default  reduce using rule 127 (function_name)


State 210

  216 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 284

    $default  reduce using rule 122 (optional_function_argument_list)

    optional_function_argument_list  go to state 285


State 211

  218 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 287


State 212

  616 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" . $@41 enum_list $@42 "end of code block"

    $default  reduce using rule 614 ($@41)

    $@41  go to state 288


State 213

  619 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "int"     shift, and go to state 289
    "uint"    shift, and go to state 290
    "int64"   shift, and go to state 291
    "uint64"  shift, and go to state 292
    "int8"    shift, and go to state 293
    "uint8"   shift, and go to state 294
    "int16"   shift, and go to state 295
    "uint16"  shift, and go to state 296

    enum_basic_type_declaration  go to state 297


State 214

  623 optional_sealed: "sealed" .

    $default  reduce using rule 623 (optional_sealed)


State 215

  624 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 298


State 216

  634 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name . $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 633 ($@46)

    $@46  go to state 299


State 217

  587 global_variable_declaration_list: global_variable_declaration_list . $@37 optional_field_annotation let_variable_declaration
  593 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 300

    $default  reduce using rule 586 ($@37)

    $@37  go to state 301


State 218

  524 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 302


State 219

  103 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 303


State 220

  104 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  105                       | metadata_argument_list . "end of expression"
  525 optional_field_annotation: metadata_argument_list .

    "end of expression"  shift, and go to state 304
    '@'                  shift, and go to state 305

    $default  reduce using rule 525 (optional_field_annotation)


State 221

  595 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 306
    "name"  shift, and go to state 307

    let_variable_name_with_pos_list  go to state 308
    let_variable_declaration         go to state 309


State 222

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 223

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 224

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 225

   89 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant            go to state 170
    annotation_argument_value  go to state 310


State 226

  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 100 (annotation_argument)


State 227

  604 single_alias: optional_public_or_private_alias "name" $@39 '=' . type_declaration

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 358


State 228

  775 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" . $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 773 ($@86)

    $@86  go to state 359


State 229

  765 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" . $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 763 ($@78)

    $@78  go to state 360


State 230

  770 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" . $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 768 ($@82)

    $@82  go to state 361


State 231

  181 function_name: "operator" "is" .
  183              | "operator" "is" . "name"

    "name"  shift, and go to state 362

    $default  reduce using rule 181 (function_name)


State 232

  182 function_name: "operator" "as" .
  184              | "operator" "as" . "name"

    "name"  shift, and go to state 363

    $default  reduce using rule 182 (function_name)


State 233

  179 function_name: "operator" "delete" .

    $default  reduce using rule 179 (function_name)


State 234

  130 function_name: "operator" "+=" .

    $default  reduce using rule 130 (function_name)


State 235

  131 function_name: "operator" "-=" .

    $default  reduce using rule 131 (function_name)


State 236

  133 function_name: "operator" "/=" .

    $default  reduce using rule 133 (function_name)


State 237

  132 function_name: "operator" "*=" .

    $default  reduce using rule 132 (function_name)


State 238

  134 function_name: "operator" "%=" .

    $default  reduce using rule 134 (function_name)


State 239

  135 function_name: "operator" "&=" .

    $default  reduce using rule 135 (function_name)


State 240

  136 function_name: "operator" "|=" .

    $default  reduce using rule 136 (function_name)


State 241

  137 function_name: "operator" "^=" .

    $default  reduce using rule 137 (function_name)


State 242

  163 function_name: "operator" "<<" .

    $default  reduce using rule 163 (function_name)


State 243

  164 function_name: "operator" ">>" .

    $default  reduce using rule 164 (function_name)


State 244

  161 function_name: "operator" "++" .

    $default  reduce using rule 161 (function_name)


State 245

  162 function_name: "operator" "--" .

    $default  reduce using rule 162 (function_name)


State 246

  154 function_name: "operator" "<=" .

    $default  reduce using rule 154 (function_name)


State 247

  165 function_name: "operator" "<<=" .

    $default  reduce using rule 165 (function_name)


State 248

  166 function_name: "operator" ">>=" .

    $default  reduce using rule 166 (function_name)


State 249

  155 function_name: "operator" ">=" .

    $default  reduce using rule 155 (function_name)


State 250

  152 function_name: "operator" "==" .

    $default  reduce using rule 152 (function_name)


State 251

  153 function_name: "operator" "!=" .

    $default  reduce using rule 153 (function_name)


State 252

  180 function_name: "operator" "??" .

    $default  reduce using rule 180 (function_name)


State 253

  174 function_name: "operator" "?." .
  177              | "operator" "?." . "name"

    "name"  shift, and go to state 364

    $default  reduce using rule 174 (function_name)


State 254

  172 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 365


State 255

  178 function_name: "operator" ":=" .

    $default  reduce using rule 178 (function_name)


State 256

  167 function_name: "operator" "<<<" .

    $default  reduce using rule 167 (function_name)


State 257

  168 function_name: "operator" ">>>" .

    $default  reduce using rule 168 (function_name)


State 258

  169 function_name: "operator" "<<<=" .

    $default  reduce using rule 169 (function_name)


State 259

  170 function_name: "operator" ">>>=" .

    $default  reduce using rule 170 (function_name)


State 260

  141 function_name: "operator" "&&" .

    $default  reduce using rule 141 (function_name)


State 261

  142 function_name: "operator" "||" .

    $default  reduce using rule 142 (function_name)


State 262

  143 function_name: "operator" "^^" .

    $default  reduce using rule 143 (function_name)


State 263

  138 function_name: "operator" "&&=" .

    $default  reduce using rule 138 (function_name)


State 264

  139 function_name: "operator" "||=" .

    $default  reduce using rule 139 (function_name)


State 265

  140 function_name: "operator" "^^=" .

    $default  reduce using rule 140 (function_name)


State 266

  151 function_name: "operator" ".." .

    $default  reduce using rule 151 (function_name)


State 267

  185 function_name: "operator" '?' . "as"
  186              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 366


State 268

  157 function_name: "operator" '|' .

    $default  reduce using rule 157 (function_name)


State 269

  158 function_name: "operator" '^' .

    $default  reduce using rule 158 (function_name)


State 270

  156 function_name: "operator" '&' .

    $default  reduce using rule 156 (function_name)


State 271

  149 function_name: "operator" '<' .

    $default  reduce using rule 149 (function_name)


State 272

  150 function_name: "operator" '>' .

    $default  reduce using rule 150 (function_name)


State 273

  145 function_name: "operator" '-' .

    $default  reduce using rule 145 (function_name)


State 274

  144 function_name: "operator" '+' .

    $default  reduce using rule 144 (function_name)


State 275

  146 function_name: "operator" '*' .

    $default  reduce using rule 146 (function_name)


State 276

  147 function_name: "operator" '/' .

    $default  reduce using rule 147 (function_name)


State 277

  148 function_name: "operator" '%' .

    $default  reduce using rule 148 (function_name)


State 278

  129 function_name: "operator" '~' .

    $default  reduce using rule 129 (function_name)


State 279

  128 function_name: "operator" '!' .

    $default  reduce using rule 128 (function_name)


State 280

  173 function_name: "operator" '.' .
  175              | "operator" '.' . "name"
  176              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 367

    $default  reduce using rule 173 (function_name)


State 281

  171 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 368


State 282

  159 function_name: "++" "operator" .

    $default  reduce using rule 159 (function_name)


State 283

  160 function_name: "--" "operator" .

    $default  reduce using rule 160 (function_name)


State 284

  123 optional_function_argument_list: '(' . ')'
  124                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 369
    "[["  shift, and go to state 218
    ')'   shift, and go to state 370
    '@'   shift, and go to state 219

    $default  reduce using rule 523 (optional_field_annotation)

    metadata_argument_list         go to state 220
    optional_field_annotation      go to state 371
    function_argument_declaration  go to state 372
    function_argument_list         go to state 373


State 285

  216 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 374

    $default  reduce using rule 125 (optional_function_type)

    optional_function_type  go to state 375


State 286

  219 expression_block: "begin of code block" . expressions "end of code block"
  220                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 245 (expressions)

    expressions  go to state 376


State 287

  218 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 218 (function_declaration)


State 288

  616 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 . enum_list $@42 "end of code block"

    $default  reduce using rule 596 (enum_list)

    enum_list  go to state 377


State 289

  667 enum_basic_type_declaration: "int" .

    $default  reduce using rule 667 (enum_basic_type_declaration)


State 290

  670 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 670 (enum_basic_type_declaration)


State 291

  673 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 673 (enum_basic_type_declaration)


State 292

  674 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 674 (enum_basic_type_declaration)


State 293

  668 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 668 (enum_basic_type_declaration)


State 294

  671 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 671 (enum_basic_type_declaration)


State 295

  669 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 669 (enum_basic_type_declaration)


State 296

  672 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 672 (enum_basic_type_declaration)


State 297

  619 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 378


State 298

  624 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 379

    $default  reduce using rule 620 (optional_structure_parent)

    optional_structure_parent  go to state 380


State 299

  634 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 381

    $default  reduce using rule 630 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 382


State 300

  593 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 593 (global_let)


State 301

  587 global_variable_declaration_list: global_variable_declaration_list $@37 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 523 (optional_field_annotation)

    metadata_argument_list     go to state 220
    optional_field_annotation  go to state 383


State 302

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  524 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 384


State 303

  103 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 103 (metadata_argument_list)


State 304

  105 metadata_argument_list: metadata_argument_list "end of expression" .

    $default  reduce using rule 105 (metadata_argument_list)


State 305

  104 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 385


State 306

  576 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 386


State 307

  575 let_variable_name_with_pos_list: "name" .
  577                                | "name" . "aka" "name"

    "aka"  shift, and go to state 387

    $default  reduce using rule 575 (let_variable_name_with_pos_list)


State 308

  578 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  579                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  580 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  581                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  582                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  583                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  584                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 388
    ':'  shift, and go to state 389
    '&'  shift, and go to state 390

    $default  reduce using rule 573 (optional_ref)

    optional_ref  go to state 391


State 309

  595 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 595 (global_let)


State 310

   89 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 311

  701 type_declaration_no_options: "type" . '<' $@49 type_declaration '>' $@50

    '<'  shift, and go to state 392


State 312

  724 type_declaration_no_options: "array" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 393


State 313

  727 type_declaration_no_options: "table" . '<' $@56 table_type_pair '>' $@57

    '<'  shift, and go to state 394


State 314

  702 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 395


State 315

  730 type_declaration_no_options: "iterator" . '<' $@58 type_declaration '>' $@59

    '<'  shift, and go to state 396


State 316

  720 type_declaration_no_options: "smart_ptr" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 397


State 317

  640 basic_type_declaration: "bool" .

    $default  reduce using rule 640 (basic_type_declaration)


State 318

  660 basic_type_declaration: "void" .

    $default  reduce using rule 660 (basic_type_declaration)


State 319

  641 basic_type_declaration: "string" .

    $default  reduce using rule 641 (basic_type_declaration)


State 320

  676 auto_type_declaration: "auto" .
  677                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 398

    '('       [reduce using rule 676 (auto_type_declaration)]
    $default  reduce using rule 676 (auto_type_declaration)


State 321

  642 basic_type_declaration: "int" .

    $default  reduce using rule 642 (basic_type_declaration)


State 322

  646 basic_type_declaration: "int2" .

    $default  reduce using rule 646 (basic_type_declaration)


State 323

  647 basic_type_declaration: "int3" .

    $default  reduce using rule 647 (basic_type_declaration)


State 324

  648 basic_type_declaration: "int4" .

    $default  reduce using rule 648 (basic_type_declaration)


State 325

  649 basic_type_declaration: "uint" .

    $default  reduce using rule 649 (basic_type_declaration)


State 326

  666 basic_type_declaration: "bitfield" .
  686 bitfield_type_declaration: "bitfield" . '<' $@47 bitfield_bits '>' $@48

    '<'  shift, and go to state 399

    $default  reduce using rule 666 (basic_type_declaration)


State 327

  653 basic_type_declaration: "uint2" .

    $default  reduce using rule 653 (basic_type_declaration)


State 328

  654 basic_type_declaration: "uint3" .

    $default  reduce using rule 654 (basic_type_declaration)


State 329

  655 basic_type_declaration: "uint4" .

    $default  reduce using rule 655 (basic_type_declaration)


State 330

  656 basic_type_declaration: "float" .

    $default  reduce using rule 656 (basic_type_declaration)


State 331

  657 basic_type_declaration: "float2" .

    $default  reduce using rule 657 (basic_type_declaration)


State 332

  658 basic_type_declaration: "float3" .

    $default  reduce using rule 658 (basic_type_declaration)


State 333

  659 basic_type_declaration: "float4" .

    $default  reduce using rule 659 (basic_type_declaration)


State 334

  661 basic_type_declaration: "range" .

    $default  reduce using rule 661 (basic_type_declaration)


State 335

  662 basic_type_declaration: "urange" .

    $default  reduce using rule 662 (basic_type_declaration)


State 336

  663 basic_type_declaration: "range64" .

    $default  reduce using rule 663 (basic_type_declaration)


State 337

  664 basic_type_declaration: "urange64" .

    $default  reduce using rule 664 (basic_type_declaration)


State 338

  731 type_declaration_no_options: "block" .
  734                            | "block" . '<' $@60 type_declaration '>' $@61
  737                            | "block" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 400

    $default  reduce using rule 731 (type_declaration_no_options)


State 339

  645 basic_type_declaration: "int64" .

    $default  reduce using rule 645 (basic_type_declaration)


State 340

  652 basic_type_declaration: "uint64" .

    $default  reduce using rule 652 (basic_type_declaration)


State 341

  665 basic_type_declaration: "double" .

    $default  reduce using rule 665 (basic_type_declaration)


State 342

  738 type_declaration_no_options: "function" .
  741                            | "function" . '<' $@64 type_declaration '>' $@65
  744                            | "function" . '<' $@66 optional_function_argument_list optional_function_type '>' $@67

    '<'  shift, and go to state 401

    $default  reduce using rule 738 (type_declaration_no_options)


State 343

  745 type_declaration_no_options: "lambda" .
  748                            | "lambda" . '<' $@68 type_declaration '>' $@69
  751                            | "lambda" . '<' $@70 optional_function_argument_list optional_function_type '>' $@71

    '<'  shift, and go to state 402

    $default  reduce using rule 745 (type_declaration_no_options)


State 344

  643 basic_type_declaration: "int8" .

    $default  reduce using rule 643 (basic_type_declaration)


State 345

  650 basic_type_declaration: "uint8" .

    $default  reduce using rule 650 (basic_type_declaration)


State 346

  644 basic_type_declaration: "int16" .

    $default  reduce using rule 644 (basic_type_declaration)


State 347

  651 basic_type_declaration: "uint16" .

    $default  reduce using rule 651 (basic_type_declaration)


State 348

  754 type_declaration_no_options: "tuple" . '<' $@72 tuple_type_list '>' $@73

    '<'  shift, and go to state 403


State 349

  757 type_declaration_no_options: "variant" . '<' $@74 variant_type_list '>' $@75

    '<'  shift, and go to state 404


State 350

  678 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 405


State 351

  703 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  705                            | '$' . name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 406


State 352

  675 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 675 (structure_type_declaration)


State 353

  693 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 693 (type_declaration_no_options)


State 354

  696 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 696 (type_declaration_no_options)


State 355

  694 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 694 (type_declaration_no_options)


State 356

  695 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 695 (type_declaration_no_options)


State 357

  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"
  758 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    $default  reduce using rule 758 (type_declaration)

    dim_list  go to state 417


State 358

  604 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration .
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418

    $default  reduce using rule 604 (single_alias)


State 359

  775 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 . bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 681 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 419


State 360

  765 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 . tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 553 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 420


State 361

  770 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 . variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 559 (variant_alias_type_list)

    variant_alias_type_list  go to state 421


State 362

  183 function_name: "operator" "is" "name" .

    $default  reduce using rule 183 (function_name)


State 363

  184 function_name: "operator" "as" "name" .

    $default  reduce using rule 184 (function_name)


State 364

  177 function_name: "operator" "?." "name" .

    $default  reduce using rule 177 (function_name)


State 365

  172 function_name: "operator" "?[" ']' .

    $default  reduce using rule 172 (function_name)


State 366

  185 function_name: "operator" '?' "as" .
  186              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 422

    $default  reduce using rule 185 (function_name)


State 367

  175 function_name: "operator" '.' "name" .
  176              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 423

    $default  reduce using rule 175 (function_name)


State 368

  171 function_name: "operator" '[' ']' .

    $default  reduce using rule 171 (function_name)


State 369

  546 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 424


State 370

  123 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 123 (optional_function_argument_list)


State 371

  545 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 425
    "var"  shift, and go to state 426

    $default  reduce using rule 299 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 427


State 372

  547 function_argument_list: function_argument_declaration .

    $default  reduce using rule 547 (function_argument_list)


State 373

  124 optional_function_argument_list: '(' function_argument_list . ')'
  548 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 428
    ')'                  shift, and go to state 429


State 374

  126 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 430


State 375

  216 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 216 (function_declaration_header)


State 376

  219 expression_block: "begin of code block" expressions . "end of code block"
  220                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  246 expressions: expressions . expression_any
  247            | expressions . error

    error                             shift, and go to state 431
    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 434
    "if"                              shift, and go to state 435
    "static_if"                       shift, and go to state 436
    "for"                             shift, and go to state 437
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "return"                          shift, and go to state 444
    "null"                            shift, and go to state 445
    "break"                           shift, and go to state 446
    "try"                             shift, and go to state 447
    "table"                           shift, and go to state 448
    "delete"                          shift, and go to state 449
    "deref"                           shift, and go to state 450
    "with"                            shift, and go to state 451
    "assume"                          shift, and go to state 452
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 455
    "continue"                        shift, and go to state 456
    "pass"                            shift, and go to state 457
    "reinterpret"                     shift, and go to state 458
    "label"                           shift, and go to state 459
    "goto"                            shift, and go to state 460
    "unsafe"                          shift, and go to state 461
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "yield"                           shift, and go to state 468
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 491
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    "end of code block"               shift, and go to state 495
    "end of expression"               shift, and go to state 496
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder             go to state 506
    expr_reader                go to state 507
    expression_label           go to state 508
    expression_goto            go to state 509
    if_or_static_if            go to state 510
    expression_if_one_liner    go to state 511
    expression_if_then_else    go to state 512
    expression_for_loop        go to state 513
    expression_unsafe          go to state 514
    expression_while_loop      go to state 515
    expression_with            go to state 516
    expression_with_alias      go to state 517
    expr_call_pipe             go to state 518
    expression_any             go to state 519
    expr_keyword               go to state 520
    expression_keyword         go to state 521
    expr_pipe                  go to state 522
    name_in_namespace          go to state 523
    expression_delete          go to state 524
    expr_new                   go to state 525
    expression_break           go to state 526
    expression_continue        go to state 527
    expression_return_no_pipe  go to state 528
    expression_return          go to state 529
    expression_yield_no_pipe   go to state 530
    expression_yield           go to state 531
    expression_try_catch       go to state 532
    kwd_let                    go to state 533
    expression_let             go to state 534
    expr_cast                  go to state 535
    expr_type_decl             go to state 536
    expr_type_info             go to state 537
    block_or_lambda            go to state 538
    expr_full_block            go to state 539
    expr_numeric_const         go to state 540
    expr_assign                go to state 541
    expr_assign_pipe           go to state 542
    expr_named_call            go to state 543
    expr_method_call           go to state 544
    func_addr_expr             go to state 545
    expr_field                 go to state 546
    expr_call                  go to state 547
    expr                       go to state 548
    expr_mtag                  go to state 549
    basic_type_declaration     go to state 550
    make_decl                  go to state 551
    make_struct_decl           go to state 552
    make_tuple_call            go to state 553
    make_dim_decl              go to state 554
    make_table_decl            go to state 555
    array_comprehension        go to state 556


State 377

  597 enum_list: enum_list . "end of expression"
  598          | enum_list . "name" "end of expression"
  599          | enum_list . "name" '=' expr "end of expression"
  616 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list . $@42 "end of code block"

    "name"               shift, and go to state 557
    "end of expression"  shift, and go to state 558

    $default  reduce using rule 615 ($@42)

    $@42  go to state 559


State 378

  619 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" . $@43 enum_list $@44 "end of code block"

    $default  reduce using rule 617 ($@43)

    $@43  go to state 560


State 379

  621 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 561


State 380

  624 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 624 (structure_name)


State 381

  631 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 537 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 562


State 382

  634 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list .

    $default  reduce using rule 634 (structure_declaration)


State 383

  587 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 306
    "name"  shift, and go to state 307

    let_variable_name_with_pos_list  go to state 308
    let_variable_declaration         go to state 563


State 384

  524 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 564


State 385

  104 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 104 (metadata_argument_list)


State 386

  576 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 569
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 387

  577 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 570


State 388

  578 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  579                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 571


State 389

  580 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  581                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  582                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 572


State 390

  574 optional_ref: '&' .

    $default  reduce using rule 574 (optional_ref)


State 391

  583 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  584                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 573
    ":="  shift, and go to state 574
    '='   shift, and go to state 575

    copy_or_move_or_clone  go to state 576


State 392

  701 type_declaration_no_options: "type" '<' . $@49 type_declaration '>' $@50

    $default  reduce using rule 699 ($@49)

    $@49  go to state 577


State 393

  724 type_declaration_no_options: "array" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 722 ($@54)

    $@54  go to state 578


State 394

  727 type_declaration_no_options: "table" '<' . $@56 table_type_pair '>' $@57

    $default  reduce using rule 725 ($@56)

    $@56  go to state 579


State 395

  702 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 580
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 396

  730 type_declaration_no_options: "iterator" '<' . $@58 type_declaration '>' $@59

    $default  reduce using rule 728 ($@58)

    $@58  go to state 581


State 397

  720 type_declaration_no_options: "smart_ptr" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 718 ($@52)

    $@52  go to state 582


State 398

  677 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 583


State 399

  686 bitfield_type_declaration: "bitfield" '<' . $@47 bitfield_bits '>' $@48

    $default  reduce using rule 684 ($@47)

    $@47  go to state 584


State 400

  734 type_declaration_no_options: "block" '<' . $@60 type_declaration '>' $@61
  737                            | "block" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 735 ($@62)
    '>'       reduce using rule 735 ($@62)
    '('       reduce using rule 735 ($@62)
    $default  reduce using rule 732 ($@60)

    $@60  go to state 585
    $@62  go to state 586


State 401

  741 type_declaration_no_options: "function" '<' . $@64 type_declaration '>' $@65
  744                            | "function" '<' . $@66 optional_function_argument_list optional_function_type '>' $@67

    ':'       reduce using rule 742 ($@66)
    '>'       reduce using rule 742 ($@66)
    '('       reduce using rule 742 ($@66)
    $default  reduce using rule 739 ($@64)

    $@64  go to state 587
    $@66  go to state 588


State 402

  748 type_declaration_no_options: "lambda" '<' . $@68 type_declaration '>' $@69
  751                            | "lambda" '<' . $@70 optional_function_argument_list optional_function_type '>' $@71

    ':'       reduce using rule 749 ($@70)
    '>'       reduce using rule 749 ($@70)
    '('       reduce using rule 749 ($@70)
    $default  reduce using rule 746 ($@68)

    $@68  go to state 589
    $@70  go to state 590


State 403

  754 type_declaration_no_options: "tuple" '<' . $@72 tuple_type_list '>' $@73

    $default  reduce using rule 752 ($@72)

    $@72  go to state 591


State 404

  757 type_declaration_no_options: "variant" '<' . $@74 variant_type_list '>' $@75

    $default  reduce using rule 755 ($@74)

    $@74  go to state 592


State 405

  678 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 593
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 406

  703 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  705                            | '$' name_in_namespace . '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 594
    '('  shift, and go to state 595


State 407

  708 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 708 (type_declaration_no_options)


State 408

  713 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 713 (type_declaration_no_options)


State 409

  707 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 707 (type_declaration_no_options)


State 410

  715 type_declaration_no_options: type_declaration_no_options "==" . "const"
  716                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 596
    '&'      shift, and go to state 597


State 411

  721 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 721 (type_declaration_no_options)


State 412

  717 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 717 (type_declaration_no_options)


State 413

  710 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 710 (type_declaration_no_options)


State 414

  706 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  709                            | type_declaration_no_options '-' . "const"
  711                            | type_declaration_no_options '-' . '&'
  714                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 598
    '&'      shift, and go to state 599
    '['      shift, and go to state 600
    '#'      shift, and go to state 601


State 415

  691 dim_list: '[' . expr ']'
  698 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    ']'                               shift, and go to state 602
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 603
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 416

  712 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 712 (type_declaration_no_options)


State 417

  692 dim_list: dim_list . '[' expr ']'
  697 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 604

    '['       [reduce using rule 697 (type_declaration_no_options)]
    $default  reduce using rule 697 (type_declaration_no_options)


State 418

  759 type_declaration: type_declaration '|' . type_declaration_no_options
  760                 | type_declaration '|' . '#'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351
    '#'          shift, and go to state 605

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 606


State 419

  682 bitfield_alias_bits: bitfield_alias_bits . "end of expression"
  683                    | bitfield_alias_bits . "name" "end of expression"
  775 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits . $@87 "end of code block"

    "name"               shift, and go to state 607
    "end of expression"  shift, and go to state 608

    $default  reduce using rule 774 ($@87)

    $@87  go to state 609


State 420

  554 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  555                      | tuple_alias_type_list . tuple_type c_or_s
  765 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list . $@79 "end of code block"

    "type"               shift, and go to state 311
    "array"              shift, and go to state 312
    "table"              shift, and go to state 313
    "typedecl"           shift, and go to state 314
    "iterator"           shift, and go to state 315
    "smart_ptr"          shift, and go to state 316
    "bool"               shift, and go to state 317
    "void"               shift, and go to state 318
    "string"             shift, and go to state 319
    "auto"               shift, and go to state 320
    "int"                shift, and go to state 321
    "int2"               shift, and go to state 322
    "int3"               shift, and go to state 323
    "int4"               shift, and go to state 324
    "uint"               shift, and go to state 325
    "bitfield"           shift, and go to state 326
    "uint2"              shift, and go to state 327
    "uint3"              shift, and go to state 328
    "uint4"              shift, and go to state 329
    "float"              shift, and go to state 330
    "float2"             shift, and go to state 331
    "float3"             shift, and go to state 332
    "float4"             shift, and go to state 333
    "range"              shift, and go to state 334
    "urange"             shift, and go to state 335
    "range64"            shift, and go to state 336
    "urange64"           shift, and go to state 337
    "block"              shift, and go to state 338
    "int64"              shift, and go to state 339
    "uint64"             shift, and go to state 340
    "double"             shift, and go to state 341
    "function"           shift, and go to state 342
    "lambda"             shift, and go to state 343
    "int8"               shift, and go to state 344
    "uint8"              shift, and go to state 345
    "int16"              shift, and go to state 346
    "uint16"             shift, and go to state 347
    "tuple"              shift, and go to state 348
    "variant"            shift, and go to state 349
    "::"                 shift, and go to state 58
    "$t"                 shift, and go to state 350
    "name"               shift, and go to state 610
    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '$'                  shift, and go to state 351

    $default  reduce using rule 764 ($@79)

    name_in_namespace            go to state 352
    tuple_type                   go to state 613
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    c_or_s                       go to state 614
    type_declaration_no_options  go to state 357
    type_declaration             go to state 615
    $@79                         go to state 616


State 421

  560 variant_alias_type_list: variant_alias_type_list . c_or_s
  561                        | variant_alias_type_list . variant_type c_or_s
  770 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list . $@83 "end of code block"

    "name"               shift, and go to state 617
    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612

    $default  reduce using rule 769 ($@83)

    variant_type  go to state 618
    c_or_s        go to state 619
    $@83          go to state 620


State 422

  186 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 186 (function_name)


State 423

  176 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 176 (function_name)


State 424

  546 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 621
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 425

  297 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 297 (kwd_let_var_or_nothing)


State 426

  298 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 298 (kwd_let_var_or_nothing)


State 427

  545 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_declaration         go to state 624
    variable_name_with_pos_list  go to state 625


State 428

  548 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 369
    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 523 (optional_field_annotation)

    metadata_argument_list         go to state 220
    optional_field_annotation      go to state 371
    function_argument_declaration  go to state 626


State 429

  124 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 124 (optional_function_argument_list)


State 430

  126 optional_function_type: ':' type_declaration .
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418

    $default  reduce using rule 126 (optional_function_type)


State 431

  247 expressions: expressions error .

    $default  reduce using rule 247 (expressions)


State 432

  823 make_struct_decl: "struct" . '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 627


State 433

  826 make_struct_decl: "class" . '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 628


State 434

   78 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 629
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 435

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 436

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 437

   76 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 75 ($@4)

    $@4  go to state 630


State 438

  429 expr: "true" .

    $default  reduce using rule 429 (expr)


State 439

  430 expr: "false" .

    $default  reduce using rule 430 (expr)


State 440

  277 expr_new: "new" . new_type_declaration
  278         | "new" . new_type_declaration '(' use_initializer ')'
  279         | "new" . new_type_declaration '(' expr_list ')'
  280         | "new" . new_type_declaration '(' make_struct_single ')'
  281         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  282         | "new" . make_decl

    "struct"               shift, and go to state 432
    "class"                shift, and go to state 433
    "array"                shift, and go to state 443
    "table"                shift, and go to state 448
    "fixed_array"          shift, and go to state 462
    "default"              shift, and go to state 463
    "tuple"                shift, and go to state 465
    "variant"              shift, and go to state 466
    "::"                   shift, and go to state 58
    "[["                   shift, and go to state 481
    "[{"                   shift, and go to state 482
    "{{"                   shift, and go to state 483
    "name"                 shift, and go to state 59
    "begin of code block"  shift, and go to state 494
    '<'                    shift, and go to state 631
    '['                    shift, and go to state 502

    name_in_namespace           go to state 352
    new_type_declaration        go to state 632
    structure_type_declaration  go to state 633
    make_decl                   go to state 634
    make_struct_decl            go to state 552
    make_tuple_call             go to state 553
    make_dim_decl               go to state 554
    make_table_decl             go to state 555
    array_comprehension         go to state 556


State 441

  324 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  325               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  326               | "typeinfo" . '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  327               | "typeinfo" . name_in_namespace '(' expr ')'
  328               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  329               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59
    '('     shift, and go to state 635

    name_in_namespace  go to state 636


State 442

  323 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 637


State 443

  849 make_dim_decl: "array" . "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'
  852              | "array" . "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'
  855              | "array" . "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'
  856              | "array" . '(' expr_list optional_comma ')'
  859              | "array" . '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    "struct"   shift, and go to state 638
    "tuple"    shift, and go to state 639
    "variant"  shift, and go to state 640
    '<'        shift, and go to state 641
    '('        shift, and go to state 642


State 444

  285 expression_return_no_pipe: "return" .
  286                          | "return" . expr_list
  287                          | "return" . "<-" expr_list
  289 expression_return: "return" . expr_pipe
  290                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "<-"                              shift, and go to state 643
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 285 (expression_return_no_pipe)

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 518
    expression_keyword      go to state 521
    expr_pipe               go to state 644
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 645
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign             go to state 646
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 647
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 445

  423 expr: "null" .

    $default  reduce using rule 423 (expr)


State 446

  283 expression_break: "break" .

    $default  reduce using rule 283 (expression_break)


State 447

  296 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 648


State 448

  870 make_table_decl: "table" . '(' optional_expr_map_tuple_list ')'
  871                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  872                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 649
    '('  shift, and go to state 650


State 449

  271 expression_delete: "delete" . expr
  272                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "explicit"                        shift, and go to state 651
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 652
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 450

  473 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 653


State 451

   79 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 654
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 452

   81 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 655


State 453

  314 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 656


State 454

  317 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 657


State 455

  474 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 658


State 456

  284 expression_continue: "continue" .

    $default  reduce using rule 284 (expression_continue)


State 457

  244 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 659


State 458

  320 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 660


State 459

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 661


State 460

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "label"                           shift, and go to state 662
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 663
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 461

   77 expression_unsafe: "unsafe" . expression_block
  505 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 286
    '('                    shift, and go to state 664

    expression_block  go to state 665


State 462

  860 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  863              | "fixed_array" . '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 666
    '('  shift, and go to state 667


State 463

  832 make_struct_decl: "default" . '<' $@94 type_declaration_no_options '>' $@95 use_initializer

    '<'  shift, and go to state 668


State 464

  666 basic_type_declaration: "bitfield" .

    $default  reduce using rule 666 (basic_type_declaration)


State 465

  838 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  841                | "tuple" . '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 669
    '('  shift, and go to state 670


State 466

  829 make_struct_decl: "variant" . '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    '<'  shift, and go to state 671


State 467

  223 expr_call_pipe: "generator" . '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  475 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  476     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 672


State 468

  291 expression_yield_no_pipe: "yield" . expr
  292                         | "yield" . "<-" expr
  294 expression_yield: "yield" . expr_pipe
  295                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "<-"                              shift, and go to state 673
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 518
    expression_keyword      go to state 521
    expr_pipe               go to state 674
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign             go to state 646
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 675
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 469

  459 expr: "++" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 676
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 470

  460 expr: "--" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 677
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 471

  266 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 504
    '@'                    shift, and go to state 678

    expression_block  go to state 679
    block_or_lambda   go to state 680
    expr_block        go to state 681


State 472

  264 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 504
    '@'                    shift, and go to state 678

    expression_block  go to state 679
    block_or_lambda   go to state 680
    expr_block        go to state 682


State 473

  265 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 504
    '@'                    shift, and go to state 678

    expression_block  go to state 679
    block_or_lambda   go to state 680
    expr_block        go to state 683


State 474

  507 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 684


State 475

  508 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 685


State 476

  509 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 686


State 477

  510 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 687


State 478

  511 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 688


State 479

  513 expr_mtag: "$c" . '(' expr ')' '(' ')'
  514          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 689


State 480

  512 expr_mtag: "..." .

    $default  reduce using rule 512 (expr_mtag)


State 481

  815 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  816                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  817                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  818                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  845 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  879 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 690
    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 691


State 482

  819 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  820                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  846 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  880 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 692
    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 693


State 483

  869 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  882 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "for"                             shift, and go to state 694
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 695
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_map_tuple          go to state 696
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table              go to state 697
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 484

  351 expr_numeric_const: "integer constant" .

    $default  reduce using rule 351 (expr_numeric_const)


State 485

  353 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 353 (expr_numeric_const)


State 486

  352 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 352 (expr_numeric_const)


State 487

  354 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 354 (expr_numeric_const)


State 488

  355 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 355 (expr_numeric_const)


State 489

  356 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 356 (expr_numeric_const)


State 490

  357 expr_numeric_const: "double constant" .

    $default  reduce using rule 357 (expr_numeric_const)


State 491

  248 expr_keyword: "keyword" . expr expression_block
  259 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '<'                               shift, and go to state 698
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 699
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 492

  262 expression_keyword: "type function" . '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    '<'  shift, and go to state 700


State 493

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 701


State 494

  868 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  881 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "for"                             shift, and go to state 702
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 695
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_map_tuple          go to state 703
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    expr_map_tuple_list     go to state 704
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 495

  219 expression_block: "begin of code block" expressions "end of code block" .
  220                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 705

    $default  reduce using rule 219 (expression_block)


State 496

  224 expression_any: "end of expression" .

    $default  reduce using rule 224 (expression_any)


State 497

  436 expr: '-' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 706
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 498

  435 expr: '+' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 707
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 499

  472 expr: '*' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 708
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 500

  434 expr: '~' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 709
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 501

  433 expr: '!' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 710
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 502

  844 make_dim_decl: '[' . expr_list optional_comma ']'
  877 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  878                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "for"                             shift, and go to state 711
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "iterator"                        shift, and go to state 712
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 713
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 503

  463 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 715
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 504

  335 block_or_lambda: '$' .

    $default  reduce using rule 335 (block_or_lambda)


State 505

  336 block_or_lambda: '@' .
  337                | '@' . '@'
  404 func_addr_expr: '@' . '@' func_addr_name
  407               | '@' . '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  410               | '@' . '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  522 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 716

    $default  reduce using rule 336 (block_or_lambda)


State 506

  427 expr: string_builder .

    $default  reduce using rule 427 (expr)


State 507

  426 expr: expr_reader .

    $default  reduce using rule 426 (expr)


State 508

  242 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 717


State 509

  243 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 718


State 510

   72 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 719
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 511

   74 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 720


State 512

  240 expression_any: expression_if_then_else .

    $default  reduce using rule 240 (expression_any)


State 513

  235 expression_any: expression_for_loop .

    $default  reduce using rule 235 (expression_any)


State 514

  232 expression_any: expression_unsafe .

    $default  reduce using rule 232 (expression_any)


State 515

  231 expression_any: expression_while_loop .

    $default  reduce using rule 231 (expression_any)


State 516

  233 expression_any: expression_with .

    $default  reduce using rule 233 (expression_any)


State 517

  234 expression_any: expression_with_alias .

    $default  reduce using rule 234 (expression_any)


State 518

  267 expr_pipe: expr_call_pipe .

    $default  reduce using rule 267 (expr_pipe)


State 519

  246 expressions: expressions expression_any .

    $default  reduce using rule 246 (expressions)


State 520

  226 expression_any: expr_keyword .

    $default  reduce using rule 226 (expression_any)


State 521

  222 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  506 expr: expression_keyword .

    '$'  shift, and go to state 504
    '@'  shift, and go to state 678

    '$'       [reduce using rule 506 (expr)]
    '@'       [reduce using rule 506 (expr)]
    $default  reduce using rule 506 (expr)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 722


State 522

  225 expression_any: expr_pipe .

    $default  reduce using rule 225 (expression_any)


State 523

  398 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  399                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  418 expr_call: name_in_namespace . '(' ')'
  419          | name_in_namespace . '(' make_struct_single ')'
  420          | name_in_namespace . '(' expr_list ')'
  424 expr: name_in_namespace .
  504     | name_in_namespace . "name"

    "name"  shift, and go to state 723
    '('     shift, and go to state 724

    "name"    [reduce using rule 424 (expr)]
    '('       [reduce using rule 424 (expr)]
    $default  reduce using rule 424 (expr)


State 524

  229 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 725


State 525

  497 expr: expr_new .

    $default  reduce using rule 497 (expr)


State 526

   70 expression_if_one_liner: expression_break .
  236 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 726

    $default  reduce using rule 70 (expression_if_one_liner)


State 527

   71 expression_if_one_liner: expression_continue .
  237 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 727

    $default  reduce using rule 71 (expression_if_one_liner)


State 528

   68 expression_if_one_liner: expression_return_no_pipe .
  288 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 728

    $default  reduce using rule 68 (expression_if_one_liner)


State 529

  238 expression_any: expression_return .

    $default  reduce using rule 238 (expression_any)


State 530

   69 expression_if_one_liner: expression_yield_no_pipe .
  293 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 729

    $default  reduce using rule 69 (expression_if_one_liner)


State 531

  239 expression_any: expression_yield .

    $default  reduce using rule 239 (expression_any)


State 532

  241 expression_any: expression_try_catch .

    $default  reduce using rule 241 (expression_any)


State 533

  310 expression_let: kwd_let . optional_in_scope let_variable_declaration
  311               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 730

    $default  reduce using rule 303 (optional_in_scope)

    optional_in_scope  go to state 731


State 534

  230 expression_any: expression_let .

    $default  reduce using rule 230 (expression_any)


State 535

  496 expr: expr_cast .

    $default  reduce using rule 496 (expr)


State 536

  495 expr: expr_type_decl .

    $default  reduce using rule 495 (expr)


State 537

  494 expr: expr_type_info .

    $default  reduce using rule 494 (expr)


State 538

  348 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 120 (optional_annotation_list)

    optional_annotation_list  go to state 732


State 539

  500 expr: expr_full_block .

    $default  reduce using rule 500 (expr)


State 540

  425 expr: expr_numeric_const .

    $default  reduce using rule 425 (expr)


State 541

  228 expression_any: expr_assign . "end of expression"
  263 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 733
    "end of expression"  shift, and go to state 734


State 542

  227 expression_any: expr_assign_pipe .

    $default  reduce using rule 227 (expression_any)


State 543

  499 expr: expr_named_call .

    $default  reduce using rule 499 (expr)


State 544

  498 expr: expr_method_call .

    $default  reduce using rule 498 (expr)


State 545

  470 expr: func_addr_expr .

    $default  reduce using rule 470 (expr)


State 546

  431 expr: expr_field .

    $default  reduce using rule 431 (expr)


State 547

  471 expr: expr_call .

    $default  reduce using rule 471 (expr)


State 548

   67 expression_if_one_liner: expr .
  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_assign: expr .
  359            | expr . '=' expr
  360            | expr . "<-" expr
  361            | expr . ":=" expr
  362            | expr . "&=" expr
  363            | expr . "|=" expr
  364            | expr . "^=" expr
  365            | expr . "&&=" expr
  366            | expr . "||=" expr
  367            | expr . "^^=" expr
  368            | expr . "+=" expr
  369            | expr . "-=" expr
  370            | expr . "*=" expr
  371            | expr . "/=" expr
  372            | expr . "%=" expr
  373            | expr . "<<=" expr
  374            | expr . ">>=" expr
  375            | expr . "<<<=" expr
  376            | expr . ">>>=" expr
  381 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  382                 | expr . "<-" expr_assign_pipe_right
  383                 | expr . "&=" expr_assign_pipe_right
  384                 | expr . "|=" expr_assign_pipe_right
  385                 | expr . "^=" expr_assign_pipe_right
  386                 | expr . "&&=" expr_assign_pipe_right
  387                 | expr . "||=" expr_assign_pipe_right
  388                 | expr . "^^=" expr_assign_pipe_right
  389                 | expr . "+=" expr_assign_pipe_right
  390                 | expr . "-=" expr_assign_pipe_right
  391                 | expr . "*=" expr_assign_pipe_right
  392                 | expr . "/=" expr_assign_pipe_right
  393                 | expr . "%=" expr_assign_pipe_right
  394                 | expr . "<<=" expr_assign_pipe_right
  395                 | expr . ">>=" expr_assign_pipe_right
  396                 | expr . "<<<=" expr_assign_pipe_right
  397                 | expr . ">>>=" expr_assign_pipe_right
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 735
    "as"    shift, and go to state 736
    "+="    shift, and go to state 737
    "-="    shift, and go to state 738
    "/="    shift, and go to state 739
    "*="    shift, and go to state 740
    "%="    shift, and go to state 741
    "&="    shift, and go to state 742
    "|="    shift, and go to state 743
    "^="    shift, and go to state 744
    "<<"    shift, and go to state 745
    ">>"    shift, and go to state 746
    "++"    shift, and go to state 747
    "--"    shift, and go to state 748
    "<="    shift, and go to state 749
    "<<="   shift, and go to state 750
    ">>="   shift, and go to state 751
    ">="    shift, and go to state 752
    "=="    shift, and go to state 753
    "!="    shift, and go to state 754
    "->"    shift, and go to state 755
    "<-"    shift, and go to state 756
    "??"    shift, and go to state 757
    "?."    shift, and go to state 758
    "?["    shift, and go to state 759
    "<|"    shift, and go to state 760
    "|>"    shift, and go to state 761
    ":="    shift, and go to state 762
    "<<<"   shift, and go to state 763
    ">>>"   shift, and go to state 764
    "<<<="  shift, and go to state 765
    ">>>="  shift, and go to state 766
    "&&"    shift, and go to state 767
    "||"    shift, and go to state 768
    "^^"    shift, and go to state 769
    "&&="   shift, and go to state 770
    "||="   shift, and go to state 771
    "^^="   shift, and go to state 772
    ".."    shift, and go to state 773
    '='     shift, and go to state 774
    '?'     shift, and go to state 775
    '|'     shift, and go to state 776
    '^'     shift, and go to state 777
    '&'     shift, and go to state 778
    '<'     shift, and go to state 779
    '>'     shift, and go to state 780
    '-'     shift, and go to state 781
    '+'     shift, and go to state 782
    '*'     shift, and go to state 783
    '/'     shift, and go to state 784
    '%'     shift, and go to state 785
    '.'     shift, and go to state 786
    '['     shift, and go to state 787
    '$'     shift, and go to state 504
    '@'     shift, and go to state 678

    "if"      reduce using rule 67 (expression_if_one_liner)
    $default  reduce using rule 358 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 549

  432 expr: expr_mtag .

    $default  reduce using rule 432 (expr)


State 550

  421 expr_call: basic_type_declaration . '(' ')'
  422          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 789


State 551

  428 expr: make_decl .

    $default  reduce using rule 428 (expr)


State 552

  776 make_decl: make_struct_decl .

    $default  reduce using rule 776 (make_decl)


State 553

  780 make_decl: make_tuple_call .

    $default  reduce using rule 780 (make_decl)


State 554

  777 make_decl: make_dim_decl .

    $default  reduce using rule 777 (make_decl)


State 555

  778 make_decl: make_table_decl .

    $default  reduce using rule 778 (make_decl)


State 556

  779 make_decl: array_comprehension .

    $default  reduce using rule 779 (make_decl)


State 557

  598 enum_list: enum_list "name" . "end of expression"
  599          | enum_list "name" . '=' expr "end of expression"

    "end of expression"  shift, and go to state 790
    '='                  shift, and go to state 791


State 558

  597 enum_list: enum_list "end of expression" .

    $default  reduce using rule 597 (enum_list)


State 559

  616 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 . "end of code block"

    "end of code block"  shift, and go to state 792


State 560

  619 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 . enum_list $@44 "end of code block"

    $default  reduce using rule 596 (enum_list)

    enum_list  go to state 793


State 561

  621 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 621 (optional_structure_parent)


State 562

  539 struct_variable_declaration_list: struct_variable_declaration_list . $@34 structure_variable_declaration "end of expression"
  541                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  543                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  544                                 | struct_variable_declaration_list . '[' annotation_list ']' "end of expression"
  631 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 794
    '['                  shift, and go to state 795

    "def"     reduce using rule 120 (optional_annotation_list)
    $default  reduce using rule 538 ($@34)

    optional_annotation_list  go to state 796
    $@34                      go to state 797


State 563

  587 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 587 (global_variable_declaration_list)


State 564

  524 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 524 (optional_field_annotation)


State 565

  505 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 664


State 566

  475 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  476     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 798


State 567

  259 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    '<'  shift, and go to state 698


State 568

  506 expr: expression_keyword .

    $default  reduce using rule 506 (expr)


State 569

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  576 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 799


State 570

  577 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 577 (let_variable_name_with_pos_list)


State 571

  578 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  579                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 800

    $default  reduce using rule 578 (let_variable_name_with_pos_list)


State 572

  580 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  581                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  582                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 407
    "implicit"           shift, and go to state 408
    "explicit"           shift, and go to state 409
    "=="                 shift, and go to state 410
    "<-"                 shift, and go to state 573
    "??"                 shift, and go to state 411
    ":="                 shift, and go to state 574
    "end of expression"  shift, and go to state 801
    '='                  shift, and go to state 575
    '?'                  shift, and go to state 412
    '&'                  shift, and go to state 413
    '-'                  shift, and go to state 414
    '['                  shift, and go to state 415
    '#'                  shift, and go to state 416

    copy_or_move_or_clone  go to state 802
    dim_list               go to state 417


State 573

  571 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 571 (copy_or_move_or_clone)


State 574

  572 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 572 (copy_or_move_or_clone)


State 575

  570 copy_or_move_or_clone: '=' .

    $default  reduce using rule 570 (copy_or_move_or_clone)


State 576

  583 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  584                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 518
    expression_keyword      go to state 521
    expr_pipe               go to state 803
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign             go to state 646
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 804
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 577

  701 type_declaration_no_options: "type" '<' $@49 . type_declaration '>' $@50

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 805


State 578

  724 type_declaration_no_options: "array" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 806


State 579

  727 type_declaration_no_options: "table" '<' $@56 . table_type_pair '>' $@57

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    table_type_pair              go to state 807
    type_declaration_no_options  go to state 357
    type_declaration             go to state 808


State 580

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  702 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 809


State 581

  730 type_declaration_no_options: "iterator" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 810


State 582

  720 type_declaration_no_options: "smart_ptr" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 811


State 583

  677 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 812


State 584

  686 bitfield_type_declaration: "bitfield" '<' $@47 . bitfield_bits '>' $@48

    "name"  shift, and go to state 813

    bitfield_bits  go to state 814


State 585

  734 type_declaration_no_options: "block" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 815


State 586

  737 type_declaration_no_options: "block" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 284

    $default  reduce using rule 122 (optional_function_argument_list)

    optional_function_argument_list  go to state 816


State 587

  741 type_declaration_no_options: "function" '<' $@64 . type_declaration '>' $@65

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 817


State 588

  744 type_declaration_no_options: "function" '<' $@66 . optional_function_argument_list optional_function_type '>' $@67

    '('  shift, and go to state 284

    $default  reduce using rule 122 (optional_function_argument_list)

    optional_function_argument_list  go to state 818


State 589

  748 type_declaration_no_options: "lambda" '<' $@68 . type_declaration '>' $@69

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 819


State 590

  751 type_declaration_no_options: "lambda" '<' $@70 . optional_function_argument_list optional_function_type '>' $@71

    '('  shift, and go to state 284

    $default  reduce using rule 122 (optional_function_argument_list)

    optional_function_argument_list  go to state 820


State 591

  754 type_declaration_no_options: "tuple" '<' $@72 . tuple_type_list '>' $@73

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 610
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    tuple_type                   go to state 821
    tuple_type_list              go to state 822
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 615


State 592

  757 type_declaration_no_options: "variant" '<' $@74 . variant_type_list '>' $@75

    "name"  shift, and go to state 617

    variant_type       go to state 823
    variant_type_list  go to state 824


State 593

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  678 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 825


State 594

  705 type_declaration_no_options: '$' name_in_namespace '<' . $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 704 ($@51)

    $@51  go to state 826


State 595

  703 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 249 (optional_expr_list)

    string_builder          go to state 506
    expr_reader             go to state 507
    optional_expr_list      go to state 827
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 828
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 596

  715 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 715 (type_declaration_no_options)


State 597

  716 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 716 (type_declaration_no_options)


State 598

  709 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 709 (type_declaration_no_options)


State 599

  711 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 711 (type_declaration_no_options)


State 600

  706 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 829


State 601

  714 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 714 (type_declaration_no_options)


State 602

  698 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 698 (type_declaration_no_options)


State 603

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  691 dim_list: '[' expr . ']'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ']'    shift, and go to state 830


State 604

  692 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 831
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 605

  760 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 760 (type_declaration)


State 606

  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"
  759 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    $default  reduce using rule 759 (type_declaration)

    dim_list  go to state 417


State 607

  683 bitfield_alias_bits: bitfield_alias_bits "name" . "end of expression"

    "end of expression"  shift, and go to state 832


State 608

  682 bitfield_alias_bits: bitfield_alias_bits "end of expression" .

    $default  reduce using rule 682 (bitfield_alias_bits)


State 609

  775 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 . "end of code block"

    "end of code block"  shift, and go to state 833


State 610

  268 name_in_namespace: "name" .
  269                  | "name" . "::" "name"
  550 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 98
    ':'   shift, and go to state 834

    $default  reduce using rule 268 (name_in_namespace)


State 611

  688 c_or_s: "end of expression" .

    $default  reduce using rule 688 (c_or_s)


State 612

  687 c_or_s: ',' .

    $default  reduce using rule 687 (c_or_s)


State 613

  555 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612

    c_or_s  go to state 835


State 614

  554 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 554 (tuple_alias_type_list)


State 615

  549 tuple_type: type_declaration .
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418

    $default  reduce using rule 549 (tuple_type)


State 616

  765 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 . "end of code block"

    "end of code block"  shift, and go to state 836


State 617

  556 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 837


State 618

  561 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612

    c_or_s  go to state 838


State 619

  560 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 560 (variant_alias_type_list)


State 620

  770 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 . "end of code block"

    "end of code block"  shift, and go to state 839


State 621

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  546 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 840


State 622

  636 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 841


State 623

  635 variable_name_with_pos_list: "name" .
  637                            | "name" . "aka" "name"

    "aka"  shift, and go to state 842

    $default  reduce using rule 635 (variable_name_with_pos_list)


State 624

  545 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 545 (function_argument_declaration)


State 625

  564 variable_declaration: variable_name_with_pos_list .
  565                     | variable_name_with_pos_list . '&'
  566                     | variable_name_with_pos_list . ':' type_declaration
  567                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  568                     | variable_name_with_pos_list . copy_or_move expr
  569                     | variable_name_with_pos_list . copy_or_move expr_pipe
  638 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  639                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 843
    ','   shift, and go to state 844
    '='   shift, and go to state 845
    ':'   shift, and go to state 846
    '&'   shift, and go to state 847

    $default  reduce using rule 564 (variable_declaration)

    copy_or_move  go to state 848


State 626

  548 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 548 (function_argument_list)


State 627

  823 make_struct_decl: "struct" '<' . $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 821 ($@88)

    $@88  go to state 849


State 628

  826 make_struct_decl: "class" '<' . $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 824 ($@90)

    $@90  go to state 850


State 629

   78 expression_while_loop: "while" expr . expression_block
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 735
    "as"                   shift, and go to state 736
    "<<"                   shift, and go to state 745
    ">>"                   shift, and go to state 746
    "++"                   shift, and go to state 747
    "--"                   shift, and go to state 748
    "<="                   shift, and go to state 749
    ">="                   shift, and go to state 752
    "=="                   shift, and go to state 753
    "!="                   shift, and go to state 754
    "->"                   shift, and go to state 755
    "??"                   shift, and go to state 757
    "?."                   shift, and go to state 758
    "?["                   shift, and go to state 759
    "<|"                   shift, and go to state 760
    "|>"                   shift, and go to state 761
    "<<<"                  shift, and go to state 763
    ">>>"                  shift, and go to state 764
    "&&"                   shift, and go to state 767
    "||"                   shift, and go to state 768
    "^^"                   shift, and go to state 769
    ".."                   shift, and go to state 773
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 775
    '|'                    shift, and go to state 776
    '^'                    shift, and go to state 777
    '&'                    shift, and go to state 778
    '<'                    shift, and go to state 779
    '>'                    shift, and go to state 780
    '-'                    shift, and go to state 781
    '+'                    shift, and go to state 782
    '*'                    shift, and go to state 783
    '/'                    shift, and go to state 784
    '%'                    shift, and go to state 785
    '.'                    shift, and go to state 786
    '['                    shift, and go to state 787

    expression_block  go to state 851


State 630

   76 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_name_with_pos_list  go to state 852


State 631

  275 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 273 ($@11)

    $@11  go to state 853


State 632

  277 expr_new: "new" new_type_declaration .
  278         | "new" new_type_declaration . '(' use_initializer ')'
  279         | "new" new_type_declaration . '(' expr_list ')'
  280         | "new" new_type_declaration . '(' make_struct_single ')'
  281         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 854

    '('       [reduce using rule 277 (expr_new)]
    $default  reduce using rule 277 (expr_new)


State 633

  276 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 276 (new_type_declaration)


State 634

  282 expr_new: "new" make_decl .

    $default  reduce using rule 282 (expr_new)


State 635

  324 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  325               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  326               | "typeinfo" '(' . name_in_namespace '<' "name" c_or_s "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 855


State 636

  327 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  328               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  329               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 856
    '('  shift, and go to state 857


State 637

  323 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 321 ($@19)

    $@19  go to state 858


State 638

  849 make_dim_decl: "array" "struct" . '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 859


State 639

  852 make_dim_decl: "array" "tuple" . '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 860


State 640

  855 make_dim_decl: "array" "variant" . '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    '<'  shift, and go to state 861


State 641

  859 make_dim_decl: "array" '<' . $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    $default  reduce using rule 857 ($@104)

    $@104  go to state 862


State 642

  856 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 863
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 643

  287 expression_return_no_pipe: "return" "<-" . expr_list
  290 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 518
    expression_keyword      go to state 521
    expr_pipe               go to state 864
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 865
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign             go to state 646
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 647
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 644

  289 expression_return: "return" expr_pipe .

    $default  reduce using rule 289 (expression_return)


State 645

  286 expression_return_no_pipe: "return" expr_list .
  331 expr_list: expr_list . ',' expr

    ','  shift, and go to state 866

    $default  reduce using rule 286 (expression_return_no_pipe)


State 646

  263 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 733


State 647

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  330 expr_list: expr .
  358 expr_assign: expr .
  359            | expr . '=' expr
  360            | expr . "<-" expr
  361            | expr . ":=" expr
  362            | expr . "&=" expr
  363            | expr . "|=" expr
  364            | expr . "^=" expr
  365            | expr . "&&=" expr
  366            | expr . "||=" expr
  367            | expr . "^^=" expr
  368            | expr . "+=" expr
  369            | expr . "-=" expr
  370            | expr . "*=" expr
  371            | expr . "/=" expr
  372            | expr . "%=" expr
  373            | expr . "<<=" expr
  374            | expr . ">>=" expr
  375            | expr . "<<<=" expr
  376            | expr . ">>>=" expr
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 735
    "as"    shift, and go to state 736
    "+="    shift, and go to state 867
    "-="    shift, and go to state 868
    "/="    shift, and go to state 869
    "*="    shift, and go to state 870
    "%="    shift, and go to state 871
    "&="    shift, and go to state 872
    "|="    shift, and go to state 873
    "^="    shift, and go to state 874
    "<<"    shift, and go to state 745
    ">>"    shift, and go to state 746
    "++"    shift, and go to state 747
    "--"    shift, and go to state 748
    "<="    shift, and go to state 749
    "<<="   shift, and go to state 875
    ">>="   shift, and go to state 876
    ">="    shift, and go to state 752
    "=="    shift, and go to state 753
    "!="    shift, and go to state 754
    "->"    shift, and go to state 755
    "<-"    shift, and go to state 877
    "??"    shift, and go to state 757
    "?."    shift, and go to state 758
    "?["    shift, and go to state 759
    "<|"    shift, and go to state 760
    "|>"    shift, and go to state 761
    ":="    shift, and go to state 762
    "<<<"   shift, and go to state 763
    ">>>"   shift, and go to state 764
    "<<<="  shift, and go to state 878
    ">>>="  shift, and go to state 879
    "&&"    shift, and go to state 767
    "||"    shift, and go to state 768
    "^^"    shift, and go to state 769
    "&&="   shift, and go to state 880
    "||="   shift, and go to state 881
    "^^="   shift, and go to state 882
    ".."    shift, and go to state 773
    '='     shift, and go to state 883
    '?'     shift, and go to state 775
    '|'     shift, and go to state 776
    '^'     shift, and go to state 777
    '&'     shift, and go to state 778
    '<'     shift, and go to state 779
    '>'     shift, and go to state 780
    '-'     shift, and go to state 781
    '+'     shift, and go to state 782
    '*'     shift, and go to state 783
    '/'     shift, and go to state 784
    '%'     shift, and go to state 785
    '.'     shift, and go to state 786
    '['     shift, and go to state 787
    '$'     shift, and go to state 504
    '@'     shift, and go to state 678

    " <|"     reduce using rule 358 (expr_assign)
    $default  reduce using rule 330 (expr_list)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 648

  296 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 884


State 649

  871 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  872                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 885


State 650

  870 make_table_decl: "table" '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 253 (optional_expr_map_tuple_list)

    string_builder                go to state 506
    expr_reader                   go to state 507
    optional_expr_map_tuple_list  go to state 886
    expression_keyword            go to state 568
    name_in_namespace             go to state 523
    expr_new                      go to state 525
    expr_cast                     go to state 535
    expr_type_decl                go to state 536
    expr_type_info                go to state 537
    block_or_lambda               go to state 538
    expr_full_block               go to state 539
    expr_numeric_const            go to state 540
    expr_named_call               go to state 543
    expr_method_call              go to state 544
    func_addr_expr                go to state 545
    expr_field                    go to state 546
    expr_call                     go to state 547
    expr                          go to state 695
    expr_mtag                     go to state 549
    basic_type_declaration        go to state 550
    make_decl                     go to state 551
    make_struct_decl              go to state 552
    make_map_tuple                go to state 703
    make_tuple_call               go to state 553
    make_dim_decl                 go to state 554
    expr_map_tuple_list           go to state 887
    make_table_decl               go to state 555
    array_comprehension           go to state 556


State 651

  272 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 888
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 652

  271 expression_delete: "delete" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 271 (expression_delete)


State 653

  473 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 889
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 654

   79 expression_with: "with" expr . expression_block
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 735
    "as"                   shift, and go to state 736
    "<<"                   shift, and go to state 745
    ">>"                   shift, and go to state 746
    "++"                   shift, and go to state 747
    "--"                   shift, and go to state 748
    "<="                   shift, and go to state 749
    ">="                   shift, and go to state 752
    "=="                   shift, and go to state 753
    "!="                   shift, and go to state 754
    "->"                   shift, and go to state 755
    "??"                   shift, and go to state 757
    "?."                   shift, and go to state 758
    "?["                   shift, and go to state 759
    "<|"                   shift, and go to state 760
    "|>"                   shift, and go to state 761
    "<<<"                  shift, and go to state 763
    ">>>"                  shift, and go to state 764
    "&&"                   shift, and go to state 767
    "||"                   shift, and go to state 768
    "^^"                   shift, and go to state 769
    ".."                   shift, and go to state 773
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 775
    '|'                    shift, and go to state 776
    '^'                    shift, and go to state 777
    '&'                    shift, and go to state 778
    '<'                    shift, and go to state 779
    '>'                    shift, and go to state 780
    '-'                    shift, and go to state 781
    '+'                    shift, and go to state 782
    '*'                    shift, and go to state 783
    '/'                    shift, and go to state 784
    '%'                    shift, and go to state 785
    '.'                    shift, and go to state 786
    '['                    shift, and go to state 787

    expression_block  go to state 890


State 655

   81 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 891


State 656

  314 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 312 ($@13)

    $@13  go to state 892


State 657

  317 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 315 ($@15)

    $@15  go to state 893


State 658

  474 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 894
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 659

  244 expression_any: "pass" "end of expression" .

    $default  reduce using rule 244 (expression_any)


State 660

  320 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 318 ($@17)

    $@17  go to state 895


State 661

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 896


State 662

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 897


State 663

   56 expression_goto: "goto" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 56 (expression_goto)


State 664

  505 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 898
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 665

   77 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 77 (expression_unsafe)


State 666

  863 make_dim_decl: "fixed_array" '<' . $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 861 ($@106)

    $@106  go to state 899


State 667

  860 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 900
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 668

  832 make_struct_decl: "default" '<' . $@94 type_declaration_no_options '>' $@95 use_initializer

    $default  reduce using rule 830 ($@94)

    $@94  go to state 901


State 669

  841 make_tuple_call: "tuple" '<' . $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 839 ($@96)

    $@96  go to state 902


State 670

  838 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 903
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 671

  829 make_struct_decl: "variant" '<' . $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    $default  reduce using rule 827 ($@92)

    $@92  go to state 904


State 672

  223 expr_call_pipe: "generator" '<' . type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  475 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  476     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 905


State 673

  292 expression_yield_no_pipe: "yield" "<-" . expr
  295 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 518
    expression_keyword      go to state 521
    expr_pipe               go to state 906
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign             go to state 646
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 907
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 674

  294 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 294 (expression_yield)


State 675

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  291 expression_yield_no_pipe: "yield" expr .
  358 expr_assign: expr .
  359            | expr . '=' expr
  360            | expr . "<-" expr
  361            | expr . ":=" expr
  362            | expr . "&=" expr
  363            | expr . "|=" expr
  364            | expr . "^=" expr
  365            | expr . "&&=" expr
  366            | expr . "||=" expr
  367            | expr . "^^=" expr
  368            | expr . "+=" expr
  369            | expr . "-=" expr
  370            | expr . "*=" expr
  371            | expr . "/=" expr
  372            | expr . "%=" expr
  373            | expr . "<<=" expr
  374            | expr . ">>=" expr
  375            | expr . "<<<=" expr
  376            | expr . ">>>=" expr
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 735
    "as"    shift, and go to state 736
    "+="    shift, and go to state 867
    "-="    shift, and go to state 868
    "/="    shift, and go to state 869
    "*="    shift, and go to state 870
    "%="    shift, and go to state 871
    "&="    shift, and go to state 872
    "|="    shift, and go to state 873
    "^="    shift, and go to state 874
    "<<"    shift, and go to state 745
    ">>"    shift, and go to state 746
    "++"    shift, and go to state 747
    "--"    shift, and go to state 748
    "<="    shift, and go to state 749
    "<<="   shift, and go to state 875
    ">>="   shift, and go to state 876
    ">="    shift, and go to state 752
    "=="    shift, and go to state 753
    "!="    shift, and go to state 754
    "->"    shift, and go to state 755
    "<-"    shift, and go to state 877
    "??"    shift, and go to state 757
    "?."    shift, and go to state 758
    "?["    shift, and go to state 759
    "<|"    shift, and go to state 760
    "|>"    shift, and go to state 761
    ":="    shift, and go to state 762
    "<<<"   shift, and go to state 763
    ">>>"   shift, and go to state 764
    "<<<="  shift, and go to state 878
    ">>>="  shift, and go to state 879
    "&&"    shift, and go to state 767
    "||"    shift, and go to state 768
    "^^"    shift, and go to state 769
    "&&="   shift, and go to state 880
    "||="   shift, and go to state 881
    "^^="   shift, and go to state 882
    ".."    shift, and go to state 773
    '='     shift, and go to state 883
    '?'     shift, and go to state 775
    '|'     shift, and go to state 776
    '^'     shift, and go to state 777
    '&'     shift, and go to state 778
    '<'     shift, and go to state 779
    '>'     shift, and go to state 780
    '-'     shift, and go to state 781
    '+'     shift, and go to state 782
    '*'     shift, and go to state 783
    '/'     shift, and go to state 784
    '%'     shift, and go to state 785
    '.'     shift, and go to state 786
    '['     shift, and go to state 787
    '$'     shift, and go to state 504
    '@'     shift, and go to state 678

    " <|"     reduce using rule 358 (expr_assign)
    $default  reduce using rule 291 (expression_yield_no_pipe)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 676

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  459     | "++" expr .
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 459 (expr)


State 677

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  460     | "--" expr .
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 460 (expr)


State 678

  336 block_or_lambda: '@' .
  337                | '@' . '@'

    '@'  shift, and go to state 908

    $default  reduce using rule 336 (block_or_lambda)


State 679

  346 expr_block: expression_block .

    $default  reduce using rule 346 (expr_block)


State 680

  347 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 120 (optional_annotation_list)

    optional_annotation_list  go to state 909


State 681

  266 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 266 (expr_pipe)


State 682

  264 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 264 (expr_pipe)


State 683

  265 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 265 (expr_pipe)


State 684

  507 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 910
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 685

  508 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 911
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 686

  509 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 912
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 687

  510 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 913
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 688

  511 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 914
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 689

  513 expr_mtag: "$c" '(' . expr ')' '(' ')'
  514          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 915
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 690

  879 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_name_with_pos_list  go to state 916


State 691

  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"
  815 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  816                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  817                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  818                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  845 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "const"                           shift, and go to state 407
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "where"                           shift, and go to state 917
    "reinterpret"                     shift, and go to state 458
    "implicit"                        shift, and go to state 408
    "explicit"                        shift, and go to state 409
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "=="                              shift, and go to state 410
    "??"                              shift, and go to state 411
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "$f"                              shift, and go to state 918
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 919
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '?'                               shift, and go to state 412
    '&'                               shift, and go to state 413
    '-'                               shift, and go to state 920
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 921
    '('                               shift, and go to state 922
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505
    '#'                               shift, and go to state 416

    $default  reduce using rule 799 (optional_block)

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 923
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    dim_list                go to state 417
    make_decl               go to state 551
    make_struct_fields      go to state 924
    make_struct_dim         go to state 925
    optional_block          go to state 926
    make_struct_decl        go to state 552
    make_tuple              go to state 927
    make_tuple_call         go to state 553
    make_dim                go to state 928
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 692

  880 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_name_with_pos_list  go to state 929


State 693

  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"
  819 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  820                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  846 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "const"                           shift, and go to state 407
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "implicit"                        shift, and go to state 408
    "explicit"                        shift, and go to state 409
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "=="                              shift, and go to state 410
    "??"                              shift, and go to state 411
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "$f"                              shift, and go to state 918
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 919
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '?'                               shift, and go to state 412
    '&'                               shift, and go to state 413
    '-'                               shift, and go to state 920
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 921
    '('                               shift, and go to state 930
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505
    '#'                               shift, and go to state 416

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 923
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    dim_list                go to state 417
    make_decl               go to state 551
    make_struct_fields      go to state 924
    make_struct_dim         go to state 931
    make_struct_decl        go to state 552
    make_tuple              go to state 927
    make_tuple_call         go to state 553
    make_dim                go to state 932
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 694

  882 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_name_with_pos_list  go to state 933


State 695

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  836 make_map_tuple: expr . "=>" expr
  837               | expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "=>"   shift, and go to state 934
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 837 (make_map_tuple)


State 696

  864 make_table: make_map_tuple .

    $default  reduce using rule 864 (make_table)


State 697

  865 make_table: make_table . "end of expression" make_map_tuple
  869 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 935
    "end of expression"  shift, and go to state 936
    ";}}"                shift, and go to state 937

    optional_trailing_semicolon_cur_cur  go to state 938


State 698

  259 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options_list '>' $@8 expr

    $default  reduce using rule 257 ($@7)

    $@7  go to state 939


State 699

  248 expr_keyword: "keyword" expr . expression_block
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 735
    "as"                   shift, and go to state 736
    "<<"                   shift, and go to state 745
    ">>"                   shift, and go to state 746
    "++"                   shift, and go to state 747
    "--"                   shift, and go to state 748
    "<="                   shift, and go to state 749
    ">="                   shift, and go to state 752
    "=="                   shift, and go to state 753
    "!="                   shift, and go to state 754
    "->"                   shift, and go to state 755
    "??"                   shift, and go to state 757
    "?."                   shift, and go to state 758
    "?["                   shift, and go to state 759
    "<|"                   shift, and go to state 760
    "|>"                   shift, and go to state 761
    "<<<"                  shift, and go to state 763
    ">>>"                  shift, and go to state 764
    "&&"                   shift, and go to state 767
    "||"                   shift, and go to state 768
    "^^"                   shift, and go to state 769
    ".."                   shift, and go to state 773
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 775
    '|'                    shift, and go to state 776
    '^'                    shift, and go to state 777
    '&'                    shift, and go to state 778
    '<'                    shift, and go to state 779
    '>'                    shift, and go to state 780
    '-'                    shift, and go to state 781
    '+'                    shift, and go to state 782
    '*'                    shift, and go to state 783
    '/'                    shift, and go to state 784
    '%'                    shift, and go to state 785
    '.'                    shift, and go to state 786
    '['                    shift, and go to state 787

    expression_block  go to state 940


State 700

  262 expression_keyword: "type function" '<' . $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    $default  reduce using rule 260 ($@9)

    $@9  go to state 941


State 701

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 942
    "{"                   shift, and go to state 943

    character_sequence  go to state 944


State 702

  881 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_name_with_pos_list  go to state 945


State 703

  866 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 866 (expr_map_tuple_list)


State 704

  867 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  868 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 946

    $default  reduce using rule 875 (optional_comma)

    optional_comma  go to state 947


State 705

  220 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 948


State 706

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  436 expr: '-' expr .
  437     | expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 436 (expr)


State 707

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  435 expr: '+' expr .
  437     | expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 435 (expr)


State 708

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  472     | '*' expr .
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 472 (expr)


State 709

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  434 expr: '~' expr .
  437     | expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 434 (expr)


State 710

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  433 expr: '!' expr .
  437     | expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 433 (expr)


State 711

  877 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_name_with_pos_list  go to state 949


State 712

  878 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 950


State 713

  331 expr_list: expr_list . ',' expr
  844 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 951

    $default  reduce using rule 875 (optional_comma)

    optional_comma  go to state 952


State 714

  330 expr_list: expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 330 (expr_list)


State 715

  331 expr_list: expr_list . ',' expr
  463 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 951

    $default  reduce using rule 875 (optional_comma)

    optional_comma  go to state 953


State 716

  337 block_or_lambda: '@' '@' .
  404 func_addr_expr: '@' '@' . func_addr_name
  407               | '@' '@' . '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  410               | '@' '@' . '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  522 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 954
    "$c"    shift, and go to state 955
    "name"  shift, and go to state 59
    '<'     shift, and go to state 956

    $default  reduce using rule 337 (block_or_lambda)

    name_in_namespace  go to state 957
    func_addr_name     go to state 958


State 717

  242 expression_any: expression_label "end of expression" .

    $default  reduce using rule 242 (expression_any)


State 718

  243 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 243 (expression_any)


State 719

   72 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 735
    "as"                   shift, and go to state 736
    "<<"                   shift, and go to state 745
    ">>"                   shift, and go to state 746
    "++"                   shift, and go to state 747
    "--"                   shift, and go to state 748
    "<="                   shift, and go to state 749
    ">="                   shift, and go to state 752
    "=="                   shift, and go to state 753
    "!="                   shift, and go to state 754
    "->"                   shift, and go to state 755
    "??"                   shift, and go to state 757
    "?."                   shift, and go to state 758
    "?["                   shift, and go to state 759
    "<|"                   shift, and go to state 760
    "|>"                   shift, and go to state 761
    "<<<"                  shift, and go to state 763
    ">>>"                  shift, and go to state 764
    "&&"                   shift, and go to state 767
    "||"                   shift, and go to state 768
    "^^"                   shift, and go to state 769
    ".."                   shift, and go to state 773
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 775
    '|'                    shift, and go to state 776
    '^'                    shift, and go to state 777
    '&'                    shift, and go to state 778
    '<'                    shift, and go to state 779
    '>'                    shift, and go to state 780
    '-'                    shift, and go to state 781
    '+'                    shift, and go to state 782
    '*'                    shift, and go to state 783
    '/'                    shift, and go to state 784
    '%'                    shift, and go to state 785
    '.'                    shift, and go to state 786
    '['                    shift, and go to state 787

    expression_block  go to state 959


State 720

   74 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner "end of expression"

    $default  reduce using rule 73 ($@3)

    $@3  go to state 960


State 721

  350 expr_full_block_assumed_piped: block_or_lambda . $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 349 ($@21)

    $@21  go to state 961


State 722

  222 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 222 (expr_call_pipe)


State 723

  504 expr: name_in_namespace "name" .

    $default  reduce using rule 504 (expr)


State 724

  398 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  399                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  418 expr_call: name_in_namespace '(' . ')'
  419          | name_in_namespace '(' . make_struct_single ')'
  420          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "$f"                              shift, and go to state 918
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 919
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 962
    '('                               shift, and go to state 503
    ')'                               shift, and go to state 963
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 964
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_fields      go to state 965
    make_struct_single      go to state 966
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 725

  229 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 229 (expression_any)


State 726

  236 expression_any: expression_break "end of expression" .

    $default  reduce using rule 236 (expression_any)


State 727

  237 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 237 (expression_any)


State 728

  288 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 288 (expression_return)


State 729

  293 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 293 (expression_yield)


State 730

  302 optional_in_scope: "inscope" .

    $default  reduce using rule 302 (optional_in_scope)


State 731

  310 expression_let: kwd_let optional_in_scope . let_variable_declaration
  311               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 306
    "[["    shift, and go to state 967
    "name"  shift, and go to state 307
    '('     shift, and go to state 968

    tuple_expansion_variable_declaration  go to state 969
    let_variable_name_with_pos_list       go to state 308
    let_variable_declaration              go to state 970


State 732

  348 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 971

    $default  reduce using rule 344 (optional_capture_list)

    optional_capture_list  go to state 972


State 733

  263 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 504
    '@'                    shift, and go to state 678

    expression_block  go to state 679
    block_or_lambda   go to state 680
    expr_block        go to state 973


State 734

  228 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 228 (expression_any)


State 735

  481 expr: expr "is" . "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr "is" . basic_type_declaration
  483     | expr "is" . "name"
  521 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 974
    "bool"      shift, and go to state 317
    "void"      shift, and go to state 318
    "string"    shift, and go to state 319
    "int"       shift, and go to state 321
    "int2"      shift, and go to state 322
    "int3"      shift, and go to state 323
    "int4"      shift, and go to state 324
    "uint"      shift, and go to state 325
    "bitfield"  shift, and go to state 464
    "uint2"     shift, and go to state 327
    "uint3"     shift, and go to state 328
    "uint4"     shift, and go to state 329
    "float"     shift, and go to state 330
    "float2"    shift, and go to state 331
    "float3"    shift, and go to state 332
    "float4"    shift, and go to state 333
    "range"     shift, and go to state 334
    "urange"    shift, and go to state 335
    "range64"   shift, and go to state 336
    "urange64"  shift, and go to state 337
    "int64"     shift, and go to state 339
    "uint64"    shift, and go to state 340
    "double"    shift, and go to state 341
    "int8"      shift, and go to state 344
    "uint8"     shift, and go to state 345
    "int16"     shift, and go to state 346
    "uint16"    shift, and go to state 347
    "$f"        shift, and go to state 975
    "name"      shift, and go to state 976

    basic_type_declaration  go to state 977


State 736

  484 expr: expr "as" . "name"
  487     | expr "as" . "type" '<' $@30 type_declaration '>' $@31
  488     | expr "as" . basic_type_declaration
  519 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 978
    "bool"      shift, and go to state 317
    "void"      shift, and go to state 318
    "string"    shift, and go to state 319
    "int"       shift, and go to state 321
    "int2"      shift, and go to state 322
    "int3"      shift, and go to state 323
    "int4"      shift, and go to state 324
    "uint"      shift, and go to state 325
    "bitfield"  shift, and go to state 464
    "uint2"     shift, and go to state 327
    "uint3"     shift, and go to state 328
    "uint4"     shift, and go to state 329
    "float"     shift, and go to state 330
    "float2"    shift, and go to state 331
    "float3"    shift, and go to state 332
    "float4"    shift, and go to state 333
    "range"     shift, and go to state 334
    "urange"    shift, and go to state 335
    "range64"   shift, and go to state 336
    "urange64"  shift, and go to state 337
    "int64"     shift, and go to state 339
    "uint64"    shift, and go to state 340
    "double"    shift, and go to state 341
    "int8"      shift, and go to state 344
    "uint8"     shift, and go to state 345
    "int16"     shift, and go to state 346
    "uint16"    shift, and go to state 347
    "$f"        shift, and go to state 979
    "name"      shift, and go to state 980

    basic_type_declaration  go to state 981


State 737

  368 expr_assign: expr "+=" . expr
  389 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 982
    "@ <|"                            shift, and go to state 983
    "@@ <|"                           shift, and go to state 984
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 985
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 986
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 987
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 738

  369 expr_assign: expr "-=" . expr
  390 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 982
    "@ <|"                            shift, and go to state 983
    "@@ <|"                           shift, and go to state 984
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 985
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 988
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 989
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 739

  371 expr_assign: expr "/=" . expr
  392 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 982
    "@ <|"                            shift, and go to state 983
    "@@ <|"                           shift, and go to state 984
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 985
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 990
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 991
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 740

  370 expr_assign: expr "*=" . expr
  391 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 982
    "@ <|"                            shift, and go to state 983
    "@@ <|"                           shift, and go to state 984
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 985
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 992
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 993
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 741

  372 expr_assign: expr "%=" . expr
  393 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 982
    "@ <|"                            shift, and go to state 983
    "@@ <|"                           shift, and go to state 984
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 985
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 994
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 995
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 742

  362 expr_assign: expr "&=" . expr
  383 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 982
    "@ <|"                            shift, and go to state 983
    "@@ <|"                           shift, and go to state 984
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 985
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 996
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 997
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 743

  363 expr_assign: expr "|=" . expr
  384 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 982
    "@ <|"                            shift, and go to state 983
    "@@ <|"                           shift, and go to state 984
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 985
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 998
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 999
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 744

  364 expr_assign: expr "^=" . expr
  385 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 982
    "@ <|"                            shift, and go to state 983
    "@@ <|"                           shift, and go to state 984
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 985
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1000
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1001
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 745

  437 expr: expr "<<" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1002
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 746

  438 expr: expr ">>" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1003
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 747

  461 expr: expr "++" .

    $default  reduce using rule 461 (expr)


State 748

  462 expr: expr "--" .

    $default  reduce using rule 462 (expr)


State 749

  450 expr: expr "<=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1004
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 750

  373 expr_assign: expr "<<=" . expr
  394 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 982
    "@ <|"                            shift, and go to state 983
    "@@ <|"                           shift, and go to state 984
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 985
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1005
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1006
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 751

  374 expr_assign: expr ">>=" . expr
  395 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 982
    "@ <|"                            shift, and go to state 983
    "@@ <|"                           shift, and go to state 984
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 985
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1007
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1008
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 752

  451 expr: expr ">=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1009
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 753

  448 expr: expr "==" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1010
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 754

  449 expr: expr "!=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1011
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 755

  400 expr_method_call: expr "->" . "name" '(' ')'
  401                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 1012


State 756

  360 expr_assign: expr "<-" . expr
  382 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 982
    "@ <|"                            shift, and go to state 983
    "@@ <|"                           shift, and go to state 984
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 985
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1013
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1014
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 757

  477 expr: expr "??" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1015
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 758

  468 expr: expr "?." . "name"
  516 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1016
    "name"  shift, and go to state 1017


State 759

  466 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1018
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 760

  501 expr: expr "<|" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1019
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 761

  502 expr: expr "|>" . expr
  503     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1020
    expr_mtag               go to state 549
    basic_type_declaration  go to state 1021
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 762

  361 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1022
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 763

  439 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1023
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 764

  440 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1024
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 765

  375 expr_assign: expr "<<<=" . expr
  396 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 982
    "@ <|"                            shift, and go to state 983
    "@@ <|"                           shift, and go to state 984
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 985
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1025
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1026
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 766

  376 expr_assign: expr ">>>=" . expr
  397 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 982
    "@ <|"                            shift, and go to state 983
    "@@ <|"                           shift, and go to state 984
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 985
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1027
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1028
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 767

  455 expr: expr "&&" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1029
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 768

  456 expr: expr "||" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1030
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 769

  457 expr: expr "^^" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1031
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 770

  365 expr_assign: expr "&&=" . expr
  386 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 982
    "@ <|"                            shift, and go to state 983
    "@@ <|"                           shift, and go to state 984
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 985
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1032
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1033
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 771

  366 expr_assign: expr "||=" . expr
  387 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 982
    "@ <|"                            shift, and go to state 983
    "@@ <|"                           shift, and go to state 984
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 985
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1034
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1035
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 772

  367 expr_assign: expr "^^=" . expr
  388 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 982
    "@ <|"                            shift, and go to state 983
    "@@ <|"                           shift, and go to state 984
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 985
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1036
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1037
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 773

  458 expr: expr ".." . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1038
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 774

  359 expr_assign: expr '=' . expr
  381 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 982
    "@ <|"                            shift, and go to state 983
    "@@ <|"                           shift, and go to state 984
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 985
    expression_keyword      go to state 521
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign_pipe_right  go to state 1039
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1040
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 775

  478 expr: expr '?' . expr ':' expr
  489     | expr '?' . "as" "name"
  492     | expr '?' . "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr '?' . "as" basic_type_declaration
  520 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "as"                              shift, and go to state 1041
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1042
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 776

  453 expr: expr '|' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1043
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 777

  454 expr: expr '^' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1044
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 778

  452 expr: expr '&' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1045
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 779

  446 expr: expr '<' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1046
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 780

  447 expr: expr '>' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1047
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 781

  442 expr: expr '-' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1048
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 782

  441 expr: expr '+' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1049
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 783

  443 expr: expr '*' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1050
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 784

  444 expr: expr '/' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1051
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 785

  445 expr: expr '%' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1052
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 786

  411 expr_field: expr '.' . "name"
  412           | expr '.' . '.' "name"
  413           | expr '.' . "name" '(' ')'
  414           | expr '.' . "name" '(' expr_list ')'
  417           | expr '.' . $@26 error $@27
  465 expr: expr '.' . '[' expr ']'
  467     | expr '.' . "?[" expr ']'
  469     | expr '.' . "?." "name"
  515 expr_mtag: expr '.' . "$f" '(' expr ')'
  517          | expr '.' . '.' "$f" '(' expr ')'
  518          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 1053
    "?["    shift, and go to state 1054
    "$f"    shift, and go to state 1055
    "name"  shift, and go to state 1056
    '.'     shift, and go to state 1057
    '['     shift, and go to state 1058

    $default  reduce using rule 415 ($@26)

    $@26  go to state 1059


State 787

  464 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1060
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 788

  221 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 221 (expr_call_pipe)


State 789

  421 expr_call: basic_type_declaration '(' . ')'
  422          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    ')'                               shift, and go to state 1061
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1062
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 790

  598 enum_list: enum_list "name" "end of expression" .

    $default  reduce using rule 598 (enum_list)


State 791

  599 enum_list: enum_list "name" '=' . expr "end of expression"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1063
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 792

  616 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block" .

    $default  reduce using rule 616 (enum_declaration)


State 793

  597 enum_list: enum_list . "end of expression"
  598          | enum_list . "name" "end of expression"
  599          | enum_list . "name" '=' expr "end of expression"
  619 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list . $@44 "end of code block"

    "name"               shift, and go to state 557
    "end of expression"  shift, and go to state 558

    $default  reduce using rule 618 ($@44)

    $@44  go to state 1064


State 794

  631 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 631 (optional_struct_variable_declaration_list)


State 795

  121 optional_annotation_list: '[' . annotation_list ']'
  544 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' "end of expression"

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 1065
    name_in_namespace             go to state 70


State 796

  541 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  543                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "def"  shift, and go to state 1066


State 797

  539 struct_variable_declaration_list: struct_variable_declaration_list $@34 . structure_variable_declaration "end of expression"

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 523 (optional_field_annotation)

    metadata_argument_list          go to state 220
    optional_field_annotation       go to state 1067
    structure_variable_declaration  go to state 1068


State 798

  475 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  476     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1069


State 799

  576 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 576 (let_variable_name_with_pos_list)


State 800

  579 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1070


State 801

  580 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 580 (let_variable_declaration)


State 802

  581 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  582                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 518
    expression_keyword      go to state 521
    expr_pipe               go to state 1071
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign             go to state 646
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1072
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 803

  584 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 584 (let_variable_declaration)


State 804

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_assign: expr .
  359            | expr . '=' expr
  360            | expr . "<-" expr
  361            | expr . ":=" expr
  362            | expr . "&=" expr
  363            | expr . "|=" expr
  364            | expr . "^=" expr
  365            | expr . "&&=" expr
  366            | expr . "||=" expr
  367            | expr . "^^=" expr
  368            | expr . "+=" expr
  369            | expr . "-=" expr
  370            | expr . "*=" expr
  371            | expr . "/=" expr
  372            | expr . "%=" expr
  373            | expr . "<<=" expr
  374            | expr . ">>=" expr
  375            | expr . "<<<=" expr
  376            | expr . ">>>=" expr
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  583 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "+="                 shift, and go to state 867
    "-="                 shift, and go to state 868
    "/="                 shift, and go to state 869
    "*="                 shift, and go to state 870
    "%="                 shift, and go to state 871
    "&="                 shift, and go to state 872
    "|="                 shift, and go to state 873
    "^="                 shift, and go to state 874
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    "<<="                shift, and go to state 875
    ">>="                shift, and go to state 876
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "<-"                 shift, and go to state 877
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    ":="                 shift, and go to state 762
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "<<<="               shift, and go to state 878
    ">>>="               shift, and go to state 879
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    "&&="                shift, and go to state 880
    "||="                shift, and go to state 881
    "^^="                shift, and go to state 882
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1073
    '='                  shift, and go to state 883
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787
    '$'                  shift, and go to state 504
    '@'                  shift, and go to state 678

    $default  reduce using rule 358 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 805

  701 type_declaration_no_options: "type" '<' $@49 type_declaration . '>' $@50
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1074


State 806

  724 type_declaration_no_options: "array" '<' $@54 type_declaration . '>' $@55
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1075


State 807

  727 type_declaration_no_options: "table" '<' $@56 table_type_pair . '>' $@57

    '>'  shift, and go to state 1076


State 808

  689 table_type_pair: type_declaration .
  690                | type_declaration . c_or_s type_declaration
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '|'                  shift, and go to state 418

    $default  reduce using rule 689 (table_type_pair)

    c_or_s  go to state 1077


State 809

  702 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 702 (type_declaration_no_options)


State 810

  730 type_declaration_no_options: "iterator" '<' $@58 type_declaration . '>' $@59
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1078


State 811

  720 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration . '>' $@53
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1079


State 812

  677 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 677 (auto_type_declaration)


State 813

  679 bitfield_bits: "name" .

    $default  reduce using rule 679 (bitfield_bits)


State 814

  680 bitfield_bits: bitfield_bits . "end of expression" "name"
  686 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits . '>' $@48

    "end of expression"  shift, and go to state 1080
    '>'                  shift, and go to state 1081


State 815

  734 type_declaration_no_options: "block" '<' $@60 type_declaration . '>' $@61
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1082


State 816

  737 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 374

    $default  reduce using rule 125 (optional_function_type)

    optional_function_type  go to state 1083


State 817

  741 type_declaration_no_options: "function" '<' $@64 type_declaration . '>' $@65
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1084


State 818

  744 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list . optional_function_type '>' $@67

    ':'  shift, and go to state 374

    $default  reduce using rule 125 (optional_function_type)

    optional_function_type  go to state 1085


State 819

  748 type_declaration_no_options: "lambda" '<' $@68 type_declaration . '>' $@69
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1086


State 820

  751 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list . optional_function_type '>' $@71

    ':'  shift, and go to state 374

    $default  reduce using rule 125 (optional_function_type)

    optional_function_type  go to state 1087


State 821

  551 tuple_type_list: tuple_type .

    $default  reduce using rule 551 (tuple_type_list)


State 822

  552 tuple_type_list: tuple_type_list . c_or_s tuple_type
  754 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list . '>' $@73

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '>'                  shift, and go to state 1088

    c_or_s  go to state 1089


State 823

  557 variant_type_list: variant_type .

    $default  reduce using rule 557 (variant_type_list)


State 824

  558 variant_type_list: variant_type_list . c_or_s variant_type
  757 type_declaration_no_options: "variant" '<' $@74 variant_type_list . '>' $@75

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '>'                  shift, and go to state 1090

    c_or_s  go to state 1091


State 825

  678 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 678 (auto_type_declaration)


State 826

  705 type_declaration_no_options: '$' name_in_namespace '<' $@51 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    type_declaration_no_options_list  go to state 1092
    name_in_namespace                 go to state 352
    basic_type_declaration            go to state 353
    structure_type_declaration        go to state 354
    auto_type_declaration             go to state 355
    bitfield_type_declaration         go to state 356
    type_declaration_no_options       go to state 357
    type_declaration                  go to state 1093


State 827

  703 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1094


State 828

  250 optional_expr_list: expr_list . optional_comma
  331 expr_list: expr_list . ',' expr

    ','  shift, and go to state 951

    ','       [reduce using rule 875 (optional_comma)]
    $default  reduce using rule 875 (optional_comma)

    optional_comma  go to state 1095


State 829

  706 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 706 (type_declaration_no_options)


State 830

  691 dim_list: '[' expr ']' .

    $default  reduce using rule 691 (dim_list)


State 831

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  692 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ']'    shift, and go to state 1096


State 832

  683 bitfield_alias_bits: bitfield_alias_bits "name" "end of expression" .

    $default  reduce using rule 683 (bitfield_alias_bits)


State 833

  775 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block" .

    $default  reduce using rule 775 (bitfield_alias_declaration)


State 834

  550 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1097


State 835

  555 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 555 (tuple_alias_type_list)


State 836

  765 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block" .

    $default  reduce using rule 765 (tuple_alias_declaration)


State 837

  556 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1098


State 838

  561 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 561 (variant_alias_type_list)


State 839

  770 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block" .

    $default  reduce using rule 770 (variant_alias_declaration)


State 840

  546 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 546 (function_argument_declaration)


State 841

  636 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1099
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 842

  637 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1100


State 843

  563 copy_or_move: "<-" .

    $default  reduce using rule 563 (copy_or_move)


State 844

  638 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  639                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1101


State 845

  562 copy_or_move: '=' .

    $default  reduce using rule 562 (copy_or_move)


State 846

  566 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  567                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1102


State 847

  565 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 565 (variable_declaration)


State 848

  568 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  569                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expr_call_pipe          go to state 518
    expression_keyword      go to state 521
    expr_pipe               go to state 1103
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_assign             go to state 646
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1104
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 849

  823 make_struct_decl: "struct" '<' $@88 . type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1105


State 850

  826 make_struct_decl: "class" '<' $@90 . type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1106


State 851

   78 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 78 (expression_while_loop)


State 852

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  638 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  639                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1107
    ','   shift, and go to state 844


State 853

  275 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1108


State 854

  278 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  279         | "new" new_type_declaration '(' . expr_list ')'
  280         | "new" new_type_declaration '(' . make_struct_single ')'
  281         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "uninitialized"                   shift, and go to state 1109
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "$f"                              shift, and go to state 918
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 919
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 813 (use_initializer)

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1110
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_fields      go to state 965
    make_struct_single      go to state 1111
    use_initializer         go to state 1112
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 855

  324 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  325               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  326               | "typeinfo" '(' name_in_namespace . '<' "name" c_or_s "name" '>' expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '<'                               shift, and go to state 1113
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1114
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 856

  328 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  329               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 1115


State 857

  327 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1116
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 858

  323 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1117


State 859

  849 make_dim_decl: "array" "struct" '<' . $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 847 ($@98)

    $@98  go to state 1118


State 860

  852 make_dim_decl: "array" "tuple" '<' . $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 850 ($@100)

    $@100  go to state 1119


State 861

  855 make_dim_decl: "array" "variant" '<' . $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    $default  reduce using rule 853 ($@102)

    $@102  go to state 1120


State 862

  859 make_dim_decl: "array" '<' $@104 . type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1121


State 863

  331 expr_list: expr_list . ',' expr
  856 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 951

    $default  reduce using rule 875 (optional_comma)

    optional_comma  go to state 1122


State 864

  290 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 290 (expression_return)


State 865

  287 expression_return_no_pipe: "return" "<-" expr_list .
  331 expr_list: expr_list . ',' expr

    ','  shift, and go to state 866

    $default  reduce using rule 287 (expression_return_no_pipe)


State 866

  331 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1123
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 867

  368 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1124
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 868

  369 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1125
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 869

  371 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1126
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 870

  370 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1127
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 871

  372 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1128
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 872

  362 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1129
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 873

  363 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1130
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 874

  364 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1131
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 875

  373 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1132
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 876

  374 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1133
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 877

  360 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1134
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 878

  375 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1135
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 879

  376 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1136
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 880

  365 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1137
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 881

  366 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1138
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 882

  367 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1139
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 883

  359 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1140
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 884

  296 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1141


State 885

  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"
  871 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  872                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"              shift, and go to state 407
    "implicit"           shift, and go to state 408
    "explicit"           shift, and go to state 409
    "=="                 shift, and go to state 410
    "??"                 shift, and go to state 411
    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '?'                  shift, and go to state 412
    '&'                  shift, and go to state 413
    '>'                  shift, and go to state 1142
    '-'                  shift, and go to state 414
    '['                  shift, and go to state 415
    '#'                  shift, and go to state 416

    c_or_s    go to state 1143
    dim_list  go to state 417


State 886

  870 make_table_decl: "table" '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1144


State 887

  254 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  867 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 946

    $default  reduce using rule 875 (optional_comma)

    optional_comma  go to state 1145


State 888

  272 expression_delete: "delete" "explicit" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 272 (expression_delete)


State 889

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  473     | "deref" '(' expr . ')'
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1146


State 890

   79 expression_with: "with" expr expression_block .

    $default  reduce using rule 79 (expression_with)


State 891

   81 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 80 ($@5)

    $@5  go to state 1147


State 892

  314 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1148


State 893

  317 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1149


State 894

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  474     | "addr" '(' expr . ')'
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1150


State 895

  320 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1151


State 896

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 897

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 898

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  505     | "unsafe" '(' expr . ')'
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1152


State 899

  863 make_dim_decl: "fixed_array" '<' $@106 . type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1153


State 900

  331 expr_list: expr_list . ',' expr
  860 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 951

    $default  reduce using rule 875 (optional_comma)

    optional_comma  go to state 1154


State 901

  832 make_struct_decl: "default" '<' $@94 . type_declaration_no_options '>' $@95 use_initializer

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1155


State 902

  841 make_tuple_call: "tuple" '<' $@96 . type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1156


State 903

  331 expr_list: expr_list . ',' expr
  838 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 951

    $default  reduce using rule 875 (optional_comma)

    optional_comma  go to state 1157


State 904

  829 make_struct_decl: "variant" '<' $@92 . type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1158


State 905

  223 expr_call_pipe: "generator" '<' type_declaration_no_options . '>' optional_capture_list expr_full_block_assumed_piped
  475 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  476     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1159
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 906

  295 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 295 (expression_yield)


State 907

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  292 expression_yield_no_pipe: "yield" "<-" expr .
  358 expr_assign: expr .
  359            | expr . '=' expr
  360            | expr . "<-" expr
  361            | expr . ":=" expr
  362            | expr . "&=" expr
  363            | expr . "|=" expr
  364            | expr . "^=" expr
  365            | expr . "&&=" expr
  366            | expr . "||=" expr
  367            | expr . "^^=" expr
  368            | expr . "+=" expr
  369            | expr . "-=" expr
  370            | expr . "*=" expr
  371            | expr . "/=" expr
  372            | expr . "%=" expr
  373            | expr . "<<=" expr
  374            | expr . ">>=" expr
  375            | expr . "<<<=" expr
  376            | expr . ">>>=" expr
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 735
    "as"    shift, and go to state 736
    "+="    shift, and go to state 867
    "-="    shift, and go to state 868
    "/="    shift, and go to state 869
    "*="    shift, and go to state 870
    "%="    shift, and go to state 871
    "&="    shift, and go to state 872
    "|="    shift, and go to state 873
    "^="    shift, and go to state 874
    "<<"    shift, and go to state 745
    ">>"    shift, and go to state 746
    "++"    shift, and go to state 747
    "--"    shift, and go to state 748
    "<="    shift, and go to state 749
    "<<="   shift, and go to state 875
    ">>="   shift, and go to state 876
    ">="    shift, and go to state 752
    "=="    shift, and go to state 753
    "!="    shift, and go to state 754
    "->"    shift, and go to state 755
    "<-"    shift, and go to state 877
    "??"    shift, and go to state 757
    "?."    shift, and go to state 758
    "?["    shift, and go to state 759
    "<|"    shift, and go to state 760
    "|>"    shift, and go to state 761
    ":="    shift, and go to state 762
    "<<<"   shift, and go to state 763
    ">>>"   shift, and go to state 764
    "<<<="  shift, and go to state 878
    ">>>="  shift, and go to state 879
    "&&"    shift, and go to state 767
    "||"    shift, and go to state 768
    "^^"    shift, and go to state 769
    "&&="   shift, and go to state 880
    "||="   shift, and go to state 881
    "^^="   shift, and go to state 882
    ".."    shift, and go to state 773
    '='     shift, and go to state 883
    '?'     shift, and go to state 775
    '|'     shift, and go to state 776
    '^'     shift, and go to state 777
    '&'     shift, and go to state 778
    '<'     shift, and go to state 779
    '>'     shift, and go to state 780
    '-'     shift, and go to state 781
    '+'     shift, and go to state 782
    '*'     shift, and go to state 783
    '/'     shift, and go to state 784
    '%'     shift, and go to state 785
    '.'     shift, and go to state 786
    '['     shift, and go to state 787
    '$'     shift, and go to state 504
    '@'     shift, and go to state 678

    " <|"     reduce using rule 358 (expr_assign)
    $default  reduce using rule 292 (expression_yield_no_pipe)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 908

  337 block_or_lambda: '@' '@' .

    $default  reduce using rule 337 (block_or_lambda)


State 909

  347 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 971

    $default  reduce using rule 344 (optional_capture_list)

    optional_capture_list  go to state 1160


State 910

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  507 expr_mtag: "$$" '(' expr . ')'
  515          | expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1161


State 911

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  508 expr_mtag: "$i" '(' expr . ')'
  515          | expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1162


State 912

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  509 expr_mtag: "$v" '(' expr . ')'
  515          | expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1163


State 913

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  510 expr_mtag: "$b" '(' expr . ')'
  515          | expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1164


State 914

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  511 expr_mtag: "$a" '(' expr . ')'
  515          | expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1165


State 915

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  513 expr_mtag: "$c" '(' expr . ')' '(' ')'
  514          | "$c" '(' expr . ')' '(' expr_list ')'
  515          | expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1166


State 916

  638 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  639                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  879 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1167
    ','   shift, and go to state 844


State 917

  800 optional_block: "where" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 504
    '@'                    shift, and go to state 678

    expression_block  go to state 679
    block_or_lambda   go to state 680
    expr_block        go to state 1168


State 918

  785 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  786                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1169


State 919

  268 name_in_namespace: "name" .
  269                  | "name" . "::" "name"
  781 make_struct_fields: "name" . copy_or_move expr
  782                   | "name" . ":=" expr

    "<-"  shift, and go to state 843
    ":="  shift, and go to state 1170
    "::"  shift, and go to state 98
    '='   shift, and go to state 845

    $default  reduce using rule 268 (name_in_namespace)

    copy_or_move  go to state 1171


State 920

  436 expr: '-' . expr
  706 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  709                            | type_declaration_no_options '-' . "const"
  711                            | type_declaration_no_options '-' . '&'
  714                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "const"                           shift, and go to state 598
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '&'                               shift, and go to state 599
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 1172
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505
    '#'                               shift, and go to state 601

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 706
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 921

  691 dim_list: '[' . expr ']'
  698 type_declaration_no_options: type_declaration_no_options '[' . ']'
  844 make_dim_decl: '[' . expr_list optional_comma ']'
  877 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  878                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "for"                             shift, and go to state 711
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "iterator"                        shift, and go to state 712
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    ']'                               shift, and go to state 602
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 713
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1173
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 922

  463 expr: '(' . expr_list optional_comma ')'
  817 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  818                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    ')'                               shift, and go to state 1174
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 715
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 923

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  833 make_tuple: expr .
  834           | expr . "=>" expr

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "=>"   shift, and go to state 1175
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 833 (make_tuple)


State 924

  783 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  784                   | make_struct_fields . ',' "name" ":=" expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  791 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1176

    $default  reduce using rule 791 (make_struct_dim)


State 925

  792 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  815 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 917
    "end of expression"  shift, and go to state 1177

    $default  reduce using rule 799 (optional_block)

    optional_block  go to state 1178


State 926

  816 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1179
    ",]]"  shift, and go to state 1180
    ']'    shift, and go to state 1181

    optional_trailing_delim_sqr_sqr  go to state 1182


State 927

  835 make_tuple: make_tuple . ',' expr
  842 make_dim: make_tuple .

    ','  shift, and go to state 1183

    $default  reduce using rule 842 (make_dim)


State 928

  843 make_dim: make_dim . "end of expression" make_tuple
  845 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1184
    ";]]"                shift, and go to state 1185
    ']'                  shift, and go to state 1186

    optional_trailing_semicolon_sqr_sqr  go to state 1187


State 929

  638 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  639                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  880 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1188
    ','   shift, and go to state 844


State 930

  463 expr: '(' . expr_list optional_comma ')'
  820 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    ')'                               shift, and go to state 1189
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 715
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 931

  792 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  819 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 917
    "end of expression"  shift, and go to state 1177

    $default  reduce using rule 799 (optional_block)

    optional_block  go to state 1190


State 932

  843 make_dim: make_dim . "end of expression" make_tuple
  846 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1191
    "end of expression"  shift, and go to state 1184
    ";}]"                shift, and go to state 1192

    optional_trailing_semicolon_cur_sqr  go to state 1193


State 933

  638 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  639                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  882 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1194
    ','   shift, and go to state 844


State 934

  836 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1195
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 935

  801 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1196


State 936

  865 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 695
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_map_tuple          go to state 1197
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 937

  802 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 802 (optional_trailing_semicolon_cur_cur)


State 938

  869 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 869 (make_table_decl)


State 939

  259 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options_list '>' $@8 expr

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    type_declaration_no_options_list  go to state 1198
    name_in_namespace                 go to state 352
    basic_type_declaration            go to state 353
    structure_type_declaration        go to state 354
    auto_type_declaration             go to state 355
    bitfield_type_declaration         go to state 356
    type_declaration_no_options       go to state 357
    type_declaration                  go to state 1093


State 940

  248 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 248 (expr_keyword)


State 941

  262 expression_keyword: "type function" '<' $@9 . type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    type_declaration_no_options_list  go to state 1199
    name_in_namespace                 go to state 352
    basic_type_declaration            go to state 353
    structure_type_declaration        go to state 354
    auto_type_declaration             go to state 355
    bitfield_type_declaration         go to state 356
    type_declaration_no_options       go to state 357
    type_declaration                  go to state 1093


State 942

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 943

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1200
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 944

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 222
    STRING_CHARACTER_ESC  shift, and go to state 223

    $default  reduce using rule 29 (string_builder_body)


State 945

  638 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  639                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  881 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1201
    ','   shift, and go to state 844


State 946

  867 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  876 optional_comma: ',' .

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 876 (optional_comma)

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 695
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_map_tuple          go to state 1202
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 947

  868 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1203


State 948

  220 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 245 (expressions)

    expressions  go to state 1204


State 949

  638 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  639                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  877 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1205
    ','   shift, and go to state 844


State 950

  878 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_name_with_pos_list  go to state 1206


State 951

  331 expr_list: expr_list ',' . expr
  876 optional_comma: ',' .

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 876 (optional_comma)

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1123
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 952

  844 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1207


State 953

  463 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1208


State 954

  403 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1209


State 955

  522 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1210


State 956

  407 func_addr_expr: '@' '@' '<' . $@22 type_declaration_no_options '>' $@23 func_addr_name
  410               | '@' '@' '<' . $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    ':'       reduce using rule 408 ($@24)
    '>'       reduce using rule 408 ($@24)
    '('       reduce using rule 408 ($@24)
    $default  reduce using rule 405 ($@22)

    $@22  go to state 1211
    $@24  go to state 1212


State 957

  402 func_addr_name: name_in_namespace .

    $default  reduce using rule 402 (func_addr_name)


State 958

  404 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 404 (func_addr_expr)


State 959

   72 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1213
    "elif"         shift, and go to state 1214
    "static_elif"  shift, and go to state 1215

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1216
    expression_else      go to state 1217


State 960

   74 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1218
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 961

  350 expr_full_block_assumed_piped: block_or_lambda $@21 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 120 (optional_annotation_list)

    optional_annotation_list  go to state 1219


State 962

  398 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  844 make_dim_decl: '[' . expr_list optional_comma ']'
  877 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  878                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "for"                             shift, and go to state 711
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "iterator"                        shift, and go to state 712
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "$f"                              shift, and go to state 918
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 919
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 713
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_fields      go to state 1220
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 963

  418 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 418 (expr_call)


State 964

  331 expr_list: expr_list . ',' expr
  399 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  420 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1221
    ')'  shift, and go to state 1222


State 965

  783 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  784                   | make_struct_fields . ',' "name" ":=" expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  790 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1176

    $default  reduce using rule 790 (make_struct_single)


State 966

  419 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1223


State 967

  306 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  308                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1224

    tuple_expansion  go to state 1225


State 968

  307 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1224

    tuple_expansion  go to state 1226


State 969

  311 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 311 (expression_let)


State 970

  310 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 310 (expression_let)


State 971

  345 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1227
    ":="  shift, and go to state 1228
    '='   shift, and go to state 1229
    '&'   shift, and go to state 1230

    capture_entry  go to state 1231
    capture_list   go to state 1232


State 972

  348 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 284

    $default  reduce using rule 122 (optional_function_argument_list)

    optional_function_argument_list  go to state 1233


State 973

  263 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 263 (expr_pipe)


State 974

  481 expr: expr "is" "type" . '<' $@28 type_declaration_no_options '>' $@29

    '<'  shift, and go to state 1234


State 975

  521 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1235


State 976

  483 expr: expr "is" "name" .

    $default  reduce using rule 483 (expr)


State 977

  482 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 482 (expr)


State 978

  487 expr: expr "as" "type" . '<' $@30 type_declaration '>' $@31

    '<'  shift, and go to state 1236


State 979

  519 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1237


State 980

  484 expr: expr "as" "name" .

    $default  reduce using rule 484 (expr)


State 981

  488 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 488 (expr)


State 982

  379 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 504
    '@'                    shift, and go to state 678

    expression_block  go to state 679
    block_or_lambda   go to state 680
    expr_block        go to state 1238


State 983

  377 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 504
    '@'                    shift, and go to state 678

    expression_block  go to state 679
    block_or_lambda   go to state 680
    expr_block        go to state 1239


State 984

  378 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 504
    '@'                    shift, and go to state 678

    expression_block  go to state 679
    block_or_lambda   go to state 680
    expr_block        go to state 1240


State 985

  380 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 380 (expr_assign_pipe_right)


State 986

  389 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 389 (expr_assign_pipe)


State 987

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  368 expr_assign: expr "+=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 368 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 988

  390 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 390 (expr_assign_pipe)


State 989

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  369 expr_assign: expr "-=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 369 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 990

  392 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 392 (expr_assign_pipe)


State 991

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  371 expr_assign: expr "/=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 371 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 992

  391 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 391 (expr_assign_pipe)


State 993

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  370 expr_assign: expr "*=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 370 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 994

  393 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 393 (expr_assign_pipe)


State 995

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  372 expr_assign: expr "%=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 372 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 996

  383 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 383 (expr_assign_pipe)


State 997

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  362 expr_assign: expr "&=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 362 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 998

  384 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 384 (expr_assign_pipe)


State 999

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  363 expr_assign: expr "|=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 363 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1000

  385 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 385 (expr_assign_pipe)


State 1001

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  364 expr_assign: expr "^=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 364 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1002

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  437     | expr "<<" expr .
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '-'   shift, and go to state 781
    '+'   shift, and go to state 782
    '*'   shift, and go to state 783
    '/'   shift, and go to state 784
    '%'   shift, and go to state 785
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 437 (expr)


State 1003

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  438     | expr ">>" expr .
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '-'   shift, and go to state 781
    '+'   shift, and go to state 782
    '*'   shift, and go to state 783
    '/'   shift, and go to state 784
    '%'   shift, and go to state 785
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 438 (expr)


State 1004

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  450     | expr "<=" expr .
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 450 (expr)


State 1005

  394 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 394 (expr_assign_pipe)


State 1006

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  373 expr_assign: expr "<<=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 373 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1007

  395 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 395 (expr_assign_pipe)


State 1008

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  374 expr_assign: expr ">>=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 374 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1009

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  451     | expr ">=" expr .
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 451 (expr)


State 1010

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  448     | expr "==" expr .
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 448 (expr)


State 1011

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  449     | expr "!=" expr .
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 449 (expr)


State 1012

  400 expr_method_call: expr "->" "name" . '(' ')'
  401                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1241


State 1013

  382 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 382 (expr_assign_pipe)


State 1014

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  360 expr_assign: expr "<-" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 360 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1015

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  477     | expr "??" expr .
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 477 (expr)


State 1016

  516 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1242


State 1017

  468 expr: expr "?." "name" .

    $default  reduce using rule 468 (expr)


State 1018

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  466     | expr "?[" expr . ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ']'    shift, and go to state 1243


State 1019

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  501     | expr "<|" expr .
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 755
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 501 (expr)


State 1020

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  502     | expr "|>" expr .
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 755
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 502 (expr)


State 1021

  421 expr_call: basic_type_declaration . '(' ')'
  422          | basic_type_declaration . '(' expr_list ')'
  503 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 789

    $default  reduce using rule 503 (expr)


State 1022

  361 expr_assign: expr ":=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 361 (expr_assign)


State 1023

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  439     | expr "<<<" expr .
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '-'   shift, and go to state 781
    '+'   shift, and go to state 782
    '*'   shift, and go to state 783
    '/'   shift, and go to state 784
    '%'   shift, and go to state 785
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 439 (expr)


State 1024

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  440     | expr ">>>" expr .
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '-'   shift, and go to state 781
    '+'   shift, and go to state 782
    '*'   shift, and go to state 783
    '/'   shift, and go to state 784
    '%'   shift, and go to state 785
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 440 (expr)


State 1025

  396 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 396 (expr_assign_pipe)


State 1026

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  375 expr_assign: expr "<<<=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 375 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1027

  397 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 397 (expr_assign_pipe)


State 1028

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  376 expr_assign: expr ">>>=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 376 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1029

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  455     | expr "&&" expr .
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 455 (expr)


State 1030

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  456     | expr "||" expr .
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "^^"   shift, and go to state 769
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 456 (expr)


State 1031

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  457     | expr "^^" expr .
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 457 (expr)


State 1032

  386 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 386 (expr_assign_pipe)


State 1033

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  365 expr_assign: expr "&&=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 365 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1034

  387 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 387 (expr_assign_pipe)


State 1035

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr "||=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1036

  388 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 388 (expr_assign_pipe)


State 1037

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  367 expr_assign: expr "^^=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 367 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1038

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  458     | expr ".." expr .
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    ".."  error (nonassociative)

    $default  reduce using rule 458 (expr)


State 1039

  381 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 381 (expr_assign_pipe)


State 1040

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  359 expr_assign: expr '=' expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    '$'    shift, and go to state 504
    '@'    shift, and go to state 678

    $default  reduce using rule 359 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1041

  489 expr: expr '?' "as" . "name"
  492     | expr '?' "as" . "type" '<' $@32 type_declaration '>' $@33
  493     | expr '?' "as" . basic_type_declaration
  520 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1244
    "bool"      shift, and go to state 317
    "void"      shift, and go to state 318
    "string"    shift, and go to state 319
    "int"       shift, and go to state 321
    "int2"      shift, and go to state 322
    "int3"      shift, and go to state 323
    "int4"      shift, and go to state 324
    "uint"      shift, and go to state 325
    "bitfield"  shift, and go to state 464
    "uint2"     shift, and go to state 327
    "uint3"     shift, and go to state 328
    "uint4"     shift, and go to state 329
    "float"     shift, and go to state 330
    "float2"    shift, and go to state 331
    "float3"    shift, and go to state 332
    "float4"    shift, and go to state 333
    "range"     shift, and go to state 334
    "urange"    shift, and go to state 335
    "range64"   shift, and go to state 336
    "urange64"  shift, and go to state 337
    "int64"     shift, and go to state 339
    "uint64"    shift, and go to state 340
    "double"    shift, and go to state 341
    "int8"      shift, and go to state 344
    "uint8"     shift, and go to state 345
    "int16"     shift, and go to state 346
    "uint16"    shift, and go to state 347
    "$f"        shift, and go to state 1245
    "name"      shift, and go to state 1246

    basic_type_declaration  go to state 1247


State 1042

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  478     | expr '?' expr . ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    ':'    shift, and go to state 1248
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787


State 1043

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  453     | expr '|' expr .
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 453 (expr)


State 1044

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  454     | expr '^' expr .
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 454 (expr)


State 1045

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  452     | expr '&' expr .
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 452 (expr)


State 1046

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  446     | expr '<' expr .
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 446 (expr)


State 1047

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  447     | expr '>' expr .
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 447 (expr)


State 1048

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  442     | expr '-' expr .
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '*'   shift, and go to state 783
    '/'   shift, and go to state 784
    '%'   shift, and go to state 785
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 442 (expr)


State 1049

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  441     | expr '+' expr .
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '*'   shift, and go to state 783
    '/'   shift, and go to state 784
    '%'   shift, and go to state 785
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 441 (expr)


State 1050

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  443     | expr '*' expr .
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 443 (expr)


State 1051

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  444     | expr '/' expr .
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 444 (expr)


State 1052

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  445     | expr '%' expr .
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 735
    "as"  shift, and go to state 736
    "++"  shift, and go to state 747
    "--"  shift, and go to state 748
    "->"  shift, and go to state 755
    "??"  shift, and go to state 757
    "?."  shift, and go to state 758
    "?["  shift, and go to state 759
    "<|"  shift, and go to state 760
    "|>"  shift, and go to state 761
    '.'   shift, and go to state 786
    '['   shift, and go to state 787

    $default  reduce using rule 445 (expr)


State 1053

  469 expr: expr '.' "?." . "name"
  518 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1249
    "name"  shift, and go to state 1250


State 1054

  467 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1251
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1055

  515 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1252


State 1056

  411 expr_field: expr '.' "name" .
  413           | expr '.' "name" . '(' ')'
  414           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1253

    '('       [reduce using rule 411 (expr_field)]
    $default  reduce using rule 411 (expr_field)


State 1057

  412 expr_field: expr '.' '.' . "name"
  517 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1254
    "name"  shift, and go to state 1255


State 1058

  465 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1256
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1059

  417 expr_field: expr '.' $@26 . error $@27

    error  shift, and go to state 1257


State 1060

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  464     | expr '[' expr . ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ']'    shift, and go to state 1258


State 1061

  421 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 421 (expr_call)


State 1062

  331 expr_list: expr_list . ',' expr
  422 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 866
    ')'  shift, and go to state 1259


State 1063

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  599 enum_list: enum_list "name" '=' expr . "end of expression"

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1260
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787


State 1064

  619 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 . "end of code block"

    "end of code block"  shift, and go to state 1261


State 1065

  119 annotation_list: annotation_list . ',' annotation_declaration
  121 optional_annotation_list: '[' annotation_list . ']'
  544 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' "end of expression"

    ','  shift, and go to state 107
    ']'  shift, and go to state 1262


State 1066

  541 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  543                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "public"   shift, and go to state 1263
    "private"  shift, and go to state 1264

    $default  reduce using rule 531 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1265


State 1067

  536 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1266

    $default  reduce using rule 534 (optional_static_member_variable)

    optional_static_member_variable  go to state 1267


State 1068

  539 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1268


State 1069

  475 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  476     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1269
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1070

  579 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 579 (let_variable_name_with_pos_list)


State 1071

  582 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 582 (let_variable_declaration)


State 1072

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_assign: expr .
  359            | expr . '=' expr
  360            | expr . "<-" expr
  361            | expr . ":=" expr
  362            | expr . "&=" expr
  363            | expr . "|=" expr
  364            | expr . "^=" expr
  365            | expr . "&&=" expr
  366            | expr . "||=" expr
  367            | expr . "^^=" expr
  368            | expr . "+=" expr
  369            | expr . "-=" expr
  370            | expr . "*=" expr
  371            | expr . "/=" expr
  372            | expr . "%=" expr
  373            | expr . "<<=" expr
  374            | expr . ">>=" expr
  375            | expr . "<<<=" expr
  376            | expr . ">>>=" expr
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  581 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "+="                 shift, and go to state 867
    "-="                 shift, and go to state 868
    "/="                 shift, and go to state 869
    "*="                 shift, and go to state 870
    "%="                 shift, and go to state 871
    "&="                 shift, and go to state 872
    "|="                 shift, and go to state 873
    "^="                 shift, and go to state 874
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    "<<="                shift, and go to state 875
    ">>="                shift, and go to state 876
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "<-"                 shift, and go to state 877
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    ":="                 shift, and go to state 762
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "<<<="               shift, and go to state 878
    ">>>="               shift, and go to state 879
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    "&&="                shift, and go to state 880
    "||="                shift, and go to state 881
    "^^="                shift, and go to state 882
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1270
    '='                  shift, and go to state 883
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787
    '$'                  shift, and go to state 504
    '@'                  shift, and go to state 678

    $default  reduce using rule 358 (expr_assign)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1073

  583 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 583 (let_variable_declaration)


State 1074

  701 type_declaration_no_options: "type" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 700 ($@50)

    $@50  go to state 1271


State 1075

  724 type_declaration_no_options: "array" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 723 ($@55)

    $@55  go to state 1272


State 1076

  727 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' . $@57

    $default  reduce using rule 726 ($@57)

    $@57  go to state 1273


State 1077

  690 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1274


State 1078

  730 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 729 ($@59)

    $@59  go to state 1275


State 1079

  720 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 719 ($@53)

    $@53  go to state 1276


State 1080

  680 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1277


State 1081

  686 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' . $@48

    $default  reduce using rule 685 ($@48)

    $@48  go to state 1278


State 1082

  734 type_declaration_no_options: "block" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 733 ($@61)

    $@61  go to state 1279


State 1083

  737 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1280


State 1084

  741 type_declaration_no_options: "function" '<' $@64 type_declaration '>' . $@65

    $default  reduce using rule 740 ($@65)

    $@65  go to state 1281


State 1085

  744 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type . '>' $@67

    '>'  shift, and go to state 1282


State 1086

  748 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' . $@69

    $default  reduce using rule 747 ($@69)

    $@69  go to state 1283


State 1087

  751 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type . '>' $@71

    '>'  shift, and go to state 1284


State 1088

  754 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' . $@73

    $default  reduce using rule 753 ($@73)

    $@73  go to state 1285


State 1089

  552 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 610
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    tuple_type                   go to state 1286
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 615


State 1090

  757 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' . $@75

    $default  reduce using rule 756 ($@75)

    $@75  go to state 1287


State 1091

  558 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 617

    variant_type  go to state 1288


State 1092

  256 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  705 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '>'                  shift, and go to state 1289

    c_or_s  go to state 1290


State 1093

  255 type_declaration_no_options_list: type_declaration .
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418

    $default  reduce using rule 255 (type_declaration_no_options_list)


State 1094

  703 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 703 (type_declaration_no_options)


State 1095

  250 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 250 (optional_expr_list)


State 1096

  692 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 692 (dim_list)


State 1097

  550 tuple_type: "name" ':' type_declaration .
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418

    $default  reduce using rule 550 (tuple_type)


State 1098

  556 variant_type: "name" ':' type_declaration .
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418

    $default  reduce using rule 556 (variant_type)


State 1099

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  636 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1291


State 1100

  637 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 637 (variable_name_with_pos_list)


State 1101

  638 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  639                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1292

    $default  reduce using rule 638 (variable_name_with_pos_list)


State 1102

  566 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  567                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 843
    '='   shift, and go to state 845
    '|'   shift, and go to state 418

    $default  reduce using rule 566 (variable_declaration)

    copy_or_move  go to state 1293


State 1103

  569 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 569 (variable_declaration)


State 1104

  221 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_assign: expr .
  359            | expr . '=' expr
  360            | expr . "<-" expr
  361            | expr . ":=" expr
  362            | expr . "&=" expr
  363            | expr . "|=" expr
  364            | expr . "^=" expr
  365            | expr . "&&=" expr
  366            | expr . "||=" expr
  367            | expr . "^^=" expr
  368            | expr . "+=" expr
  369            | expr . "-=" expr
  370            | expr . "*=" expr
  371            | expr . "/=" expr
  372            | expr . "%=" expr
  373            | expr . "<<=" expr
  374            | expr . ">>=" expr
  375            | expr . "<<<=" expr
  376            | expr . ">>>=" expr
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  568 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 735
    "as"    shift, and go to state 736
    "+="    shift, and go to state 867
    "-="    shift, and go to state 868
    "/="    shift, and go to state 869
    "*="    shift, and go to state 870
    "%="    shift, and go to state 871
    "&="    shift, and go to state 872
    "|="    shift, and go to state 873
    "^="    shift, and go to state 874
    "<<"    shift, and go to state 745
    ">>"    shift, and go to state 746
    "++"    shift, and go to state 747
    "--"    shift, and go to state 748
    "<="    shift, and go to state 749
    "<<="   shift, and go to state 875
    ">>="   shift, and go to state 876
    ">="    shift, and go to state 752
    "=="    shift, and go to state 753
    "!="    shift, and go to state 754
    "->"    shift, and go to state 755
    "<-"    shift, and go to state 877
    "??"    shift, and go to state 757
    "?."    shift, and go to state 758
    "?["    shift, and go to state 759
    "<|"    shift, and go to state 760
    "|>"    shift, and go to state 761
    ":="    shift, and go to state 762
    "<<<"   shift, and go to state 763
    ">>>"   shift, and go to state 764
    "<<<="  shift, and go to state 878
    ">>>="  shift, and go to state 879
    "&&"    shift, and go to state 767
    "||"    shift, and go to state 768
    "^^"    shift, and go to state 769
    "&&="   shift, and go to state 880
    "||="   shift, and go to state 881
    "^^="   shift, and go to state 882
    ".."    shift, and go to state 773
    '='     shift, and go to state 883
    '?'     shift, and go to state 775
    '|'     shift, and go to state 776
    '^'     shift, and go to state 777
    '&'     shift, and go to state 778
    '<'     shift, and go to state 779
    '>'     shift, and go to state 780
    '-'     shift, and go to state 781
    '+'     shift, and go to state 782
    '*'     shift, and go to state 783
    '/'     shift, and go to state 784
    '%'     shift, and go to state 785
    '.'     shift, and go to state 786
    '['     shift, and go to state 787
    '$'     shift, and go to state 504
    '@'     shift, and go to state 678

    " <|"     reduce using rule 358 (expr_assign)
    $default  reduce using rule 568 (variable_declaration)

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 788


State 1105

  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"
  823 make_struct_decl: "struct" '<' $@88 type_declaration_no_options . '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1294
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1106

  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"
  826 make_struct_decl: "class" '<' $@90 type_declaration_no_options . '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1295
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1107

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1296
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1108

  275 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1297


State 1109

  281 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  814 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1298

    $default  reduce using rule 814 (use_initializer)

    make_struct_fields  go to state 965
    make_struct_single  go to state 1299


State 1110

  279 expr_new: "new" new_type_declaration '(' expr_list . ')'
  331 expr_list: expr_list . ',' expr

    ','  shift, and go to state 866
    ')'  shift, and go to state 1300


State 1111

  280 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1301


State 1112

  278 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1302


State 1113

  325 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  326               | "typeinfo" '(' name_in_namespace '<' . "name" c_or_s "name" '>' expr ')'

    "name"  shift, and go to state 1303


State 1114

  324 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1304


State 1115

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  329               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1305
    '>'                  shift, and go to state 1306


State 1116

  327 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1307


State 1117

  323 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1308


State 1118

  849 make_dim_decl: "array" "struct" '<' $@98 . type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1309


State 1119

  852 make_dim_decl: "array" "tuple" '<' $@100 . type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1310


State 1120

  855 make_dim_decl: "array" "variant" '<' $@102 . type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1311


State 1121

  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"
  859 make_dim_decl: "array" '<' $@104 type_declaration_no_options . '>' $@105 '(' optional_expr_list ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1312
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1122

  856 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1313


State 1123

  331 expr_list: expr_list ',' expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 331 (expr_list)


State 1124

  368 expr_assign: expr "+=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 368 (expr_assign)


State 1125

  369 expr_assign: expr "-=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 369 (expr_assign)


State 1126

  371 expr_assign: expr "/=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 371 (expr_assign)


State 1127

  370 expr_assign: expr "*=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 370 (expr_assign)


State 1128

  372 expr_assign: expr "%=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 372 (expr_assign)


State 1129

  362 expr_assign: expr "&=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 362 (expr_assign)


State 1130

  363 expr_assign: expr "|=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 363 (expr_assign)


State 1131

  364 expr_assign: expr "^=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 364 (expr_assign)


State 1132

  373 expr_assign: expr "<<=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 373 (expr_assign)


State 1133

  374 expr_assign: expr ">>=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 374 (expr_assign)


State 1134

  360 expr_assign: expr "<-" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 360 (expr_assign)


State 1135

  375 expr_assign: expr "<<<=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 375 (expr_assign)


State 1136

  376 expr_assign: expr ">>>=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 376 (expr_assign)


State 1137

  365 expr_assign: expr "&&=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 365 (expr_assign)


State 1138

  366 expr_assign: expr "||=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 366 (expr_assign)


State 1139

  367 expr_assign: expr "^^=" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 367 (expr_assign)


State 1140

  359 expr_assign: expr '=' expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 359 (expr_assign)


State 1141

  296 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 296 (expression_try_catch)


State 1142

  871 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1314


State 1143

  872 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1315


State 1144

  870 make_table_decl: "table" '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 870 (make_table_decl)


State 1145

  254 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 254 (optional_expr_map_tuple_list)


State 1146

  473 expr: "deref" '(' expr ')' .

    $default  reduce using rule 473 (expr)


State 1147

   81 expression_with_alias: "assume" "name" '=' $@5 . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1316
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1148

  314 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1317
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1149

  317 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1318
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1150

  474 expr: "addr" '(' expr ')' .

    $default  reduce using rule 474 (expr)


State 1151

  320 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1319
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1152

  505 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 505 (expr)


State 1153

  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"
  863 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options . '>' $@107 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1320
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1154

  860 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1321


State 1155

  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"
  832 make_struct_decl: "default" '<' $@94 type_declaration_no_options . '>' $@95 use_initializer

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1322
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1156

  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"
  841 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options . '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1323
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1157

  838 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1324


State 1158

  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"
  829 make_struct_decl: "variant" '<' $@92 type_declaration_no_options . '>' $@93 '(' make_variant_dim ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1325
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1159

  223 expr_call_pipe: "generator" '<' type_declaration_no_options '>' . optional_capture_list expr_full_block_assumed_piped
  475 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  476     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 971

    $default  reduce using rule 344 (optional_capture_list)

    optional_capture_list  go to state 1326


State 1160

  347 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 284

    $default  reduce using rule 122 (optional_function_argument_list)

    optional_function_argument_list  go to state 1327


State 1161

  507 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 507 (expr_mtag)


State 1162

  508 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 508 (expr_mtag)


State 1163

  509 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 509 (expr_mtag)


State 1164

  510 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 510 (expr_mtag)


State 1165

  511 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 511 (expr_mtag)


State 1166

  513 expr_mtag: "$c" '(' expr ')' . '(' ')'
  514          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1328


State 1167

  879 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1329
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1168

  800 optional_block: "where" expr_block .

    $default  reduce using rule 800 (optional_block)


State 1169

  785 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  786                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1330
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1170

  782 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1331
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1171

  781 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1332
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1172

  706 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  844 make_dim_decl: '[' . expr_list optional_comma ']'
  877 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  878                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "for"                             shift, and go to state 711
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "iterator"                        shift, and go to state 712
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    ']'                               shift, and go to state 829
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 713
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1173

  330 expr_list: expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  691 dim_list: '[' expr . ']'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ']'    shift, and go to state 830

    ']'       [reduce using rule 330 (expr_list)]
    $default  reduce using rule 330 (expr_list)


State 1174

  817 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  818                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 917
    "$f"     shift, and go to state 918
    "name"   shift, and go to state 1298

    $default  reduce using rule 799 (optional_block)

    make_struct_fields  go to state 924
    make_struct_dim     go to state 1333
    optional_block      go to state 1334


State 1175

  834 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1335
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1176

  783 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  784                   | make_struct_fields ',' . "name" ":=" expr
  787                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1336
    "name"  shift, and go to state 1337


State 1177

  792 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1298

    make_struct_fields  go to state 1338


State 1178

  815 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1179
    ",]]"  shift, and go to state 1180
    ']'    shift, and go to state 1181

    optional_trailing_delim_sqr_sqr  go to state 1339


State 1179

  808 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 808 (optional_trailing_delim_sqr_sqr)


State 1180

  809 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 809 (optional_trailing_delim_sqr_sqr)


State 1181

  807 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1340


State 1182

  816 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 816 (make_struct_decl)


State 1183

  835 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1341
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1184

  843 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 923
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple              go to state 1342
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1185

  806 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 806 (optional_trailing_semicolon_sqr_sqr)


State 1186

  805 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1343


State 1187

  845 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 845 (make_dim_decl)


State 1188

  880 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1344
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1189

  820 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1298

    make_struct_fields  go to state 924
    make_struct_dim     go to state 1345


State 1190

  819 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1346
    ";}]"                shift, and go to state 1347
    ",}]"                shift, and go to state 1348

    optional_trailing_delim_cur_sqr  go to state 1349


State 1191

  803 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1350


State 1192

  804 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 804 (optional_trailing_semicolon_cur_sqr)


State 1193

  846 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 846 (make_dim_decl)


State 1194

  882 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1351
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1195

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  836 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 836 (make_map_tuple)


State 1196

  801 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 801 (optional_trailing_semicolon_cur_cur)


State 1197

  865 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 865 (make_table)


State 1198

  256 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  259 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list . '>' $@8 expr

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '>'                  shift, and go to state 1352

    c_or_s  go to state 1290


State 1199

  256 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  262 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list . '>' $@10 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '>'                  shift, and go to state 1353

    c_or_s  go to state 1290


State 1200

   30 string_builder_body: string_builder_body "{" expr . "}"
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    "}"    shift, and go to state 1354
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787


State 1201

  881 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1355
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1202

  867 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 867 (expr_map_tuple_list)


State 1203

  868 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 868 (make_table_decl)


State 1204

  220 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  246 expressions: expressions . expression_any
  247            | expressions . error

    error                             shift, and go to state 431
    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 434
    "if"                              shift, and go to state 435
    "static_if"                       shift, and go to state 436
    "for"                             shift, and go to state 437
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "return"                          shift, and go to state 444
    "null"                            shift, and go to state 445
    "break"                           shift, and go to state 446
    "try"                             shift, and go to state 447
    "table"                           shift, and go to state 448
    "delete"                          shift, and go to state 449
    "deref"                           shift, and go to state 450
    "with"                            shift, and go to state 451
    "assume"                          shift, and go to state 452
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 455
    "continue"                        shift, and go to state 456
    "pass"                            shift, and go to state 457
    "reinterpret"                     shift, and go to state 458
    "label"                           shift, and go to state 459
    "goto"                            shift, and go to state 460
    "unsafe"                          shift, and go to state 461
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 467
    "yield"                           shift, and go to state 468
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "$ <|"                            shift, and go to state 471
    "@ <|"                            shift, and go to state 472
    "@@ <|"                           shift, and go to state 473
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 491
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    "end of code block"               shift, and go to state 1356
    "end of expression"               shift, and go to state 496
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder             go to state 506
    expr_reader                go to state 507
    expression_label           go to state 508
    expression_goto            go to state 509
    if_or_static_if            go to state 510
    expression_if_one_liner    go to state 511
    expression_if_then_else    go to state 512
    expression_for_loop        go to state 513
    expression_unsafe          go to state 514
    expression_while_loop      go to state 515
    expression_with            go to state 516
    expression_with_alias      go to state 517
    expr_call_pipe             go to state 518
    expression_any             go to state 519
    expr_keyword               go to state 520
    expression_keyword         go to state 521
    expr_pipe                  go to state 522
    name_in_namespace          go to state 523
    expression_delete          go to state 524
    expr_new                   go to state 525
    expression_break           go to state 526
    expression_continue        go to state 527
    expression_return_no_pipe  go to state 528
    expression_return          go to state 529
    expression_yield_no_pipe   go to state 530
    expression_yield           go to state 531
    expression_try_catch       go to state 532
    kwd_let                    go to state 533
    expression_let             go to state 534
    expr_cast                  go to state 535
    expr_type_decl             go to state 536
    expr_type_info             go to state 537
    block_or_lambda            go to state 538
    expr_full_block            go to state 539
    expr_numeric_const         go to state 540
    expr_assign                go to state 541
    expr_assign_pipe           go to state 542
    expr_named_call            go to state 543
    expr_method_call           go to state 544
    func_addr_expr             go to state 545
    expr_field                 go to state 546
    expr_call                  go to state 547
    expr                       go to state 548
    expr_mtag                  go to state 549
    basic_type_declaration     go to state 550
    make_decl                  go to state 551
    make_struct_decl           go to state 552
    make_tuple_call            go to state 553
    make_dim_decl              go to state 554
    make_table_decl            go to state 555
    array_comprehension        go to state 556


State 1205

  877 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1357
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1206

  638 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  639                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  878 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1358
    ','   shift, and go to state 844


State 1207

  844 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 844 (make_dim_decl)


State 1208

  463 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 463 (expr)


State 1209

  403 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1359
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1210

  522 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1360
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1211

  407 func_addr_expr: '@' '@' '<' $@22 . type_declaration_no_options '>' $@23 func_addr_name

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1361


State 1212

  410 func_addr_expr: '@' '@' '<' $@24 . optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    '('  shift, and go to state 284

    $default  reduce using rule 122 (optional_function_argument_list)

    optional_function_argument_list  go to state 1362


State 1213

   60 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1363


State 1214

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1215

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1216

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1364
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1217

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 72 (expression_if_then_else)


State 1218

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner "end of expression"
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1365
    "is"    shift, and go to state 735
    "as"    shift, and go to state 736
    "<<"    shift, and go to state 745
    ">>"    shift, and go to state 746
    "++"    shift, and go to state 747
    "--"    shift, and go to state 748
    "<="    shift, and go to state 749
    ">="    shift, and go to state 752
    "=="    shift, and go to state 753
    "!="    shift, and go to state 754
    "->"    shift, and go to state 755
    "??"    shift, and go to state 757
    "?."    shift, and go to state 758
    "?["    shift, and go to state 759
    "<|"    shift, and go to state 760
    "|>"    shift, and go to state 761
    "<<<"   shift, and go to state 763
    ">>>"   shift, and go to state 764
    "&&"    shift, and go to state 767
    "||"    shift, and go to state 768
    "^^"    shift, and go to state 769
    ".."    shift, and go to state 773
    '?'     shift, and go to state 775
    '|'     shift, and go to state 776
    '^'     shift, and go to state 777
    '&'     shift, and go to state 778
    '<'     shift, and go to state 779
    '>'     shift, and go to state 780
    '-'     shift, and go to state 781
    '+'     shift, and go to state 782
    '*'     shift, and go to state 783
    '/'     shift, and go to state 784
    '%'     shift, and go to state 785
    '.'     shift, and go to state 786
    '['     shift, and go to state 787

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1366


State 1219

  350 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "[["  shift, and go to state 971

    $default  reduce using rule 344 (optional_capture_list)

    optional_capture_list  go to state 1367


State 1220

  398 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  783 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  784                   | make_struct_fields . ',' "name" ":=" expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1176
    ']'  shift, and go to state 1368


State 1221

  331 expr_list: expr_list ',' . expr
  399 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 1369
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1123
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1222

  420 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 420 (expr_call)


State 1223

  419 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 419 (expr_call)


State 1224

  304 tuple_expansion: "name" .

    $default  reduce using rule 304 (tuple_expansion)


State 1225

  305 tuple_expansion: tuple_expansion . ',' "name"
  306 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  308                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1370
    ']'  shift, and go to state 1371


State 1226

  305 tuple_expansion: tuple_expansion . ',' "name"
  307 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1370
    ')'  shift, and go to state 1372


State 1227

  340 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1373


State 1228

  341 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1374


State 1229

  339 capture_entry: '=' . "name"

    "name"  shift, and go to state 1375


State 1230

  338 capture_entry: '&' . "name"

    "name"  shift, and go to state 1376


State 1231

  342 capture_list: capture_entry .

    $default  reduce using rule 342 (capture_list)


State 1232

  343 capture_list: capture_list . ',' capture_entry
  345 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1377
    ']'  shift, and go to state 1378


State 1233

  348 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 374

    $default  reduce using rule 125 (optional_function_type)

    optional_function_type  go to state 1379


State 1234

  481 expr: expr "is" "type" '<' . $@28 type_declaration_no_options '>' $@29

    $default  reduce using rule 479 ($@28)

    $@28  go to state 1380


State 1235

  521 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1381
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1236

  487 expr: expr "as" "type" '<' . $@30 type_declaration '>' $@31

    $default  reduce using rule 485 ($@30)

    $@30  go to state 1382


State 1237

  519 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1383
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1238

  379 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 379 (expr_assign_pipe_right)


State 1239

  377 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 377 (expr_assign_pipe_right)


State 1240

  378 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 378 (expr_assign_pipe_right)


State 1241

  400 expr_method_call: expr "->" "name" '(' . ')'
  401                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    ')'                               shift, and go to state 1384
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1385
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1242

  516 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1386
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1243

  466 expr: expr "?[" expr ']' .

    $default  reduce using rule 466 (expr)


State 1244

  492 expr: expr '?' "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 1387


State 1245

  520 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1388


State 1246

  489 expr: expr '?' "as" "name" .

    $default  reduce using rule 489 (expr)


State 1247

  493 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 493 (expr)


State 1248

  478 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1389
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1249

  518 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1390


State 1250

  469 expr: expr '.' "?." "name" .

    $default  reduce using rule 469 (expr)


State 1251

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  467     | expr '.' "?[" expr . ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ']'    shift, and go to state 1391


State 1252

  515 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1392
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1253

  413 expr_field: expr '.' "name" '(' . ')'
  414           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    ')'                               shift, and go to state 1393
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1394
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1254

  517 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1395


State 1255

  412 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 412 (expr_field)


State 1256

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  465     | expr '.' '[' expr . ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ']'    shift, and go to state 1396


State 1257

  417 expr_field: expr '.' $@26 error . $@27

    $default  reduce using rule 416 ($@27)

    $@27  go to state 1397


State 1258

  464 expr: expr '[' expr ']' .

    $default  reduce using rule 464 (expr)


State 1259

  422 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 422 (expr_call)


State 1260

  599 enum_list: enum_list "name" '=' expr "end of expression" .

    $default  reduce using rule 599 (enum_list)


State 1261

  619 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block" .

    $default  reduce using rule 619 (enum_declaration)


State 1262

  121 optional_annotation_list: '[' annotation_list ']' .
  544 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . "end of expression"

    "end of expression"  shift, and go to state 1398

    $default  reduce using rule 121 (optional_annotation_list)


State 1263

  532 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 532 (optional_public_or_private_member_variable)


State 1264

  533 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 533 (optional_public_or_private_member_variable)


State 1265

  541 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@35 function_declaration_header "end of expression"
  543                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "abstract"  shift, and go to state 1399
    "static"    shift, and go to state 1266

    $default  reduce using rule 534 (optional_static_member_variable)

    optional_static_member_variable  go to state 1400


State 1266

  535 optional_static_member_variable: "static" .

    $default  reduce using rule 535 (optional_static_member_variable)


State 1267

  536 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1401
    "sealed"    shift, and go to state 1402

    $default  reduce using rule 526 (optional_override)

    optional_override  go to state 1403


State 1268

  539 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression" .

    $default  reduce using rule 539 (struct_variable_declaration_list)


State 1269

  475 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  476     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 971

    $default  reduce using rule 344 (optional_capture_list)

    optional_capture_list  go to state 1404


State 1270

  581 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 581 (let_variable_declaration)


State 1271

  701 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 701 (type_declaration_no_options)


State 1272

  724 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 724 (type_declaration_no_options)


State 1273

  727 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57 .

    $default  reduce using rule 727 (type_declaration_no_options)


State 1274

  690 table_type_pair: type_declaration c_or_s type_declaration .
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418

    $default  reduce using rule 690 (table_type_pair)


State 1275

  730 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 730 (type_declaration_no_options)


State 1276

  720 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 720 (type_declaration_no_options)


State 1277

  680 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 680 (bitfield_bits)


State 1278

  686 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48 .

    $default  reduce using rule 686 (bitfield_type_declaration)


State 1279

  734 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 734 (type_declaration_no_options)


State 1280

  737 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 736 ($@63)

    $@63  go to state 1405


State 1281

  741 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65 .

    $default  reduce using rule 741 (type_declaration_no_options)


State 1282

  744 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' . $@67

    $default  reduce using rule 743 ($@67)

    $@67  go to state 1406


State 1283

  748 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69 .

    $default  reduce using rule 748 (type_declaration_no_options)


State 1284

  751 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' . $@71

    $default  reduce using rule 750 ($@71)

    $@71  go to state 1407


State 1285

  754 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73 .

    $default  reduce using rule 754 (type_declaration_no_options)


State 1286

  552 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 552 (tuple_type_list)


State 1287

  757 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75 .

    $default  reduce using rule 757 (type_declaration_no_options)


State 1288

  558 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 558 (variant_type_list)


State 1289

  705 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1408


State 1290

  256 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1409


State 1291

  636 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 636 (variable_name_with_pos_list)


State 1292

  639 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1410


State 1293

  567 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1411
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1294

  823 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' . $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 822 ($@89)

    $@89  go to state 1412


State 1295

  826 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' . $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 825 ($@91)

    $@91  go to state 1413


State 1296

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  331 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 286
    ','                    shift, and go to state 866

    expression_block  go to state 1414


State 1297

  275 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 274 ($@12)

    $@12  go to state 1415


State 1298

  781 make_struct_fields: "name" . copy_or_move expr
  782                   | "name" . ":=" expr

    "<-"  shift, and go to state 843
    ":="  shift, and go to state 1170
    '='   shift, and go to state 845

    copy_or_move  go to state 1171


State 1299

  281 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1416


State 1300

  279 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 279 (expr_new)


State 1301

  280 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 280 (expr_new)


State 1302

  278 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 278 (expr_new)


State 1303

  325 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  326               | "typeinfo" '(' name_in_namespace '<' "name" . c_or_s "name" '>' expr ')'

    "end of expression"  shift, and go to state 611
    ','                  shift, and go to state 612
    '>'                  shift, and go to state 1417

    c_or_s  go to state 1418


State 1304

  324 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 324 (expr_type_info)


State 1305

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1419


State 1306

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1420


State 1307

  327 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 327 (expr_type_info)


State 1308

  323 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 322 ($@20)

    $@20  go to state 1421


State 1309

  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"
  849 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options . '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1422
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1310

  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"
  852 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options . '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1423
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1311

  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"
  855 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options . '>' $@103 '(' make_variant_dim ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1424
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1312

  859 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' . $@105 '(' optional_expr_list ')'

    $default  reduce using rule 858 ($@105)

    $@105  go to state 1425


State 1313

  856 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 856 (make_dim_decl)


State 1314

  871 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 253 (optional_expr_map_tuple_list)

    string_builder                go to state 506
    expr_reader                   go to state 507
    optional_expr_map_tuple_list  go to state 1426
    expression_keyword            go to state 568
    name_in_namespace             go to state 523
    expr_new                      go to state 525
    expr_cast                     go to state 535
    expr_type_decl                go to state 536
    expr_type_info                go to state 537
    block_or_lambda               go to state 538
    expr_full_block               go to state 539
    expr_numeric_const            go to state 540
    expr_named_call               go to state 543
    expr_method_call              go to state 544
    func_addr_expr                go to state 545
    expr_field                    go to state 546
    expr_call                     go to state 547
    expr                          go to state 695
    expr_mtag                     go to state 549
    basic_type_declaration        go to state 550
    make_decl                     go to state 551
    make_struct_decl              go to state 552
    make_map_tuple                go to state 703
    make_tuple_call               go to state 553
    make_dim_decl                 go to state 554
    expr_map_tuple_list           go to state 887
    make_table_decl               go to state 555
    array_comprehension           go to state 556


State 1315

  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"
  872 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1427
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1316

   81 expression_with_alias: "assume" "name" '=' $@5 expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 81 (expression_with_alias)


State 1317

  314 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 313 ($@14)

    $@14  go to state 1428


State 1318

  317 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 316 ($@16)

    $@16  go to state 1429


State 1319

  320 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 319 ($@18)

    $@18  go to state 1430


State 1320

  863 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' . $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 862 ($@107)

    $@107  go to state 1431


State 1321

  860 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 860 (make_dim_decl)


State 1322

  832 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' . $@95 use_initializer

    $default  reduce using rule 831 ($@95)

    $@95  go to state 1432


State 1323

  841 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' . $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 840 ($@97)

    $@97  go to state 1433


State 1324

  838 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 838 (make_tuple_call)


State 1325

  829 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' . $@93 '(' make_variant_dim ')'

    $default  reduce using rule 828 ($@93)

    $@93  go to state 1434


State 1326

  223 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list . expr_full_block_assumed_piped
  475 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  476     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1435
    '$'  shift, and go to state 504
    '@'  shift, and go to state 678

    block_or_lambda                go to state 721
    expr_full_block_assumed_piped  go to state 1436


State 1327

  347 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 374

    $default  reduce using rule 125 (optional_function_type)

    optional_function_type  go to state 1437


State 1328

  513 expr_mtag: "$c" '(' expr ')' '(' . ')'
  514          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    ')'                               shift, and go to state 1438
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1439
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1329

  331 expr_list: expr_list . ',' expr
  879 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1440
    ','                  shift, and go to state 866


State 1330

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  785 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  786                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1441


State 1331

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  782 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 782 (make_struct_fields)


State 1332

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  781 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 781 (make_struct_fields)


State 1333

  792 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  818 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 917
    "end of expression"  shift, and go to state 1177

    $default  reduce using rule 799 (optional_block)

    optional_block  go to state 1442


State 1334

  817 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1179
    ",]]"  shift, and go to state 1180
    ']'    shift, and go to state 1181

    optional_trailing_delim_sqr_sqr  go to state 1443


State 1335

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  834 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 834 (make_tuple)


State 1336

  787 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  788                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1444


State 1337

  783 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  784                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 843
    ":="  shift, and go to state 1445
    '='   shift, and go to state 845

    copy_or_move  go to state 1446


State 1338

  783 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  784                   | make_struct_fields . ',' "name" ":=" expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  792 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1176

    $default  reduce using rule 792 (make_struct_dim)


State 1339

  815 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 815 (make_struct_decl)


State 1340

  807 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 807 (optional_trailing_delim_sqr_sqr)


State 1341

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  835 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 835 (make_tuple)


State 1342

  835 make_tuple: make_tuple . ',' expr
  843 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1183

    $default  reduce using rule 843 (make_dim)


State 1343

  805 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 805 (optional_trailing_semicolon_sqr_sqr)


State 1344

  331 expr_list: expr_list . ',' expr
  880 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1447
    ','                  shift, and go to state 866


State 1345

  792 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  820 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 917
    "end of expression"  shift, and go to state 1177

    $default  reduce using rule 799 (optional_block)

    optional_block  go to state 1448


State 1346

  810 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1449


State 1347

  811 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 811 (optional_trailing_delim_cur_sqr)


State 1348

  812 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 812 (optional_trailing_delim_cur_sqr)


State 1349

  819 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 819 (make_struct_decl)


State 1350

  803 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 803 (optional_trailing_semicolon_cur_sqr)


State 1351

  331 expr_list: expr_list . ',' expr
  882 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1450
    ','                  shift, and go to state 866


State 1352

  259 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' . $@8 expr

    $default  reduce using rule 258 ($@8)

    $@8  go to state 1451


State 1353

  262 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' . $@10 optional_expr_list_in_braces

    $default  reduce using rule 261 ($@10)

    $@10  go to state 1452


State 1354

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1355

  331 expr_list: expr_list . ',' expr
  881 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1453
    ','                  shift, and go to state 866


State 1356

  220 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 220 (expression_block)


State 1357

  331 expr_list: expr_list . ',' expr
  877 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1454
    ','                  shift, and go to state 866


State 1358

  878 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1455
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1359

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  403 func_addr_name: "$i" '(' expr . ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1456


State 1360

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  522          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1457


State 1361

  407 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options . '>' $@23 func_addr_name
  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1458
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1362

  410 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list . optional_function_type '>' $@25 func_addr_name

    ':'  shift, and go to state 374

    $default  reduce using rule 125 (optional_function_type)

    optional_function_type  go to state 1459


State 1363

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1364

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 735
    "as"                   shift, and go to state 736
    "<<"                   shift, and go to state 745
    ">>"                   shift, and go to state 746
    "++"                   shift, and go to state 747
    "--"                   shift, and go to state 748
    "<="                   shift, and go to state 749
    ">="                   shift, and go to state 752
    "=="                   shift, and go to state 753
    "!="                   shift, and go to state 754
    "->"                   shift, and go to state 755
    "??"                   shift, and go to state 757
    "?."                   shift, and go to state 758
    "?["                   shift, and go to state 759
    "<|"                   shift, and go to state 760
    "|>"                   shift, and go to state 761
    "<<<"                  shift, and go to state 763
    ">>>"                  shift, and go to state 764
    "&&"                   shift, and go to state 767
    "||"                   shift, and go to state 768
    "^^"                   shift, and go to state 769
    ".."                   shift, and go to state 773
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 775
    '|'                    shift, and go to state 776
    '^'                    shift, and go to state 777
    '&'                    shift, and go to state 778
    '<'                    shift, and go to state 779
    '>'                    shift, and go to state 780
    '-'                    shift, and go to state 781
    '+'                    shift, and go to state 782
    '*'                    shift, and go to state 783
    '/'                    shift, and go to state 784
    '%'                    shift, and go to state 785
    '.'                    shift, and go to state 786
    '['                    shift, and go to state 787

    expression_block  go to state 1460


State 1365

   66 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 65 ($@2)

    $@2  go to state 1461


State 1366

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1462


State 1367

  350 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 284

    $default  reduce using rule 122 (optional_function_argument_list)

    optional_function_argument_list  go to state 1463


State 1368

  398 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1464


State 1369

  399 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  844 make_dim_decl: '[' . expr_list optional_comma ']'
  877 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  878                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "for"                             shift, and go to state 711
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "iterator"                        shift, and go to state 712
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "$f"                              shift, and go to state 918
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 919
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 713
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_fields      go to state 1465
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1370

  305 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1466


State 1371

  306 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  308                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ']'  shift, and go to state 1467


State 1372

  307 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1468
    '&'  shift, and go to state 390

    $default  reduce using rule 573 (optional_ref)

    optional_ref  go to state 1469


State 1373

  340 capture_entry: "<-" "name" .

    $default  reduce using rule 340 (capture_entry)


State 1374

  341 capture_entry: ":=" "name" .

    $default  reduce using rule 341 (capture_entry)


State 1375

  339 capture_entry: '=' "name" .

    $default  reduce using rule 339 (capture_entry)


State 1376

  338 capture_entry: '&' "name" .

    $default  reduce using rule 338 (capture_entry)


State 1377

  343 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1227
    ":="  shift, and go to state 1228
    '='   shift, and go to state 1229
    '&'   shift, and go to state 1230

    capture_entry  go to state 1470


State 1378

  345 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1471


State 1379

  348 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1472
    "begin of code block"  shift, and go to state 286

    expression_block       go to state 1473
    block_or_simple_block  go to state 1474


State 1380

  481 expr: expr "is" "type" '<' $@28 . type_declaration_no_options '>' $@29

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1475


State 1381

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  521          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1476


State 1382

  487 expr: expr "as" "type" '<' $@30 . type_declaration '>' $@31

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1477


State 1383

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  519          | expr "as" "$f" '(' expr . ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1478


State 1384

  400 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 400 (expr_method_call)


State 1385

  331 expr_list: expr_list . ',' expr
  401 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 866
    ')'  shift, and go to state 1479


State 1386

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  516          | expr "?." "$f" '(' expr . ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1480


State 1387

  492 expr: expr '?' "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 490 ($@32)

    $@32  go to state 1481


State 1388

  520 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1482
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1389

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  478     | expr '?' expr ':' expr .
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 478 (expr)


State 1390

  518 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1483
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1391

  467 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 467 (expr)


State 1392

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr '.' "$f" '(' expr . ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1484


State 1393

  413 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 413 (expr_field)


State 1394

  331 expr_list: expr_list . ',' expr
  414 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 866
    ')'  shift, and go to state 1485


State 1395

  517 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1486
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1396

  465 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 465 (expr)


State 1397

  417 expr_field: expr '.' $@26 error $@27 .

    $default  reduce using rule 417 (expr_field)


State 1398

  544 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' "end of expression" .

    $default  reduce using rule 544 (struct_variable_declaration_list)


State 1399

  541 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@35 function_declaration_header "end of expression"

    "const"  shift, and go to state 1487

    $default  reduce using rule 529 (optional_constant)

    optional_constant  go to state 1488


State 1400

  543 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@36 function_declaration_header expression_block

    "override"  shift, and go to state 1401
    "sealed"    shift, and go to state 1402

    $default  reduce using rule 526 (optional_override)

    optional_override  go to state 1489


State 1401

  527 optional_override: "override" .

    $default  reduce using rule 527 (optional_override)


State 1402

  528 optional_override: "sealed" .

    $default  reduce using rule 528 (optional_override)


State 1403

  536 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1263
    "private"  shift, and go to state 1264

    $default  reduce using rule 531 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1490


State 1404

  475 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  476     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1435


State 1405

  737 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 737 (type_declaration_no_options)


State 1406

  744 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67 .

    $default  reduce using rule 744 (type_declaration_no_options)


State 1407

  751 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71 .

    $default  reduce using rule 751 (type_declaration_no_options)


State 1408

  705 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 249 (optional_expr_list)

    string_builder          go to state 506
    expr_reader             go to state 507
    optional_expr_list      go to state 1491
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 828
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1409

  256 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418

    $default  reduce using rule 256 (type_declaration_no_options_list)


State 1410

  639 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 639 (variable_name_with_pos_list)


State 1411

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  567 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 567 (variable_declaration)


State 1412

  823 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1492


State 1413

  826 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1493


State 1414

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 76 (expression_for_loop)


State 1415

  275 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 275 (new_type_declaration)


State 1416

  281 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 281 (expr_new)


State 1417

  325 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1494
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1418

  326 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s . "name" '>' expr ')'

    "name"  shift, and go to state 1495


State 1419

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1496


State 1420

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1497
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1421

  323 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 323 (expr_type_decl)


State 1422

  849 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' . $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 848 ($@99)

    $@99  go to state 1498


State 1423

  852 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' . $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 851 ($@101)

    $@101  go to state 1499


State 1424

  855 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' . $@103 '(' make_variant_dim ')'

    $default  reduce using rule 854 ($@103)

    $@103  go to state 1500


State 1425

  859 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 . '(' optional_expr_list ')'

    '('  shift, and go to state 1501


State 1426

  871 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1502


State 1427

  872 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1503


State 1428

  314 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1504
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1429

  317 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1505
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1430

  320 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1506
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1431

  863 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1507


State 1432

  832 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 . use_initializer

    "uninitialized"  shift, and go to state 1508

    $default  reduce using rule 813 (use_initializer)

    use_initializer  go to state 1509


State 1433

  841 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1510


State 1434

  829 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 . '(' make_variant_dim ')'

    '('  shift, and go to state 1511


State 1435

  475 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  476     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    ')'                               shift, and go to state 1512
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1513
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1436

  223 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped .

    $default  reduce using rule 223 (expr_call_pipe)


State 1437

  347 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1472
    "begin of code block"  shift, and go to state 286

    expression_block       go to state 1473
    block_or_simple_block  go to state 1514


State 1438

  513 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 513 (expr_mtag)


State 1439

  331 expr_list: expr_list . ',' expr
  514 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 866
    ')'  shift, and go to state 1515


State 1440

  879 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1516
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1441

  785 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  786                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 843
    ":="  shift, and go to state 1517
    '='   shift, and go to state 845

    copy_or_move  go to state 1518


State 1442

  818 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1179
    ",]]"  shift, and go to state 1180
    ']'    shift, and go to state 1181

    optional_trailing_delim_sqr_sqr  go to state 1519


State 1443

  817 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 817 (make_struct_decl)


State 1444

  787 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  788                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1520
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1445

  784 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1521
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1446

  783 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1522
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1447

  880 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1523
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1448

  820 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1346
    ";}]"                shift, and go to state 1347
    ",}]"                shift, and go to state 1348

    optional_trailing_delim_cur_sqr  go to state 1524


State 1449

  810 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 810 (optional_trailing_delim_cur_sqr)


State 1450

  882 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 695
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_map_tuple          go to state 1525
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1451

  259 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1526
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1452

  262 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 . optional_expr_list_in_braces

    '('  shift, and go to state 1527

    '('       [reduce using rule 251 (optional_expr_list_in_braces)]
    $default  reduce using rule 251 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1528


State 1453

  881 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 695
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_map_tuple          go to state 1529
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1454

  877 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1530
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1455

  331 expr_list: expr_list . ',' expr
  878 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1531
    ','                  shift, and go to state 866


State 1456

  403 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 403 (func_addr_name)


State 1457

  522 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 522 (expr_mtag)


State 1458

  407 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' . $@23 func_addr_name

    $default  reduce using rule 406 ($@23)

    $@23  go to state 1532


State 1459

  410 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type . '>' $@25 func_addr_name

    '>'  shift, and go to state 1533


State 1460

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1213
    "elif"         shift, and go to state 1214
    "static_elif"  shift, and go to state 1215

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1216
    expression_else      go to state 1534


State 1461

   66 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "return"                          shift, and go to state 1535
    "null"                            shift, and go to state 445
    "break"                           shift, and go to state 446
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "continue"                        shift, and go to state 456
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "yield"                           shift, and go to state 1536
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder             go to state 506
    expr_reader                go to state 507
    expression_if_one_liner    go to state 1537
    expression_keyword         go to state 568
    name_in_namespace          go to state 523
    expr_new                   go to state 525
    expression_break           go to state 1538
    expression_continue        go to state 1539
    expression_return_no_pipe  go to state 1540
    expression_yield_no_pipe   go to state 1541
    expr_cast                  go to state 535
    expr_type_decl             go to state 536
    expr_type_info             go to state 537
    block_or_lambda            go to state 538
    expr_full_block            go to state 539
    expr_numeric_const         go to state 540
    expr_named_call            go to state 543
    expr_method_call           go to state 544
    func_addr_expr             go to state 545
    expr_field                 go to state 546
    expr_call                  go to state 547
    expr                       go to state 1542
    expr_mtag                  go to state 549
    basic_type_declaration     go to state 550
    make_decl                  go to state 551
    make_struct_decl           go to state 552
    make_tuple_call            go to state 553
    make_dim_decl              go to state 554
    make_table_decl            go to state 555
    array_comprehension        go to state 556


State 1462

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 74 (expression_if_then_else)


State 1463

  350 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 374

    $default  reduce using rule 125 (optional_function_type)

    optional_function_type  go to state 1543


State 1464

  398 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 398 (expr_named_call)


State 1465

  399 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  783 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  784                   | make_struct_fields . ',' "name" ":=" expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1176
    ']'  shift, and go to state 1544


State 1466

  305 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 305 (tuple_expansion)


State 1467

  306 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  308                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1545
    '&'  shift, and go to state 390

    $default  reduce using rule 573 (optional_ref)

    optional_ref  go to state 1546


State 1468

  307 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1547


State 1469

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 573
    ":="  shift, and go to state 574
    '='   shift, and go to state 575

    copy_or_move_or_clone  go to state 1548


State 1470

  343 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 343 (capture_list)


State 1471

  345 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 345 (optional_capture_list)


State 1472

  333 block_or_simple_block: "=>" . expr
  334                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "<-"                              shift, and go to state 1549
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1550
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1473

  332 block_or_simple_block: expression_block .

    $default  reduce using rule 332 (block_or_simple_block)


State 1474

  348 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 348 (expr_full_block)


State 1475

  481 expr: expr "is" "type" '<' $@28 type_declaration_no_options . '>' $@29
  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "??"        shift, and go to state 411
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '>'         shift, and go to state 1551
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    dim_list  go to state 417


State 1476

  521 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 521 (expr_mtag)


State 1477

  487 expr: expr "as" "type" '<' $@30 type_declaration . '>' $@31
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1552


State 1478

  519 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 519 (expr_mtag)


State 1479

  401 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 401 (expr_method_call)


State 1480

  516 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 516 (expr_mtag)


State 1481

  492 expr: expr '?' "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 357
    type_declaration             go to state 1553


State 1482

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr '?' "as" "$f" '(' expr . ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1554


State 1483

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr '.' "?." "$f" '(' expr . ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1555


State 1484

  515 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 515 (expr_mtag)


State 1485

  414 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 414 (expr_field)


State 1486

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr '.' '.' "$f" '(' expr . ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1556


State 1487

  530 optional_constant: "const" .

    $default  reduce using rule 530 (optional_constant)


State 1488

  541 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@35 function_declaration_header "end of expression"

    $default  reduce using rule 540 ($@35)

    $@35  go to state 1557


State 1489

  543 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@36 function_declaration_header expression_block

    "const"  shift, and go to state 1487

    $default  reduce using rule 529 (optional_constant)

    optional_constant  go to state 1558


State 1490

  536 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 622
    "name"  shift, and go to state 623

    variable_declaration         go to state 1559
    variable_name_with_pos_list  go to state 625


State 1491

  705 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1560


State 1492

  823 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1508

    $default  reduce using rule 813 (use_initializer)

    use_initializer  go to state 1561


State 1493

  826 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1508

    $default  reduce using rule 813 (use_initializer)

    use_initializer  go to state 1562


State 1494

  325 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1563


State 1495

  326 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" . '>' expr ')'

    '>'  shift, and go to state 1564


State 1496

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1565


State 1497

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1566


State 1498

  849 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1567


State 1499

  852 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1568


State 1500

  855 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 . '(' make_variant_dim ')'

    '('  shift, and go to state 1569


State 1501

  859 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 249 (optional_expr_list)

    string_builder          go to state 506
    expr_reader             go to state 507
    optional_expr_list      go to state 1570
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 828
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1502

  871 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 871 (make_table_decl)


State 1503

  872 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 253 (optional_expr_map_tuple_list)

    string_builder                go to state 506
    expr_reader                   go to state 507
    optional_expr_map_tuple_list  go to state 1571
    expression_keyword            go to state 568
    name_in_namespace             go to state 523
    expr_new                      go to state 525
    expr_cast                     go to state 535
    expr_type_decl                go to state 536
    expr_type_info                go to state 537
    block_or_lambda               go to state 538
    expr_full_block               go to state 539
    expr_numeric_const            go to state 540
    expr_named_call               go to state 543
    expr_method_call              go to state 544
    func_addr_expr                go to state 545
    expr_field                    go to state 546
    expr_call                     go to state 547
    expr                          go to state 695
    expr_mtag                     go to state 549
    basic_type_declaration        go to state 550
    make_decl                     go to state 551
    make_struct_decl              go to state 552
    make_map_tuple                go to state 703
    make_tuple_call               go to state 553
    make_dim_decl                 go to state 554
    expr_map_tuple_list           go to state 887
    make_table_decl               go to state 555
    array_comprehension           go to state 556


State 1504

  314 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 314 (expr_cast)


State 1505

  317 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 317 (expr_cast)


State 1506

  320 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 320 (expr_cast)


State 1507

  863 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 1572
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1508

  814 use_initializer: "uninitialized" .

    $default  reduce using rule 814 (use_initializer)


State 1509

  832 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer .

    $default  reduce using rule 832 (make_struct_decl)


State 1510

  841 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1508

    $default  reduce using rule 813 (use_initializer)

    use_initializer  go to state 1573


State 1511

  829 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1298

    make_struct_fields  go to state 1574
    make_variant_dim    go to state 1575


State 1512

  475 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 475 (expr)


State 1513

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  476     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1576


State 1514

  347 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 347 (expr_block)


State 1515

  514 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 514 (expr_mtag)


State 1516

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  879 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1577
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787

    $default  reduce using rule 873 (array_comprehension_where)

    array_comprehension_where  go to state 1578


State 1517

  786 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1579
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1518

  785 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1580
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1519

  818 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 818 (make_struct_decl)


State 1520

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  787 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  788                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1581


State 1521

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  784 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 784 (make_struct_fields)


State 1522

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  783 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 783 (make_struct_fields)


State 1523

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  880 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1577
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787

    $default  reduce using rule 873 (array_comprehension_where)

    array_comprehension_where  go to state 1582


State 1524

  820 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 820 (make_struct_decl)


State 1525

  882 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1577

    $default  reduce using rule 873 (array_comprehension_where)

    array_comprehension_where  go to state 1583


State 1526

  259 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 259 (expression_keyword)


State 1527

  252 optional_expr_list_in_braces: '(' . optional_expr_list optional_comma ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 249 (optional_expr_list)

    string_builder          go to state 506
    expr_reader             go to state 507
    optional_expr_list      go to state 1584
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 828
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1528

  262 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces .

    $default  reduce using rule 262 (expression_keyword)


State 1529

  881 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1577

    $default  reduce using rule 873 (array_comprehension_where)

    array_comprehension_where  go to state 1585


State 1530

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  877 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1577
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787

    $default  reduce using rule 873 (array_comprehension_where)

    array_comprehension_where  go to state 1586


State 1531

  878 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1587
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1532

  407 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 954
    "name"  shift, and go to state 59

    name_in_namespace  go to state 957
    func_addr_name     go to state 1588


State 1533

  410 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' . $@25 func_addr_name

    $default  reduce using rule 409 ($@25)

    $@25  go to state 1589


State 1534

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1535

  285 expression_return_no_pipe: "return" .
  286                          | "return" . expr_list
  287                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "<-"                              shift, and go to state 1590
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    $default  reduce using rule 285 (expression_return_no_pipe)

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 645
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1536

  291 expression_yield_no_pipe: "yield" . expr
  292                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "<-"                              shift, and go to state 1591
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1592
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1537

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 66 (expression_else_one_liner)


State 1538

   70 expression_if_one_liner: expression_break .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1539

   71 expression_if_one_liner: expression_continue .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1540

   68 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1541

   69 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1542

   67 expression_if_one_liner: expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 67 (expression_if_one_liner)


State 1543

  350 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1593


State 1544

  399 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1594


State 1545

  306 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 311
    "array"      shift, and go to state 312
    "table"      shift, and go to state 313
    "typedecl"   shift, and go to state 314
    "iterator"   shift, and go to state 315
    "smart_ptr"  shift, and go to state 316
    "bool"       shift, and go to state 317
    "void"       shift, and go to state 318
    "string"     shift, and go to state 319
    "auto"       shift, and go to state 320
    "int"        shift, and go to state 321
    "int2"       shift, and go to state 322
    "int3"       shift, and go to state 323
    "int4"       shift, and go to state 324
    "uint"       shift, and go to state 325
    "bitfield"   shift, and go to state 326
    "uint2"      shift, and go to state 327
    "uint3"      shift, and go to state 328
    "uint4"      shift, and go to state 329
    "float"      shift, and go to state 330
    "float2"     shift, and go to state 331
    "float3"     shift, and go to state 332
    "float4"     shift, and go to state 333
    "range"      shift, and go to state 334
    "urange"     shift, and go to state 335
    "range64"    shift, and go to state 336
    "urange64"   shift, and go to state 337
    "block"      shift, and go to state 338
    "int64"      shift, and go to state 339
    "uint64"     shift, and go to state 340
    "double"     shift, and go to state 341
    "function"   shift, and go to state 342
    "lambda"     shift, and go to state 343
    "int8"       shift, and go to state 344
    "uint8"      shift, and go to state 345
    "int16"      shift, and go to state 346
    "uint16"     shift, and go to state 347
    "tuple"      shift, and go to state 348
    "variant"    shift, and go to state 349
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 350
    "name"       shift, and go to state 59
    '$'          shift, and go to state 351

    name_in_namespace            go to state 352
    basic_type_declaration       go to state 353
    structure_type_declaration   go to state 354
    auto_type_declaration        go to state 355
    bitfield_type_declaration    go to state 356
    type_declaration_no_options  go to state 1595


State 1546

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 573
    ":="  shift, and go to state 574
    '='   shift, and go to state 575

    copy_or_move_or_clone  go to state 1596


State 1547

  307 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "<-"        shift, and go to state 573
    "??"        shift, and go to state 411
    ":="        shift, and go to state 574
    '='         shift, and go to state 575
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    copy_or_move_or_clone  go to state 1597
    dim_list               go to state 417


State 1548

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1598
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1549

  334 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1599
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1550

  333 block_or_simple_block: "=>" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    ".."  error (nonassociative)

    $default  reduce using rule 333 (block_or_simple_block)


State 1551

  481 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' . $@29

    $default  reduce using rule 480 ($@29)

    $@29  go to state 1600


State 1552

  487 expr: expr "as" "type" '<' $@30 type_declaration '>' . $@31

    $default  reduce using rule 486 ($@31)

    $@31  go to state 1601


State 1553

  492 expr: expr '?' "as" "type" '<' $@32 type_declaration . '>' $@33
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 418
    '>'  shift, and go to state 1602


State 1554

  520 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 520 (expr_mtag)


State 1555

  518 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 518 (expr_mtag)


State 1556

  517 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 517 (expr_mtag)


State 1557

  541 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1603


State 1558

  543 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@36 function_declaration_header expression_block

    $default  reduce using rule 542 ($@36)

    $@36  go to state 1604


State 1559

  536 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 536 (structure_variable_declaration)


State 1560

  705 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 705 (type_declaration_no_options)


State 1561

  823 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1298
    '('     shift, and go to state 1605

    $default  reduce using rule 798 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1606
    make_struct_dim_list           go to state 1607
    make_struct_dim_decl           go to state 1608
    optional_make_struct_dim_decl  go to state 1609


State 1562

  826 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1298
    '('     shift, and go to state 1605

    $default  reduce using rule 798 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1606
    make_struct_dim_list           go to state 1607
    make_struct_dim_decl           go to state 1608
    optional_make_struct_dim_decl  go to state 1610


State 1563

  325 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 325 (expr_type_info)


State 1564

  326 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1611
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1565

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1612
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1566

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 328 (expr_type_info)


State 1567

  849 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1508

    $default  reduce using rule 813 (use_initializer)

    use_initializer  go to state 1613


State 1568

  852 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1508

    $default  reduce using rule 813 (use_initializer)

    use_initializer  go to state 1614


State 1569

  855 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1298

    make_struct_fields  go to state 1574
    make_variant_dim    go to state 1615


State 1570

  859 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1616


State 1571

  872 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1617


State 1572

  331 expr_list: expr_list . ',' expr
  863 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 951

    $default  reduce using rule 875 (optional_comma)

    optional_comma  go to state 1618


State 1573

  841 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1298
    '('     shift, and go to state 1605

    $default  reduce using rule 798 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1606
    make_struct_dim_list           go to state 1607
    make_struct_dim_decl           go to state 1608
    optional_make_struct_dim_decl  go to state 1619


State 1574

  783 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  784                   | make_struct_fields . ',' "name" ":=" expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  789 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1176

    $default  reduce using rule 789 (make_variant_dim)


State 1575

  829 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1620


State 1576

  476 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 476 (expr)


State 1577

  874 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1621


State 1578

  879 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1622


State 1579

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  786 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 786 (make_struct_fields)


State 1580

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  785 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 785 (make_struct_fields)


State 1581

  787 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  788                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 843
    ":="  shift, and go to state 1623
    '='   shift, and go to state 845

    copy_or_move  go to state 1624


State 1582

  880 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1625


State 1583

  882 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1626


State 1584

  252 optional_expr_list_in_braces: '(' optional_expr_list . optional_comma ')'

    ','  shift, and go to state 1627

    $default  reduce using rule 875 (optional_comma)

    optional_comma  go to state 1628


State 1585

  881 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1629


State 1586

  877 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1630


State 1587

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  878 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1577
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787

    $default  reduce using rule 873 (array_comprehension_where)

    array_comprehension_where  go to state 1631


State 1588

  407 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name .

    $default  reduce using rule 407 (func_addr_expr)


State 1589

  410 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 954
    "name"  shift, and go to state 59

    name_in_namespace  go to state 957
    func_addr_name     go to state 1632


State 1590

  287 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    expr_list               go to state 865
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 714
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1591

  292 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1633
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1592

  291 expression_yield_no_pipe: "yield" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 291 (expression_yield_no_pipe)


State 1593

  350 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 350 (expr_full_block_assumed_piped)


State 1594

  399 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 399 (expr_named_call)


State 1595

  306 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  697 type_declaration_no_options: type_declaration_no_options . dim_list
  698                            | type_declaration_no_options . '[' ']'
  706                            | type_declaration_no_options . '-' '[' ']'
  707                            | type_declaration_no_options . "explicit"
  708                            | type_declaration_no_options . "const"
  709                            | type_declaration_no_options . '-' "const"
  710                            | type_declaration_no_options . '&'
  711                            | type_declaration_no_options . '-' '&'
  712                            | type_declaration_no_options . '#'
  713                            | type_declaration_no_options . "implicit"
  714                            | type_declaration_no_options . '-' '#'
  715                            | type_declaration_no_options . "==" "const"
  716                            | type_declaration_no_options . "==" '&'
  717                            | type_declaration_no_options . '?'
  721                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 407
    "implicit"  shift, and go to state 408
    "explicit"  shift, and go to state 409
    "=="        shift, and go to state 410
    "<-"        shift, and go to state 573
    "??"        shift, and go to state 411
    ":="        shift, and go to state 574
    '='         shift, and go to state 575
    '?'         shift, and go to state 412
    '&'         shift, and go to state 413
    '-'         shift, and go to state 414
    '['         shift, and go to state 415
    '#'         shift, and go to state 416

    copy_or_move_or_clone  go to state 1634
    dim_list               go to state 417


State 1596

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1635
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1597

  307 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1636
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1598

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1637
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787


State 1599

  334 block_or_simple_block: "=>" "<-" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 334 (block_or_simple_block)


State 1600

  481 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29 .

    $default  reduce using rule 481 (expr)


State 1601

  487 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31 .

    $default  reduce using rule 487 (expr)


State 1602

  492 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 491 ($@33)

    $@33  go to state 1638


State 1603

  541 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1639


State 1604

  543 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1640


State 1605

  793 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1298

    make_struct_fields  go to state 1641


State 1606

  783 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  784                   | make_struct_fields . ',' "name" ":=" expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  795 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1176

    $default  reduce using rule 795 (make_struct_dim_decl)


State 1607

  794 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  796 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1642

    $default  reduce using rule 875 (optional_comma)

    optional_comma  go to state 1643


State 1608

  797 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 797 (optional_make_struct_dim_decl)


State 1609

  823 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1644


State 1610

  826 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1645


State 1611

  326 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr . ')'
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1646


State 1612

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787
    ')'    shift, and go to state 1647


State 1613

  849 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1298
    '('     shift, and go to state 1605

    $default  reduce using rule 798 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1606
    make_struct_dim_list           go to state 1607
    make_struct_dim_decl           go to state 1608
    optional_make_struct_dim_decl  go to state 1648


State 1614

  852 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1298
    '('     shift, and go to state 1605

    $default  reduce using rule 798 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1606
    make_struct_dim_list           go to state 1607
    make_struct_dim_decl           go to state 1608
    optional_make_struct_dim_decl  go to state 1649


State 1615

  855 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1650


State 1616

  859 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')' .

    $default  reduce using rule 859 (make_dim_decl)


State 1617

  872 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 872 (make_table_decl)


State 1618

  863 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1651


State 1619

  841 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1652


State 1620

  829 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')' .

    $default  reduce using rule 829 (make_struct_decl)


State 1621

  874 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1653
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1622

  879 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1654


State 1623

  788 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1655
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1624

  787 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1656
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1625

  880 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1657


State 1626

  882 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1658


State 1627

  876 optional_comma: ',' .

    $default  reduce using rule 876 (optional_comma)


State 1628

  252 optional_expr_list_in_braces: '(' optional_expr_list optional_comma . ')'

    ')'  shift, and go to state 1659


State 1629

  881 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 881 (array_comprehension)


State 1630

  877 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 877 (array_comprehension)


State 1631

  878 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1660


State 1632

  410 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name .

    $default  reduce using rule 410 (func_addr_expr)


State 1633

  292 expression_yield_no_pipe: "yield" "<-" expr .
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 292 (expression_yield_no_pipe)


State 1634

  306 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 432
    "class"                           shift, and go to state 433
    "true"                            shift, and go to state 438
    "false"                           shift, and go to state 439
    "new"                             shift, and go to state 440
    "typeinfo"                        shift, and go to state 441
    "type"                            shift, and go to state 442
    "array"                           shift, and go to state 443
    "null"                            shift, and go to state 445
    "table"                           shift, and go to state 448
    "deref"                           shift, and go to state 450
    "cast"                            shift, and go to state 453
    "upcast"                          shift, and go to state 454
    "addr"                            shift, and go to state 455
    "reinterpret"                     shift, and go to state 458
    "unsafe"                          shift, and go to state 565
    "fixed_array"                     shift, and go to state 462
    "default"                         shift, and go to state 463
    "bool"                            shift, and go to state 317
    "void"                            shift, and go to state 318
    "string"                          shift, and go to state 319
    "int"                             shift, and go to state 321
    "int2"                            shift, and go to state 322
    "int3"                            shift, and go to state 323
    "int4"                            shift, and go to state 324
    "uint"                            shift, and go to state 325
    "bitfield"                        shift, and go to state 464
    "uint2"                           shift, and go to state 327
    "uint3"                           shift, and go to state 328
    "uint4"                           shift, and go to state 329
    "float"                           shift, and go to state 330
    "float2"                          shift, and go to state 331
    "float3"                          shift, and go to state 332
    "float4"                          shift, and go to state 333
    "range"                           shift, and go to state 334
    "urange"                          shift, and go to state 335
    "range64"                         shift, and go to state 336
    "urange64"                        shift, and go to state 337
    "int64"                           shift, and go to state 339
    "uint64"                          shift, and go to state 340
    "double"                          shift, and go to state 341
    "int8"                            shift, and go to state 344
    "uint8"                           shift, and go to state 345
    "int16"                           shift, and go to state 346
    "uint16"                          shift, and go to state 347
    "tuple"                           shift, and go to state 465
    "variant"                         shift, and go to state 466
    "generator"                       shift, and go to state 566
    "++"                              shift, and go to state 469
    "--"                              shift, and go to state 470
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 474
    "$i"                              shift, and go to state 475
    "$v"                              shift, and go to state 476
    "$b"                              shift, and go to state 477
    "$a"                              shift, and go to state 478
    "$c"                              shift, and go to state 479
    "..."                             shift, and go to state 480
    "[["                              shift, and go to state 481
    "[{"                              shift, and go to state 482
    "{{"                              shift, and go to state 483
    "integer constant"                shift, and go to state 484
    "long integer constant"           shift, and go to state 485
    "unsigned integer constant"       shift, and go to state 486
    "unsigned long integer constant"  shift, and go to state 487
    "unsigned int8 constant"          shift, and go to state 488
    "floating point constant"         shift, and go to state 489
    "double constant"                 shift, and go to state 490
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 567
    "type function"                   shift, and go to state 492
    "start of the string"             shift, and go to state 493
    "begin of code block"             shift, and go to state 494
    '-'                               shift, and go to state 497
    '+'                               shift, and go to state 498
    '*'                               shift, and go to state 499
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 500
    '!'                               shift, and go to state 501
    '['                               shift, and go to state 502
    '('                               shift, and go to state 503
    '$'                               shift, and go to state 504
    '@'                               shift, and go to state 505

    string_builder          go to state 506
    expr_reader             go to state 507
    expression_keyword      go to state 568
    name_in_namespace       go to state 523
    expr_new                go to state 525
    expr_cast               go to state 535
    expr_type_decl          go to state 536
    expr_type_info          go to state 537
    block_or_lambda         go to state 538
    expr_full_block         go to state 539
    expr_numeric_const      go to state 540
    expr_named_call         go to state 543
    expr_method_call        go to state 544
    func_addr_expr          go to state 545
    expr_field              go to state 546
    expr_call               go to state 547
    expr                    go to state 1661
    expr_mtag               go to state 549
    basic_type_declaration  go to state 550
    make_decl               go to state 551
    make_struct_decl        go to state 552
    make_tuple_call         go to state 553
    make_dim_decl           go to state 554
    make_table_decl         go to state 555
    array_comprehension     go to state 556


State 1635

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . "end of expression"
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1662
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787


State 1636

  307 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1663
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787


State 1637

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 309 (tuple_expansion_variable_declaration)


State 1638

  492 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 492 (expr)


State 1639

  541 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression" .

    $default  reduce using rule 541 (struct_variable_declaration_list)


State 1640

  543 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1664


State 1641

  783 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  784                   | make_struct_fields . ',' "name" ":=" expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  793 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1176
    ')'  shift, and go to state 1665


State 1642

  794 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  876 optional_comma: ',' .

    '('  shift, and go to state 1666

    $default  reduce using rule 876 (optional_comma)


State 1643

  796 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 796 (make_struct_dim_decl)


State 1644

  823 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 823 (make_struct_decl)


State 1645

  826 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 826 (make_struct_decl)


State 1646

  326 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')' .

    $default  reduce using rule 326 (expr_type_info)


State 1647

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 329 (expr_type_info)


State 1648

  849 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1667


State 1649

  852 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1668


State 1650

  855 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')' .

    $default  reduce using rule 855 (make_dim_decl)


State 1651

  863 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')' .

    $default  reduce using rule 863 (make_dim_decl)


State 1652

  841 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 841 (make_tuple_call)


State 1653

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  874 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 874 (array_comprehension_where)


State 1654

  879 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 879 (array_comprehension)


State 1655

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  788 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 788 (make_struct_fields)


State 1656

  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'
  787 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 735
    "as"   shift, and go to state 736
    "<<"   shift, and go to state 745
    ">>"   shift, and go to state 746
    "++"   shift, and go to state 747
    "--"   shift, and go to state 748
    "<="   shift, and go to state 749
    ">="   shift, and go to state 752
    "=="   shift, and go to state 753
    "!="   shift, and go to state 754
    "->"   shift, and go to state 755
    "??"   shift, and go to state 757
    "?."   shift, and go to state 758
    "?["   shift, and go to state 759
    "<|"   shift, and go to state 760
    "|>"   shift, and go to state 761
    "<<<"  shift, and go to state 763
    ">>>"  shift, and go to state 764
    "&&"   shift, and go to state 767
    "||"   shift, and go to state 768
    "^^"   shift, and go to state 769
    ".."   shift, and go to state 773
    '?'    shift, and go to state 775
    '|'    shift, and go to state 776
    '^'    shift, and go to state 777
    '&'    shift, and go to state 778
    '<'    shift, and go to state 779
    '>'    shift, and go to state 780
    '-'    shift, and go to state 781
    '+'    shift, and go to state 782
    '*'    shift, and go to state 783
    '/'    shift, and go to state 784
    '%'    shift, and go to state 785
    '.'    shift, and go to state 786
    '['    shift, and go to state 787

    $default  reduce using rule 787 (make_struct_fields)


State 1657

  880 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 880 (array_comprehension)


State 1658

  882 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 882 (array_comprehension)


State 1659

  252 optional_expr_list_in_braces: '(' optional_expr_list optional_comma ')' .

    $default  reduce using rule 252 (optional_expr_list_in_braces)


State 1660

  878 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 878 (array_comprehension)


State 1661

  306 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  400 expr_method_call: expr . "->" "name" '(' ')'
  401                 | expr . "->" "name" '(' expr_list ')'
  411 expr_field: expr . '.' "name"
  412           | expr . '.' '.' "name"
  413           | expr . '.' "name" '(' ')'
  414           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' $@26 error $@27
  437 expr: expr . "<<" expr
  438     | expr . ">>" expr
  439     | expr . "<<<" expr
  440     | expr . ">>>" expr
  441     | expr . '+' expr
  442     | expr . '-' expr
  443     | expr . '*' expr
  444     | expr . '/' expr
  445     | expr . '%' expr
  446     | expr . '<' expr
  447     | expr . '>' expr
  448     | expr . "==" expr
  449     | expr . "!=" expr
  450     | expr . "<=" expr
  451     | expr . ">=" expr
  452     | expr . '&' expr
  453     | expr . '|' expr
  454     | expr . '^' expr
  455     | expr . "&&" expr
  456     | expr . "||" expr
  457     | expr . "^^" expr
  458     | expr . ".." expr
  461     | expr . "++"
  462     | expr . "--"
  464     | expr . '[' expr ']'
  465     | expr . '.' '[' expr ']'
  466     | expr . "?[" expr ']'
  467     | expr . '.' "?[" expr ']'
  468     | expr . "?." "name"
  469     | expr . '.' "?." "name"
  477     | expr . "??" expr
  478     | expr . '?' expr ':' expr
  481     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  482     | expr . "is" basic_type_declaration
  483     | expr . "is" "name"
  484     | expr . "as" "name"
  487     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  488     | expr . "as" basic_type_declaration
  489     | expr . '?' "as" "name"
  492     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  493     | expr . '?' "as" basic_type_declaration
  501     | expr . "<|" expr
  502     | expr . "|>" expr
  503     | expr . "|>" basic_type_declaration
  515 expr_mtag: expr . '.' "$f" '(' expr ')'
  516          | expr . "?." "$f" '(' expr ')'
  517          | expr . '.' '.' "$f" '(' expr ')'
  518          | expr . '.' "?." "$f" '(' expr ')'
  519          | expr . "as" "$f" '(' expr ')'
  520          | expr . '?' "as" "$f" '(' expr ')'
  521          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 735
    "as"                 shift, and go to state 736
    "<<"                 shift, and go to state 745
    ">>"                 shift, and go to state 746
    "++"                 shift, and go to state 747
    "--"                 shift, and go to state 748
    "<="                 shift, and go to state 749
    ">="                 shift, and go to state 752
    "=="                 shift, and go to state 753
    "!="                 shift, and go to state 754
    "->"                 shift, and go to state 755
    "??"                 shift, and go to state 757
    "?."                 shift, and go to state 758
    "?["                 shift, and go to state 759
    "<|"                 shift, and go to state 760
    "|>"                 shift, and go to state 761
    "<<<"                shift, and go to state 763
    ">>>"                shift, and go to state 764
    "&&"                 shift, and go to state 767
    "||"                 shift, and go to state 768
    "^^"                 shift, and go to state 769
    ".."                 shift, and go to state 773
    "end of expression"  shift, and go to state 1669
    '?'                  shift, and go to state 775
    '|'                  shift, and go to state 776
    '^'                  shift, and go to state 777
    '&'                  shift, and go to state 778
    '<'                  shift, and go to state 779
    '>'                  shift, and go to state 780
    '-'                  shift, and go to state 781
    '+'                  shift, and go to state 782
    '*'                  shift, and go to state 783
    '/'                  shift, and go to state 784
    '%'                  shift, and go to state 785
    '.'                  shift, and go to state 786
    '['                  shift, and go to state 787


State 1662

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 308 (tuple_expansion_variable_declaration)


State 1663

  307 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 307 (tuple_expansion_variable_declaration)


State 1664

  543 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block .

    $default  reduce using rule 543 (struct_variable_declaration_list)


State 1665

  793 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 793 (make_struct_dim_list)


State 1666

  794 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 918
    "name"  shift, and go to state 1298

    make_struct_fields  go to state 1670


State 1667

  849 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 849 (make_dim_decl)


State 1668

  852 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 852 (make_dim_decl)


State 1669

  306 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 306 (tuple_expansion_variable_declaration)


State 1670

  783 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  784                   | make_struct_fields . ',' "name" ":=" expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  794 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1176
    ')'  shift, and go to state 1671


State 1671

  794 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 794 (make_struct_dim_list)
