Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 317 conflicts: 1 shift/reduce
State 414 conflicts: 1 shift/reduce
State 518 conflicts: 2 shift/reduce
State 520 conflicts: 2 shift/reduce
State 626 conflicts: 1 shift/reduce
State 846 conflicts: 1 shift/reduce
State 933 conflicts: 2 shift/reduce
State 1045 conflicts: 1 shift/reduce
State 1156 conflicts: 1 shift/reduce
State 1427 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty

   65 $@2: %empty

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner

   67 expression_if_one_liner: expr
   68                        | expression_return_no_pipe
   69                        | expression_yield_no_pipe
   70                        | expression_break
   71                        | expression_continue

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else

   73 $@3: %empty

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression"

   75 $@4: %empty

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   77 expression_unsafe: "unsafe" expression_block

   78 expression_while_loop: "while" expr expression_block

   79 expression_with: "with" expr expression_block

   80 $@5: %empty

   81 expression_with_alias: "assume" "name" '=' $@5 expr

   82 annotation_argument_value: string_constant
   83                          | "name"
   84                          | "integer constant"
   85                          | "floating point constant"
   86                          | "true"
   87                          | "false"

   88 annotation_argument_value_list: annotation_argument_value
   89                               | annotation_argument_value_list ',' annotation_argument_value

   90 annotation_argument_name: "name"
   91                         | "type"
   92                         | "in"

   93 annotation_argument: annotation_argument_name '=' string_constant
   94                    | annotation_argument_name '=' "name"
   95                    | annotation_argument_name '=' "integer constant"
   96                    | annotation_argument_name '=' "floating point constant"
   97                    | annotation_argument_name '=' "true"
   98                    | annotation_argument_name '=' "false"
   99                    | annotation_argument_name
  100                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  101 annotation_argument_list: annotation_argument
  102                         | annotation_argument_list ',' annotation_argument

  103 metadata_argument_list: '@' annotation_argument
  104                       | metadata_argument_list '@' annotation_argument

  105 annotation_declaration_name: name_in_namespace
  106                            | "require"
  107                            | "private"

  108 annotation_declaration_basic: annotation_declaration_name
  109                             | annotation_declaration_name '(' annotation_argument_list ')'

  110 annotation_declaration: annotation_declaration_basic
  111                       | '!' annotation_declaration
  112                       | annotation_declaration "&&" annotation_declaration
  113                       | annotation_declaration "||" annotation_declaration
  114                       | annotation_declaration "^^" annotation_declaration
  115                       | '(' annotation_declaration ')'
  116                       | "|>" annotation_declaration

  117 annotation_list: annotation_declaration
  118                | annotation_list ',' annotation_declaration

  119 optional_annotation_list: %empty
  120                         | '[' annotation_list ']'

  121 optional_function_argument_list: %empty
  122                                | '(' ')'
  123                                | '(' function_argument_list ')'

  124 optional_function_type: %empty
  125                       | ':' type_declaration

  126 function_name: "name"
  127              | "operator" '!'
  128              | "operator" '~'
  129              | "operator" "+="
  130              | "operator" "-="
  131              | "operator" "*="
  132              | "operator" "/="
  133              | "operator" "%="
  134              | "operator" "&="
  135              | "operator" "|="
  136              | "operator" "^="
  137              | "operator" "&&="
  138              | "operator" "||="
  139              | "operator" "^^="
  140              | "operator" "&&"
  141              | "operator" "||"
  142              | "operator" "^^"
  143              | "operator" '+'
  144              | "operator" '-'
  145              | "operator" '*'
  146              | "operator" '/'
  147              | "operator" '%'
  148              | "operator" '<'
  149              | "operator" '>'
  150              | "operator" ".."
  151              | "operator" "=="
  152              | "operator" "!="
  153              | "operator" "<="
  154              | "operator" ">="
  155              | "operator" '&'
  156              | "operator" '|'
  157              | "operator" '^'
  158              | "++" "operator"
  159              | "--" "operator"
  160              | "operator" "++"
  161              | "operator" "--"
  162              | "operator" "<<"
  163              | "operator" ">>"
  164              | "operator" "<<="
  165              | "operator" ">>="
  166              | "operator" "<<<"
  167              | "operator" ">>>"
  168              | "operator" "<<<="
  169              | "operator" ">>>="
  170              | "operator" '[' ']'
  171              | "operator" "?[" ']'
  172              | "operator" '.'
  173              | "operator" "?."
  174              | "operator" '.' "name"
  175              | "operator" '.' "name" ":="
  176              | "operator" "?." "name"
  177              | "operator" ":="
  178              | "operator" "delete"
  179              | "operator" "??"
  180              | "operator" "is"
  181              | "operator" "as"
  182              | "operator" "is" "name"
  183              | "operator" "as" "name"
  184              | "operator" '?' "as"
  185              | "operator" '?' "as" "name"
  186              | "bool"
  187              | "string"
  188              | "int"
  189              | "int2"
  190              | "int3"
  191              | "int4"
  192              | "uint"
  193              | "uint2"
  194              | "uint3"
  195              | "uint4"
  196              | "float"
  197              | "float2"
  198              | "float3"
  199              | "float4"
  200              | "range"
  201              | "urange"
  202              | "range64"
  203              | "urange64"
  204              | "int64"
  205              | "uint64"
  206              | "double"
  207              | "int8"
  208              | "uint8"
  209              | "int16"
  210              | "uint16"

  211 global_function_declaration: optional_annotation_list "def" function_declaration

  212 optional_public_or_private_function: %empty
  213                                    | "private"
  214                                    | "public"

  215 function_declaration_header: function_name optional_function_argument_list optional_function_type

  216 $@6: %empty

  217 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  218 expression_block: "begin of code block" expressions "end of code block"
  219                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  220 expr_call_pipe: expr expr_full_block_assumed_piped
  221               | expression_keyword expr_full_block_assumed_piped

  222 expression_any: "end of expression"
  223               | expr_pipe
  224               | expr_keyword
  225               | expr_assign_pipe
  226               | expr_assign "end of expression"
  227               | expression_delete "end of expression"
  228               | expression_let
  229               | expression_while_loop
  230               | expression_unsafe
  231               | expression_with
  232               | expression_with_alias
  233               | expression_for_loop
  234               | expression_break "end of expression"
  235               | expression_continue "end of expression"
  236               | expression_return
  237               | expression_yield
  238               | expression_if_then_else
  239               | expression_try_catch
  240               | expression_label "end of expression"
  241               | expression_goto "end of expression"
  242               | "pass" "end of expression"

  243 expressions: %empty
  244            | expressions expression_any
  245            | expressions error

  246 expr_keyword: "keyword" expr expression_block

  247 optional_expr_list: %empty
  248                   | expr_list

  249 optional_expr_list_in_braces: %empty
  250                             | '(' optional_expr_list ')'

  251 type_declaration_no_options_list: type_declaration
  252                                 | type_declaration_no_options_list "end of expression" type_declaration

  253 $@7: %empty

  254 $@8: %empty

  255 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr

  256 $@9: %empty

  257 $@10: %empty

  258 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

  259 expr_pipe: expr_assign " <|" expr_block
  260          | "@ <|" expr_block
  261          | "@@ <|" expr_block
  262          | "$ <|" expr_block
  263          | expr_call_pipe

  264 name_in_namespace: "name"
  265                  | "name" "::" "name"

  266 expression_delete: "delete" expr
  267                  | "delete" "explicit" expr

  268 $@11: %empty

  269 $@12: %empty

  270 new_type_declaration: '<' $@11 type_declaration '>' $@12
  271                     | structure_type_declaration

  272 expr_new: "new" new_type_declaration
  273         | "new" new_type_declaration '(' use_initializer ')'
  274         | "new" new_type_declaration '(' expr_list ')'
  275         | "new" new_type_declaration '(' use_initializer make_struct_single ')'
  276         | "new" make_decl

  277 expression_break: "break"

  278 expression_continue: "continue"

  279 expression_return_no_pipe: "return"
  280                          | "return" expr_list
  281                          | "return" "<-" expr_list

  282 expression_return: expression_return_no_pipe "end of expression"
  283                  | "return" expr_pipe
  284                  | "return" "<-" expr_pipe

  285 expression_yield_no_pipe: "yield" expr
  286                         | "yield" "<-" expr

  287 expression_yield: expression_yield_no_pipe "end of expression"
  288                 | "yield" expr_pipe
  289                 | "yield" "<-" expr_pipe

  290 expression_try_catch: "try" expression_block "recover" expression_block

  291 kwd_let_var_or_nothing: "let"
  292                       | "var"
  293                       | %empty

  294 kwd_let: "let"
  295        | "var"

  296 optional_in_scope: "inscope"
  297                  | %empty

  298 tuple_expansion: "name"
  299                | tuple_expansion ',' "name"

  300 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  301                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  302                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  303                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  304 expression_let: kwd_let optional_in_scope let_variable_declaration
  305               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  306 $@13: %empty

  307 $@14: %empty

  308 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  309 $@15: %empty

  310 $@16: %empty

  311 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  312 $@17: %empty

  313 $@18: %empty

  314 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  315 $@19: %empty

  316 $@20: %empty

  317 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  318 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  319               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  320               | "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

  321 expr_list: expr
  322          | expr_list ',' expr

  323 block_or_simple_block: expression_block
  324                      | "=>" expr
  325                      | "=>" "<-" expr

  326 block_or_lambda: '$'
  327                | '@'
  328                | '@' '@'

  329 capture_entry: '&' "name"
  330              | '=' "name"
  331              | "<-" "name"
  332              | ":=" "name"

  333 capture_list: capture_entry
  334             | capture_list ',' capture_entry

  335 optional_capture_list: %empty
  336                      | "[[" capture_list ']' ']'

  337 expr_block: expression_block
  338           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  339 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  340 $@21: %empty

  341 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  342 expr_numeric_const: "integer constant"
  343                   | "unsigned integer constant"
  344                   | "long integer constant"
  345                   | "unsigned long integer constant"
  346                   | "unsigned int8 constant"
  347                   | "floating point constant"
  348                   | "double constant"

  349 expr_assign: expr
  350            | expr '=' expr
  351            | expr "<-" expr
  352            | expr ":=" expr
  353            | expr "&=" expr
  354            | expr "|=" expr
  355            | expr "^=" expr
  356            | expr "&&=" expr
  357            | expr "||=" expr
  358            | expr "^^=" expr
  359            | expr "+=" expr
  360            | expr "-=" expr
  361            | expr "*=" expr
  362            | expr "/=" expr
  363            | expr "%=" expr
  364            | expr "<<=" expr
  365            | expr ">>=" expr
  366            | expr "<<<=" expr
  367            | expr ">>>=" expr

  368 expr_assign_pipe_right: "@ <|" expr_block
  369                       | "@@ <|" expr_block
  370                       | "$ <|" expr_block
  371                       | expr_call_pipe

  372 expr_assign_pipe: expr '=' expr_assign_pipe_right
  373                 | expr "<-" expr_assign_pipe_right
  374                 | expr "&=" expr_assign_pipe_right
  375                 | expr "|=" expr_assign_pipe_right
  376                 | expr "^=" expr_assign_pipe_right
  377                 | expr "&&=" expr_assign_pipe_right
  378                 | expr "||=" expr_assign_pipe_right
  379                 | expr "^^=" expr_assign_pipe_right
  380                 | expr "+=" expr_assign_pipe_right
  381                 | expr "-=" expr_assign_pipe_right
  382                 | expr "*=" expr_assign_pipe_right
  383                 | expr "/=" expr_assign_pipe_right
  384                 | expr "%=" expr_assign_pipe_right
  385                 | expr "<<=" expr_assign_pipe_right
  386                 | expr ">>=" expr_assign_pipe_right
  387                 | expr "<<<=" expr_assign_pipe_right
  388                 | expr ">>>=" expr_assign_pipe_right

  389 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  390                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  391 expr_method_call: expr "->" "name" '(' ')'
  392                 | expr "->" "name" '(' expr_list ')'

  393 func_addr_name: name_in_namespace
  394               | "$i" '(' expr ')'

  395 func_addr_expr: '@' '@' func_addr_name

  396 $@22: %empty

  397 $@23: %empty

  398 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name

  399 $@24: %empty

  400 $@25: %empty

  401 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

  402 expr_field: expr '.' "name"
  403           | expr '.' '.' "name"
  404           | expr '.' "name" '(' ')'
  405           | expr '.' "name" '(' expr_list ')'

  406 $@26: %empty

  407 $@27: %empty

  408 expr_field: expr '.' $@26 error $@27

  409 expr_call: name_in_namespace '(' ')'
  410          | name_in_namespace '(' make_struct_single ')'
  411          | name_in_namespace '(' expr_list ')'
  412          | basic_type_declaration '(' ')'
  413          | basic_type_declaration '(' expr_list ')'

  414 expr: "null"
  415     | name_in_namespace
  416     | expr_numeric_const
  417     | expr_reader
  418     | string_builder
  419     | make_decl
  420     | "true"
  421     | "false"
  422     | expr_field
  423     | expr_mtag
  424     | '!' expr
  425     | '~' expr
  426     | '+' expr
  427     | '-' expr
  428     | expr "<<" expr
  429     | expr ">>" expr
  430     | expr "<<<" expr
  431     | expr ">>>" expr
  432     | expr '+' expr
  433     | expr '-' expr
  434     | expr '*' expr
  435     | expr '/' expr
  436     | expr '%' expr
  437     | expr '<' expr
  438     | expr '>' expr
  439     | expr "==" expr
  440     | expr "!=" expr
  441     | expr "<=" expr
  442     | expr ">=" expr
  443     | expr '&' expr
  444     | expr '|' expr
  445     | expr '^' expr
  446     | expr "&&" expr
  447     | expr "||" expr
  448     | expr "^^" expr
  449     | expr ".." expr
  450     | "++" expr
  451     | "--" expr
  452     | expr "++"
  453     | expr "--"
  454     | '(' expr_list optional_comma ')'
  455     | expr '[' expr ']'
  456     | expr '.' '[' expr ']'
  457     | expr "?[" expr ']'
  458     | expr '.' "?[" expr ']'
  459     | expr "?." "name"
  460     | expr '.' "?." "name"
  461     | func_addr_expr
  462     | expr_call
  463     | '*' expr
  464     | "deref" '(' expr ')'
  465     | "addr" '(' expr ')'
  466     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  467     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  468     | expr "??" expr
  469     | expr '?' expr ':' expr

  470 $@28: %empty

  471 $@29: %empty

  472 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr "is" basic_type_declaration
  474     | expr "is" "name"
  475     | expr "as" "name"

  476 $@30: %empty

  477 $@31: %empty

  478 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr "as" basic_type_declaration
  480     | expr '?' "as" "name"

  481 $@32: %empty

  482 $@33: %empty

  483 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr '?' "as" basic_type_declaration
  485     | expr_type_info
  486     | expr_type_decl
  487     | expr_cast
  488     | expr_new
  489     | expr_method_call
  490     | expr_named_call
  491     | expr_full_block
  492     | expr "<|" expr
  493     | expr "|>" expr
  494     | expr "|>" basic_type_declaration
  495     | name_in_namespace "name"
  496     | "unsafe" '(' expr ')'
  497     | expression_keyword

  498 expr_mtag: "$$" '(' expr ')'
  499          | "$i" '(' expr ')'
  500          | "$v" '(' expr ')'
  501          | "$b" '(' expr ')'
  502          | "$a" '(' expr ')'
  503          | "..."
  504          | "$c" '(' expr ')' '(' ')'
  505          | "$c" '(' expr ')' '(' expr_list ')'
  506          | expr '.' "$f" '(' expr ')'
  507          | expr "?." "$f" '(' expr ')'
  508          | expr '.' '.' "$f" '(' expr ')'
  509          | expr '.' "?." "$f" '(' expr ')'
  510          | expr "as" "$f" '(' expr ')'
  511          | expr '?' "as" "$f" '(' expr ')'
  512          | expr "is" "$f" '(' expr ')'
  513          | '@' '@' "$c" '(' expr ')'

  514 optional_field_annotation: %empty
  515                          | "[[" annotation_argument_list ']' ']'
  516                          | metadata_argument_list

  517 optional_override: %empty
  518                  | "override"
  519                  | "sealed"

  520 optional_constant: %empty
  521                  | "const"

  522 optional_public_or_private_member_variable: %empty
  523                                           | "public"
  524                                           | "private"

  525 optional_static_member_variable: %empty
  526                                | "static"

  527 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  528 struct_variable_declaration_list: %empty

  529 $@34: %empty

  530 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression"

  531 $@35: %empty

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"

  533 $@36: %empty

  534 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  535                                 | struct_variable_declaration_list '[' annotation_list ']' "end of expression"

  536 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  537                              | "$a" '(' expr ')'

  538 function_argument_list: function_argument_declaration
  539                       | function_argument_list "end of expression" function_argument_declaration

  540 tuple_type: type_declaration
  541           | "name" ':' type_declaration

  542 tuple_type_list: tuple_type
  543                | tuple_type_list "end of expression" tuple_type

  544 tuple_alias_type_list: %empty
  545                      | tuple_alias_type_list "end of expression"
  546                      | tuple_alias_type_list tuple_type "end of expression"

  547 variant_type: "name" ':' type_declaration

  548 variant_type_list: variant_type
  549                  | variant_type_list "end of expression" variant_type

  550 variant_alias_type_list: %empty
  551                        | variant_alias_type_list "end of expression"
  552                        | variant_alias_type_list variant_type "end of expression"

  553 copy_or_move: '='
  554             | "<-"

  555 variable_declaration: variable_name_with_pos_list
  556                     | variable_name_with_pos_list '&'
  557                     | variable_name_with_pos_list ':' type_declaration
  558                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  559                     | variable_name_with_pos_list copy_or_move expr
  560                     | variable_name_with_pos_list copy_or_move expr_pipe

  561 copy_or_move_or_clone: '='
  562                      | "<-"
  563                      | ":="

  564 optional_ref: %empty
  565             | '&'

  566 let_variable_name_with_pos_list: "name"
  567                                | "$i" '(' expr ')'
  568                                | "name" "aka" "name"
  569                                | let_variable_name_with_pos_list ',' "name"
  570                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  571 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  572                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  573                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  574                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  575                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  576 global_variable_declaration_list: %empty

  577 $@37: %empty

  578 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration

  579 optional_shared: %empty
  580                | "shared"

  581 optional_public_or_private_variable: %empty
  582                                    | "private"
  583                                    | "public"

  584 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  585 $@38: %empty

  586 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

  587 enum_list: %empty
  588          | enum_list "end of expression"
  589          | enum_list "name" "end of expression"
  590          | enum_list "name" '=' expr "end of expression"

  591 optional_public_or_private_alias: %empty
  592                                 | "private"
  593                                 | "public"

  594 $@39: %empty

  595 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration

  596 alias_list: single_alias "end of expression"
  597           | alias_list single_alias "end of expression"

  598 alias_declaration: "typedef" "begin of code block" alias_list "end of code block"

  599 $@40: %empty

  600 alias_declaration: "typedef" $@40 single_alias "end of expression"

  601 optional_public_or_private_enum: %empty
  602                                | "private"
  603                                | "public"

  604 enum_name: "name"

  605 $@41: %empty

  606 $@42: %empty

  607 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"

  608 $@43: %empty

  609 $@44: %empty

  610 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

  611 optional_structure_parent: %empty
  612                          | ':' name_in_namespace

  613 optional_sealed: %empty
  614                | "sealed"

  615 structure_name: optional_sealed "name" optional_structure_parent

  616 class_or_struct: "class"
  617                | "struct"

  618 optional_public_or_private_structure: %empty
  619                                     | "private"
  620                                     | "public"

  621 optional_struct_variable_declaration_list: %empty
  622                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  623 $@45: %empty

  624 $@46: %empty

  625 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

  626 variable_name_with_pos_list: "name"
  627                            | "$i" '(' expr ')'
  628                            | "name" "aka" "name"
  629                            | variable_name_with_pos_list ',' "name"
  630                            | variable_name_with_pos_list ',' "name" "aka" "name"

  631 basic_type_declaration: "bool"
  632                       | "string"
  633                       | "int"
  634                       | "int8"
  635                       | "int16"
  636                       | "int64"
  637                       | "int2"
  638                       | "int3"
  639                       | "int4"
  640                       | "uint"
  641                       | "uint8"
  642                       | "uint16"
  643                       | "uint64"
  644                       | "uint2"
  645                       | "uint3"
  646                       | "uint4"
  647                       | "float"
  648                       | "float2"
  649                       | "float3"
  650                       | "float4"
  651                       | "void"
  652                       | "range"
  653                       | "urange"
  654                       | "range64"
  655                       | "urange64"
  656                       | "double"
  657                       | "bitfield"

  658 enum_basic_type_declaration: "int"
  659                            | "int8"
  660                            | "int16"
  661                            | "uint"
  662                            | "uint8"
  663                            | "uint16"
  664                            | "int64"
  665                            | "uint64"

  666 structure_type_declaration: name_in_namespace

  667 auto_type_declaration: "auto"
  668                      | "auto" '(' "name" ')'
  669                      | "$t" '(' expr ')'

  670 bitfield_bits: "name"
  671              | bitfield_bits "end of expression" "name"

  672 bitfield_alias_bits: %empty
  673                    | bitfield_alias_bits "end of expression"
  674                    | bitfield_alias_bits "name" "end of expression"

  675 $@47: %empty

  676 $@48: %empty

  677 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48

  678 table_type_pair: type_declaration
  679                | type_declaration "end of expression" type_declaration

  680 dim_list: '[' expr ']'
  681         | dim_list '[' expr ']'

  682 type_declaration_no_options: basic_type_declaration
  683                            | auto_type_declaration
  684                            | bitfield_type_declaration
  685                            | structure_type_declaration
  686                            | type_declaration_no_options dim_list
  687                            | type_declaration_no_options '[' ']'

  688 $@49: %empty

  689 $@50: %empty

  690 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50
  691                            | "typedecl" '(' expr ')'
  692                            | '$' name_in_namespace '(' optional_expr_list ')'

  693 $@51: %empty

  694 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  695                            | type_declaration_no_options '-' '[' ']'
  696                            | type_declaration_no_options "explicit"
  697                            | type_declaration_no_options "const"
  698                            | type_declaration_no_options '-' "const"
  699                            | type_declaration_no_options '&'
  700                            | type_declaration_no_options '-' '&'
  701                            | type_declaration_no_options '#'
  702                            | type_declaration_no_options "implicit"
  703                            | type_declaration_no_options '-' '#'
  704                            | type_declaration_no_options "==" "const"
  705                            | type_declaration_no_options "==" '&'
  706                            | type_declaration_no_options '?'

  707 $@52: %empty

  708 $@53: %empty

  709 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53
  710                            | type_declaration_no_options "??"

  711 $@54: %empty

  712 $@55: %empty

  713 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55

  714 $@56: %empty

  715 $@57: %empty

  716 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57

  717 $@58: %empty

  718 $@59: %empty

  719 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59
  720                            | "block"

  721 $@60: %empty

  722 $@61: %empty

  723 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61

  724 $@62: %empty

  725 $@63: %empty

  726 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63
  727                            | "function"

  728 $@64: %empty

  729 $@65: %empty

  730 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65

  731 $@66: %empty

  732 $@67: %empty

  733 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67
  734                            | "lambda"

  735 $@68: %empty

  736 $@69: %empty

  737 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69

  738 $@70: %empty

  739 $@71: %empty

  740 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71

  741 $@72: %empty

  742 $@73: %empty

  743 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73

  744 $@74: %empty

  745 $@75: %empty

  746 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75

  747 type_declaration: type_declaration_no_options
  748                 | type_declaration '|' type_declaration_no_options
  749                 | type_declaration '|' '#'

  750 $@76: %empty

  751 $@77: %empty

  752 $@78: %empty

  753 $@79: %empty

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

  755 $@80: %empty

  756 $@81: %empty

  757 $@82: %empty

  758 $@83: %empty

  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

  760 $@84: %empty

  761 $@85: %empty

  762 $@86: %empty

  763 $@87: %empty

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

  765 make_decl: make_struct_decl
  766          | make_dim_decl
  767          | make_table_decl
  768          | array_comprehension
  769          | make_tuple_call

  770 make_struct_fields: "name" copy_or_move expr
  771                   | "name" ":=" expr
  772                   | make_struct_fields ',' "name" copy_or_move expr
  773                   | make_struct_fields ',' "name" ":=" expr
  774                   | "$f" '(' expr ')' copy_or_move expr
  775                   | "$f" '(' expr ')' ":=" expr
  776                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  778 make_struct_single: make_struct_fields

  779 make_struct_dim: make_struct_fields
  780                | make_struct_dim "end of expression" make_struct_fields

  781 optional_block: %empty
  782               | "where" expr_block

  783 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  784                                    | ";}}"

  785 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  786                                    | ";}]"

  787 optional_trailing_semicolon_sqr_sqr: ']' ']'
  788                                    | ";]]"

  789 optional_trailing_delim_sqr_sqr: ']' ']'
  790                                | ";]]"
  791                                | ",]]"

  792 optional_trailing_delim_cur_sqr: "end of code block" ']'
  793                                | ";}]"
  794                                | ",}]"

  795 use_initializer: %empty
  796                | "uninitialized"

  797 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  798                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  799                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  800                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  801                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  802                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  803 $@88: %empty

  804 $@89: %empty

  805 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim ')'

  806 $@90: %empty

  807 $@91: %empty

  808 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim ')'

  809 $@92: %empty

  810 $@93: %empty

  811 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

  812 $@94: %empty

  813 $@95: %empty

  814 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer

  815 make_tuple: expr
  816           | expr "=>" expr
  817           | make_tuple ',' expr

  818 make_map_tuple: expr "=>" expr
  819               | expr

  820 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  821 $@96: %empty

  822 $@97: %empty

  823 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim ')'

  824 make_dim: make_tuple
  825         | make_dim "end of expression" make_tuple

  826 make_dim_decl: '[' expr_list optional_comma ']'
  827              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  828              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  829 $@98: %empty

  830 $@99: %empty

  831 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim ')'

  832 $@100: %empty

  833 $@101: %empty

  834 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim ')'

  835 $@102: %empty

  836 $@103: %empty

  837 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_struct_dim ')'
  838              | "array" '(' expr_list optional_comma ')'

  839 $@104: %empty

  840 $@105: %empty

  841 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')'
  842              | "fixed_array" '(' expr_list optional_comma ')'

  843 $@106: %empty

  844 $@107: %empty

  845 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

  846 make_table: make_map_tuple
  847           | make_table "end of expression" make_map_tuple

  848 expr_map_tuple_list: make_map_tuple
  849                    | expr_map_tuple_list ',' make_map_tuple

  850 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  851                | "{{" make_table optional_trailing_semicolon_cur_cur
  852                | "table" '(' expr_map_tuple_list optional_comma ')'
  853                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  854                | "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  855 array_comprehension_where: %empty
  856                          | "end of expression" "where" expr

  857 optional_comma: %empty
  858               | ','

  859 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  860                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  861                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  862                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  863                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  864                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 111 127 424
    '#' (35) 701 703 749
    '$' (36) 20 326 692 694
    '%' (37) 35 42 147 436
    '&' (38) 155 329 443 556 565 699 700 705
    '(' (40) 100 109 115 122 123 250 273 274 275 301 303 318 319 320 389 390 391 392 394 404 405 409 410 411 412 413 454 464 465 466 467 496 498 499 500 501 502 504 505 506 507 508 509 510 511 512 513 537 567 627 668 669 691 692 694 774 775 776 777 799 800 802 805 808 811 820 823 831 834 837 838 841 842 845 852 853 854
    ')' (41) 100 109 115 122 123 250 273 274 275 301 303 318 319 320 389 390 391 392 394 404 405 409 410 411 412 413 454 464 465 466 467 496 498 499 500 501 502 504 505 506 507 508 509 510 511 512 513 537 567 627 668 669 691 692 694 774 775 776 777 799 800 802 805 808 811 820 823 831 834 837 838 841 842 845 852 853 854
    '*' (42) 145 434 463
    '+' (43) 143 426 432
    ',' (44) 51 89 102 118 299 322 334 390 569 570 629 630 772 773 776 777 817 849 858
    '-' (45) 144 427 433 695 698 700 703
    '.' (46) 43 172 174 175 402 403 404 405 408 456 458 460 506 508 509
    '/' (47) 44 146 435
    ':' (58) 53 54 125 300 301 469 541 547 557 558 571 572 573 610 612
    "end of expression" (59) 15 16 74 222 226 227 234 235 240 241 242 252 282 287 300 301 302 303 320 530 532 535 539 543 545 546 549 551 552 571 572 574 588 589 590 596 597 600 671 673 674 679 780 825 847 854 856 859 860 861 862 863 864
    '<' (60) 148 255 258 270 308 311 314 317 319 320 398 401 437 466 467 472 478 483 677 690 694 709 713 716 719 723 726 730 733 737 740 743 746 805 808 811 814 823 831 834 837 841 845 853 854
    '=' (61) 81 93 94 95 96 97 98 100 330 350 372 553 561 590 595
    '>' (62) 149 255 258 270 308 311 314 317 319 320 398 401 438 466 467 472 478 483 677 690 694 709 713 716 719 723 726 730 733 737 740 743 746 805 808 811 814 823 831 834 837 841 845 853 854
    '?' (63) 184 185 469 480 483 484 511 706
    '@' (64) 103 104 327 328 395 398 401 513
    '[' (91) 120 170 389 390 455 456 535 680 681 687 695 826 859 860
    ']' (93) 120 170 171 300 302 336 389 390 455 456 457 458 515 535 680 681 687 695 785 787 789 792 826 859 860 861 862
    '^' (94) 157 445
    "begin of code block" (123) 218 219 584 598 607 610 622 754 759 764 850 863
    '|' (124) 156 444 748 749
    "end of code block" (125) 218 219 584 598 607 610 622 754 759 764 783 785 792 850 862 863 864
    '~' (126) 128 425
    error (256) 245 408
    "lexer error" (258)
    "struct" (259) 617 805 831
    "class" (260) 616 808
    "let" (261) 291 294
    "def" (262) 211 532 534
    "while" (263) 78
    "if" (264) 62 74
    "static_if" (265) 63
    "else" (266) 60 66
    "for" (267) 76 859 860 861 862 863 864
    "recover" (268) 290
    "true" (269) 86 97 420
    "false" (270) 87 98 421
    "new" (271) 272 273 274 275 276
    "typeinfo" (272) 318 319 320
    "type" (273) 91 317 472 478 483 690
    "in" (274) 76 92 859 860 861 862 863 864
    "is" (275) 180 182 472 473 474 512
    "as" (276) 46 181 183 184 185 475 478 479 480 483 484 510 511
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 713 831 834 837 838 841
    "return" (280) 279 280 281 283 284
    "null" (281) 414
    "break" (282) 277
    "try" (283) 290
    "options" (284) 36
    "table" (285) 716 852 853 854
    "expect" (286) 49
    "const" (287) 521 697 698 704
    "require" (288) 37 106
    "operator" (289) 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185
    "enum" (290) 607 610
    "finally" (291) 219
    "delete" (292) 178 266 267
    "deref" (293) 464
    "typedef" (294) 598 600
    "typedecl" (295) 691
    "with" (296) 79
    "aka" (297) 568 570 628 630
    "assume" (298) 81
    "cast" (299) 308
    "override" (300) 518
    "abstract" (301) 532
    "upcast" (302) 311
    "iterator" (303) 719 860
    "var" (304) 292 295
    "addr" (305) 465
    "continue" (306) 278
    "where" (307) 782 856
    "pass" (308) 242
    "reinterpret" (309) 314
    "module" (310) 22
    "public" (311) 18 48 214 523 583 593 603 620
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 702
    "explicit" (315) 267 696
    "shared" (316) 580
    "private" (317) 19 107 213 524 582 592 602 619
    "smart_ptr" (318) 709
    "unsafe" (319) 77 496
    "inscope" (320) 296
    "static" (321) 526
    "fixed_array" (322) 842 845
    "default" (323) 814
    "uninitialized" (324) 796
    "bool" (325) 186 631
    "void" (326) 651
    "string" (327) 187 632
    "auto" (328) 667 668
    "int" (329) 188 633 658
    "int2" (330) 189 637
    "int3" (331) 190 638
    "int4" (332) 191 639
    "uint" (333) 192 640 661
    "bitfield" (334) 657 677 764
    "uint2" (335) 193 644
    "uint3" (336) 194 645
    "uint4" (337) 195 646
    "float" (338) 196 647
    "float2" (339) 197 648
    "float3" (340) 198 649
    "float4" (341) 199 650
    "range" (342) 200 652
    "urange" (343) 201 653
    "range64" (344) 202 654
    "urange64" (345) 203 655
    "block" (346) 720 723 726
    "int64" (347) 204 636 664
    "uint64" (348) 205 643 665
    "double" (349) 206 656
    "function" (350) 727 730 733
    "lambda" (351) 734 737 740
    "int8" (352) 207 634 659
    "uint8" (353) 208 641 662
    "int16" (354) 209 635 660
    "uint16" (355) 210 642 663
    "tuple" (356) 743 754 820 823 834
    "variant" (357) 746 759 811 837
    "generator" (358) 466 467
    "yield" (359) 285 286 288 289
    "sealed" (360) 519 614
    "+=" (361) 129 359 380
    "-=" (362) 130 360 381
    "/=" (363) 132 362 383
    "*=" (364) 131 361 382
    "%=" (365) 133 363 384
    "&=" (366) 134 353 374
    "|=" (367) 135 354 375
    "^=" (368) 136 355 376
    "<<" (369) 162 428
    ">>" (370) 163 429
    "++" (371) 158 160 450 452
    "--" (372) 159 161 451 453
    "<=" (373) 153 441
    "<<=" (374) 164 364 385
    ">>=" (375) 165 365 386
    ">=" (376) 154 442
    "==" (377) 151 439 704 705
    "!=" (378) 152 440
    "->" (379) 391 392
    "<-" (380) 281 284 286 289 325 331 351 373 554 562
    "??" (381) 179 468 710
    "?." (382) 173 176 459 460 507 509
    "?[" (383) 171 457 458
    "<|" (384) 492
    " <|" (385) 259
    "$ <|" (386) 262 370
    "@ <|" (387) 260 368
    "@@ <|" (388) 261 369
    "|>" (389) 116 493 494
    ":=" (390) 175 177 332 352 563 771 773 775 777
    "<<<" (391) 166 430
    ">>>" (392) 167 431
    "<<<=" (393) 168 366 387
    ">>>=" (394) 169 367 388
    "=>" (395) 324 325 816 818
    "::" (396) 265
    "&&" (397) 112 140 446
    "||" (398) 113 141 447
    "^^" (399) 114 142 448
    "&&=" (400) 137 356 377
    "||=" (401) 138 357 378
    "^^=" (402) 139 358 379
    ".." (403) 150 449
    "$$" (404) 498
    "$i" (405) 394 499 567 627
    "$v" (406) 500
    "$b" (407) 501
    "$a" (408) 502 537
    "$t" (409) 669
    "$c" (410) 504 505 513
    "$f" (411) 506 507 508 509 510 511 512 774 775 776 777
    "..." (412) 503
    "[[" (413) 300 302 336 515 797 798 799 800 827 861
    "[{" (414) 801 802 828 862
    "{{" (415) 851 864
    "integer constant" <i> (416) 52 53 54 55 84 95 342
    "long integer constant" <i64> (417) 344
    "unsigned integer constant" <ui> (418) 343
    "unsigned long integer constant" <ui64> (419) 345
    "unsigned int8 constant" <ui> (420) 346
    "floating point constant" <fd> (421) 85 96 347
    "double constant" <d> (422) 348
    "name" <s> (423) 21 38 46 81 83 90 94 126 174 175 176 182 183 185 264 265 298 299 319 320 329 330 331 332 391 392 402 403 404 405 459 460 474 475 480 495 541 547 566 568 569 570 589 590 595 604 615 626 628 629 630 668 670 671 674 754 759 764 770 771 772 773
    "keyword" <s> (424) 39 246 255
    "type function" <s> (425) 40 258
    "start of the string" (426) 27 31
    STRING_CHARACTER <ch> (427) 23 25 32 33
    STRING_CHARACTER_ESC (428) 24 26
    "end of the string" (429) 27 31
    "{" (430) 30
    "}" (431) 30
    "end of failed eader macro" (432)
    ";}}" (433) 784
    ";}]" (434) 786 793
    ";]]" (435) 788 790
    ",]]" (436) 791
    ",}]" (437) 794
    UNARY_MINUS (438)
    UNARY_PLUS (439)
    PRE_INC (440)
    PRE_DEC (441)
    POST_INC (442)
    POST_DEC (443)
    DEREF (444)


Nonterminals, with rules where they appear

    $accept (217)
        on left: 0
    program (218)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (219)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (220)
        on left: 17 18 19
        on right: 22
    module_name <s> (221)
        on left: 20 21
        on right: 22
    module_declaration (222)
        on left: 22
        on right: 2
    character_sequence <s> (223)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (224)
        on left: 27
        on right: 82 93
    string_builder_body <pExpression> (225)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (226)
        on left: 31
        on right: 418
    reader_character_sequence (227)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (228)
        on left: 35
        on right: 16 417
    $@1 (229)
        on left: 34
        on right: 35
    options_declaration (230)
        on left: 36
        on right: 9
    require_declaration (231)
        on left: 37
        on right: 8
    keyword_or_name <s> (232)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (233)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (234)
        on left: 45 46
        on right: 37
    is_public_module <b> (235)
        on left: 47 48
        on right: 45 46
    expect_declaration (236)
        on left: 49
        on right: 7
    expect_list (237)
        on left: 50 51
        on right: 49 51
    expect_error (238)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (239)
        on left: 54
        on right: 240
    expression_goto <pExpression> (240)
        on left: 55 56
        on right: 241
    elif_or_static_elif <b> (241)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (242)
        on left: 59 60 61
        on right: 61 72
    if_or_static_if <b> (243)
        on left: 62 63
        on right: 72
    expression_else_one_liner <pExpression> (244)
        on left: 64 66
        on right: 74
    $@2 (245)
        on left: 65
        on right: 66
    expression_if_one_liner <pExpression> (246)
        on left: 67 68 69 70 71
        on right: 66 74
    expression_if_then_else <pExpression> (247)
        on left: 72 74
        on right: 238
    $@3 (248)
        on left: 73
        on right: 74
    expression_for_loop <pExpression> (249)
        on left: 76
        on right: 233
    $@4 (250)
        on left: 75
        on right: 76
    expression_unsafe <pExpression> (251)
        on left: 77
        on right: 230
    expression_while_loop <pExpression> (252)
        on left: 78
        on right: 229
    expression_with <pExpression> (253)
        on left: 79
        on right: 231
    expression_with_alias <pExpression> (254)
        on left: 81
        on right: 232
    $@5 (255)
        on left: 80
        on right: 81
    annotation_argument_value <aa> (256)
        on left: 82 83 84 85 86 87
        on right: 88 89
    annotation_argument_value_list <aaList> (257)
        on left: 88 89
        on right: 89 100
    annotation_argument_name <s> (258)
        on left: 90 91 92
        on right: 93 94 95 96 97 98 99 100
    annotation_argument <aa> (259)
        on left: 93 94 95 96 97 98 99 100
        on right: 101 102 103 104
    annotation_argument_list <aaList> (260)
        on left: 101 102
        on right: 36 102 109 515
    metadata_argument_list <aaList> (261)
        on left: 103 104
        on right: 104 516
    annotation_declaration_name <s> (262)
        on left: 105 106 107
        on right: 108 109
    annotation_declaration_basic <fa> (263)
        on left: 108 109
        on right: 110
    annotation_declaration <fa> (264)
        on left: 110 111 112 113 114 115 116
        on right: 111 112 113 114 115 116 117 118
    annotation_list <faList> (265)
        on left: 117 118
        on right: 118 120 535
    optional_annotation_list <faList> (266)
        on left: 119 120
        on right: 211 338 339 341 532 534 607 610 625
    optional_function_argument_list <pVarDeclList> (267)
        on left: 121 122 123
        on right: 215 338 339 341 401 726 733 740
    optional_function_type <pTypeDecl> (268)
        on left: 124 125
        on right: 215 338 339 341 401 726 733 740
    function_name <s> (269)
        on left: 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210
        on right: 215
    global_function_declaration (270)
        on left: 211
        on right: 6
    optional_public_or_private_function <b> (271)
        on left: 212 213 214
        on right: 217
    function_declaration_header <pFuncDecl> (272)
        on left: 215
        on right: 217 532 534
    function_declaration <pFuncDecl> (273)
        on left: 217
        on right: 211
    $@6 (274)
        on left: 216
        on right: 217
    expression_block <pExpression> (275)
        on left: 218 219
        on right: 60 61 72 76 77 78 79 217 246 290 323 337 341 534
    expr_call_pipe <pExpression> (276)
        on left: 220 221
        on right: 263 371
    expression_any <pExpression> (277)
        on left: 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242
        on right: 244
    expressions <pExpression> (278)
        on left: 243 244 245
        on right: 218 219 244 245
    expr_keyword <pExpression> (279)
        on left: 246
        on right: 224
    optional_expr_list <pExpression> (280)
        on left: 247 248
        on right: 250 692 694
    optional_expr_list_in_braces <pExpression> (281)
        on left: 249 250
        on right: 258
    type_declaration_no_options_list <pTypeDeclList> (282)
        on left: 251 252
        on right: 252 255 258 694
    expression_keyword <pExpression> (283)
        on left: 255 258
        on right: 221 497
    $@7 (284)
        on left: 253
        on right: 255
    $@8 (285)
        on left: 254
        on right: 255
    $@9 (286)
        on left: 256
        on right: 258
    $@10 (287)
        on left: 257
        on right: 258
    expr_pipe <pExpression> (288)
        on left: 259 260 261 262 263
        on right: 223 283 284 288 289 560 573 575
    name_in_namespace <s> (289)
        on left: 264 265
        on right: 35 105 318 319 320 389 390 393 409 410 411 415 495 612 666 692 694
    expression_delete <pExpression> (290)
        on left: 266 267
        on right: 227
    new_type_declaration <pTypeDecl> (291)
        on left: 270 271
        on right: 272 273 274 275
    $@11 (292)
        on left: 268
        on right: 270
    $@12 (293)
        on left: 269
        on right: 270
    expr_new <pExpression> (294)
        on left: 272 273 274 275 276
        on right: 488
    expression_break <pExpression> (295)
        on left: 277
        on right: 70 234
    expression_continue <pExpression> (296)
        on left: 278
        on right: 71 235
    expression_return_no_pipe <pExpression> (297)
        on left: 279 280 281
        on right: 68 282
    expression_return <pExpression> (298)
        on left: 282 283 284
        on right: 236
    expression_yield_no_pipe <pExpression> (299)
        on left: 285 286
        on right: 69 287
    expression_yield <pExpression> (300)
        on left: 287 288 289
        on right: 237
    expression_try_catch <pExpression> (301)
        on left: 290
        on right: 239
    kwd_let_var_or_nothing <b> (302)
        on left: 291 292 293
        on right: 536
    kwd_let <b> (303)
        on left: 294 295
        on right: 304 305 584 586
    optional_in_scope <b> (304)
        on left: 296 297
        on right: 304 305
    tuple_expansion <pNameList> (305)
        on left: 298 299
        on right: 299 300 301 302 303
    tuple_expansion_variable_declaration <pVarDecl> (306)
        on left: 300 301 302 303
        on right: 305
    expression_let <pExpression> (307)
        on left: 304 305
        on right: 228
    expr_cast <pExpression> (308)
        on left: 308 311 314
        on right: 487
    $@13 (309)
        on left: 306
        on right: 308
    $@14 (310)
        on left: 307
        on right: 308
    $@15 (311)
        on left: 309
        on right: 311
    $@16 (312)
        on left: 310
        on right: 311
    $@17 (313)
        on left: 312
        on right: 314
    $@18 (314)
        on left: 313
        on right: 314
    expr_type_decl <pExpression> (315)
        on left: 317
        on right: 486
    $@19 (316)
        on left: 315
        on right: 317
    $@20 (317)
        on left: 316
        on right: 317
    expr_type_info <pExpression> (318)
        on left: 318 319 320
        on right: 485
    expr_list <pExpression> (319)
        on left: 321 322
        on right: 76 248 274 280 281 322 390 392 405 411 413 454 505 820 826 838 841 842 845 859 860 861 862 863 864
    block_or_simple_block <pExpression> (320)
        on left: 323 324 325
        on right: 338 339
    block_or_lambda <i> (321)
        on left: 326 327 328
        on right: 338 339 341
    capture_entry <pCapt> (322)
        on left: 329 330 331 332
        on right: 333 334
    capture_list <pCaptList> (323)
        on left: 333 334
        on right: 334 336
    optional_capture_list <pCaptList> (324)
        on left: 335 336
        on right: 338 339 341 466 467
    expr_block <pExpression> (325)
        on left: 337 338
        on right: 259 260 261 262 368 369 370 782
    expr_full_block <pExpression> (326)
        on left: 339
        on right: 491
    expr_full_block_assumed_piped <pExpression> (327)
        on left: 341
        on right: 220 221
    $@21 (328)
        on left: 340
        on right: 341
    expr_numeric_const <pExpression> (329)
        on left: 342 343 344 345 346 347 348
        on right: 416
    expr_assign <pExpression> (330)
        on left: 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367
        on right: 226 259
    expr_assign_pipe_right <pExpression> (331)
        on left: 368 369 370 371
        on right: 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388
    expr_assign_pipe <pExpression> (332)
        on left: 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388
        on right: 225
    expr_named_call <pExpression> (333)
        on left: 389 390
        on right: 490
    expr_method_call <pExpression> (334)
        on left: 391 392
        on right: 489
    func_addr_name <pExpression> (335)
        on left: 393 394
        on right: 395 398 401
    func_addr_expr <pExpression> (336)
        on left: 395 398 401
        on right: 461
    $@22 (337)
        on left: 396
        on right: 398
    $@23 (338)
        on left: 397
        on right: 398
    $@24 (339)
        on left: 399
        on right: 401
    $@25 (340)
        on left: 400
        on right: 401
    expr_field <pExpression> (341)
        on left: 402 403 404 405 408
        on right: 422
    $@26 (342)
        on left: 406
        on right: 408
    $@27 (343)
        on left: 407
        on right: 408
    expr_call <pExpression> (344)
        on left: 409 410 411 412 413
        on right: 462
    expr <pExpression> (345)
        on left: 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 472 473 474 475 478 479 480 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497
        on right
    $@28 (346)
        on left: 470
        on right: 472
    $@29 (347)
        on left: 471
        on right: 472
    $@30 (348)
        on left: 476
        on right: 478
    $@31 (349)
        on left: 477
        on right: 478
    $@32 (350)
        on left: 481
        on right: 483
    $@33 (351)
        on left: 482
        on right: 483
    expr_mtag <pExpression> (352)
        on left: 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513
        on right: 423
    optional_field_annotation <aaList> (353)
        on left: 514 515 516
        on right: 527 536 578 586
    optional_override <i> (354)
        on left: 517 518 519
        on right: 527 534
    optional_constant <b> (355)
        on left: 520 521
        on right: 532 534
    optional_public_or_private_member_variable <b> (356)
        on left: 522 523 524
        on right: 527 532 534
    optional_static_member_variable <b> (357)
        on left: 525 526
        on right: 527 534
    structure_variable_declaration <pVarDecl> (358)
        on left: 527
        on right: 530
    struct_variable_declaration_list <pVarDeclList> (359)
        on left: 528 530 532 534 535
        on right: 530 532 534 535 622
    $@34 (360)
        on left: 529
        on right: 530
    $@35 (361)
        on left: 531
        on right: 532
    $@36 (362)
        on left: 533
        on right: 534
    function_argument_declaration <pVarDecl> (363)
        on left: 536 537
        on right: 538 539
    function_argument_list <pVarDeclList> (364)
        on left: 538 539
        on right: 123 539
    tuple_type <pVarDecl> (365)
        on left: 540 541
        on right: 542 543 546
    tuple_type_list <pVarDeclList> (366)
        on left: 542 543
        on right: 543 743
    tuple_alias_type_list <pVarDeclList> (367)
        on left: 544 545 546
        on right: 545 546 754
    variant_type <pVarDecl> (368)
        on left: 547
        on right: 548 549 552
    variant_type_list <pVarDeclList> (369)
        on left: 548 549
        on right: 549 746
    variant_alias_type_list <pVarDeclList> (370)
        on left: 550 551 552
        on right: 551 552 759
    copy_or_move <b> (371)
        on left: 553 554
        on right: 558 559 560 770 772 774 776
    variable_declaration <pVarDecl> (372)
        on left: 555 556 557 558 559 560
        on right: 527 536
    copy_or_move_or_clone <i> (373)
        on left: 561 562 563
        on right: 300 301 302 303 572 573 574 575
    optional_ref <b> (374)
        on left: 564 565
        on right: 302 303 574 575
    let_variable_name_with_pos_list <pNameWithPosList> (375)
        on left: 566 567 568 569 570
        on right: 569 570 571 572 573 574 575
    let_variable_declaration <pVarDecl> (376)
        on left: 571 572 573 574 575
        on right: 304 578 586
    global_variable_declaration_list <pVarDeclList> (377)
        on left: 576 578
        on right: 578 584
    $@37 (378)
        on left: 577
        on right: 578
    optional_shared <b> (379)
        on left: 579 580
        on right: 22 584 586
    optional_public_or_private_variable <b> (380)
        on left: 581 582 583
        on right: 584 586
    global_let (381)
        on left: 584 586
        on right: 5
    $@38 (382)
        on left: 585
        on right: 586
    enum_list <pEnum> (383)
        on left: 587 588 589 590
        on right: 588 589 590 607 610
    optional_public_or_private_alias <b> (384)
        on left: 591 592 593
        on right: 595 754 759 764
    single_alias (385)
        on left: 595
        on right: 596 597 600
    $@39 (386)
        on left: 594
        on right: 595
    alias_list (387)
        on left: 596 597
        on right: 597 598
    alias_declaration (388)
        on left: 598 600
        on right: 10
    $@40 (389)
        on left: 599
        on right: 600
    optional_public_or_private_enum <b> (390)
        on left: 601 602 603
        on right: 607 610
    enum_name <pEnum> (391)
        on left: 604
        on right: 607 610
    enum_declaration (392)
        on left: 607 610
        on right: 4
    $@41 (393)
        on left: 605
        on right: 607
    $@42 (394)
        on left: 606
        on right: 607
    $@43 (395)
        on left: 608
        on right: 610
    $@44 (396)
        on left: 609
        on right: 610
    optional_structure_parent <s> (397)
        on left: 611 612
        on right: 615
    optional_sealed <b> (398)
        on left: 613 614
        on right: 615
    structure_name <pStructure> (399)
        on left: 615
        on right: 625
    class_or_struct <b> (400)
        on left: 616 617
        on right: 625
    optional_public_or_private_structure <b> (401)
        on left: 618 619 620
        on right: 625
    optional_struct_variable_declaration_list <pVarDeclList> (402)
        on left: 621 622
        on right: 625
    structure_declaration (403)
        on left: 625
        on right: 3
    $@45 (404)
        on left: 623
        on right: 625
    $@46 (405)
        on left: 624
        on right: 625
    variable_name_with_pos_list <pNameWithPosList> (406)
        on left: 626 627 628 629 630
        on right: 76 555 556 557 558 559 560 629 630 859 860 861 862 863 864
    basic_type_declaration <type> (407)
        on left: 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657
        on right: 412 413 473 479 484 494 682
    enum_basic_type_declaration <type> (408)
        on left: 658 659 660 661 662 663 664 665
        on right: 610
    structure_type_declaration <pTypeDecl> (409)
        on left: 666
        on right: 271 685
    auto_type_declaration <pTypeDecl> (410)
        on left: 667 668 669
        on right: 683
    bitfield_bits <pNameList> (411)
        on left: 670 671
        on right: 671 677
    bitfield_alias_bits <pNameList> (412)
        on left: 672 673 674
        on right: 673 674 764
    bitfield_type_declaration <pTypeDecl> (413)
        on left: 677
        on right: 684
    $@47 (414)
        on left: 675
        on right: 677
    $@48 (415)
        on left: 676
        on right: 677
    table_type_pair <aTypePair> (416)
        on left: 678 679
        on right: 716
    dim_list <pTypeDecl> (417)
        on left: 680 681
        on right: 681 686
    type_declaration_no_options <pTypeDecl> (418)
        on left: 682 683 684 685 686 687 690 691 692 694 695 696 697 698 699 700 701 702 703 704 705 706 709 710 713 716 719 720 723 726 727 730 733 734 737 740 743 746
        on right: 300 301 308 311 314 398 466 467 472 571 572 573 686 687 695 696 697 698 699 700 701 702 703 704 705 706 710 747 748 797 798 799 800 801 802 805 808 811 814 823 827 828 831 834 837 841 845 853 854
    $@49 (419)
        on left: 688
        on right: 690
    $@50 (420)
        on left: 689
        on right: 690
    $@51 (421)
        on left: 693
        on right: 694
    $@52 (422)
        on left: 707
        on right: 709
    $@53 (423)
        on left: 708
        on right: 709
    $@54 (424)
        on left: 711
        on right: 713
    $@55 (425)
        on left: 712
        on right: 713
    $@56 (426)
        on left: 714
        on right: 716
    $@57 (427)
        on left: 715
        on right: 716
    $@58 (428)
        on left: 717
        on right: 719
    $@59 (429)
        on left: 718
        on right: 719
    $@60 (430)
        on left: 721
        on right: 723
    $@61 (431)
        on left: 722
        on right: 723
    $@62 (432)
        on left: 724
        on right: 726
    $@63 (433)
        on left: 725
        on right: 726
    $@64 (434)
        on left: 728
        on right: 730
    $@65 (435)
        on left: 729
        on right: 730
    $@66 (436)
        on left: 731
        on right: 733
    $@67 (437)
        on left: 732
        on right: 733
    $@68 (438)
        on left: 735
        on right: 737
    $@69 (439)
        on left: 736
        on right: 737
    $@70 (440)
        on left: 738
        on right: 740
    $@71 (441)
        on left: 739
        on right: 740
    $@72 (442)
        on left: 741
        on right: 743
    $@73 (443)
        on left: 742
        on right: 743
    $@74 (444)
        on left: 744
        on right: 746
    $@75 (445)
        on left: 745
        on right: 746
    type_declaration <pTypeDecl> (446)
        on left: 747 748 749
        on right: 125 251 252 270 317 478 483 540 541 547 557 558 595 678 679 690 709 713 719 723 730 737 748 749
    tuple_alias_declaration (447)
        on left: 754
        on right: 12
    $@76 (448)
        on left: 750
        on right: 754
    $@77 (449)
        on left: 751
        on right: 754
    $@78 (450)
        on left: 752
        on right: 754
    $@79 (451)
        on left: 753
        on right: 754
    variant_alias_declaration (452)
        on left: 759
        on right: 11
    $@80 (453)
        on left: 755
        on right: 759
    $@81 (454)
        on left: 756
        on right: 759
    $@82 (455)
        on left: 757
        on right: 759
    $@83 (456)
        on left: 758
        on right: 759
    bitfield_alias_declaration (457)
        on left: 764
        on right: 13
    $@84 (458)
        on left: 760
        on right: 764
    $@85 (459)
        on left: 761
        on right: 764
    $@86 (460)
        on left: 762
        on right: 764
    $@87 (461)
        on left: 763
        on right: 764
    make_decl <pExpression> (462)
        on left: 765 766 767 768 769
        on right: 276 419
    make_struct_fields <pMakeStruct> (463)
        on left: 770 771 772 773 774 775 776 777
        on right: 389 390 772 773 776 777 778 779 780
    make_struct_single <pExpression> (464)
        on left: 778
        on right: 275 410
    make_struct_dim <pExpression> (465)
        on left: 779 780
        on right: 780 797 800 801 802 805 808 811 823 831 834 837
    optional_block <pExpression> (466)
        on left: 781 782
        on right: 797 798 799 800 801 802
    optional_trailing_semicolon_cur_cur (467)
        on left: 783 784
        on right: 851
    optional_trailing_semicolon_cur_sqr (468)
        on left: 785 786
        on right: 828
    optional_trailing_semicolon_sqr_sqr (469)
        on left: 787 788
        on right: 827
    optional_trailing_delim_sqr_sqr (470)
        on left: 789 790 791
        on right: 797 798 799 800
    optional_trailing_delim_cur_sqr (471)
        on left: 792 793 794
        on right: 801 802
    use_initializer <b> (472)
        on left: 795 796
        on right: 273 275 805 808 814 823 831 834
    make_struct_decl <pExpression> (473)
        on left: 797 798 799 800 801 802 805 808 811 814
        on right: 765
    $@88 (474)
        on left: 803
        on right: 805
    $@89 (475)
        on left: 804
        on right: 805
    $@90 (476)
        on left: 806
        on right: 808
    $@91 (477)
        on left: 807
        on right: 808
    $@92 (478)
        on left: 809
        on right: 811
    $@93 (479)
        on left: 810
        on right: 811
    $@94 (480)
        on left: 812
        on right: 814
    $@95 (481)
        on left: 813
        on right: 814
    make_tuple <pExpression> (482)
        on left: 815 816 817
        on right: 817 824 825
    make_map_tuple <pExpression> (483)
        on left: 818 819
        on right: 846 847 848 849 863 864
    make_tuple_call <pExpression> (484)
        on left: 820 823
        on right: 769
    $@96 (485)
        on left: 821
        on right: 823
    $@97 (486)
        on left: 822
        on right: 823
    make_dim <pExpression> (487)
        on left: 824 825
        on right: 825 827 828
    make_dim_decl <pExpression> (488)
        on left: 826 827 828 831 834 837 838 841 842 845
        on right: 766
    $@98 (489)
        on left: 829
        on right: 831
    $@99 (490)
        on left: 830
        on right: 831
    $@100 (491)
        on left: 832
        on right: 834
    $@101 (492)
        on left: 833
        on right: 834
    $@102 (493)
        on left: 835
        on right: 837
    $@103 (494)
        on left: 836
        on right: 837
    $@104 (495)
        on left: 839
        on right: 841
    $@105 (496)
        on left: 840
        on right: 841
    $@106 (497)
        on left: 843
        on right: 845
    $@107 (498)
        on left: 844
        on right: 845
    make_table <pExpression> (499)
        on left: 846 847
        on right: 847 851
    expr_map_tuple_list <pExpression> (500)
        on left: 848 849
        on right: 849 850 852 853 854
    make_table_decl <pExpression> (501)
        on left: 850 851 852 853 854
        on right: 767
    array_comprehension_where <pExpression> (502)
        on left: 855 856
        on right: 859 860 861 862 863 864
    optional_comma <b> (503)
        on left: 857 858
        on right: 454 820 826 838 841 842 845 850 852 853 854
    array_comprehension <pExpression> (504)
        on left: 859 860 861 862 863 864
        on right: 768


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  294 kwd_let: "let" .

    $default  reduce using rule 294 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  598 alias_declaration: "typedef" . "begin of code block" alias_list "end of code block"
  600                  | "typedef" . $@40 single_alias "end of expression"

    "begin of code block"  shift, and go to state 48

    $default  reduce using rule 599 ($@40)

    $@40  go to state 49


State 8

  295 kwd_let: "var" .

    $default  reduce using rule 295 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  764 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 591 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  754 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 591 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  759 variant_alias_declaration: "variant" . optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 591 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "name"  shift, and go to state 58

    name_in_namespace  go to state 59


State 15

  120 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 67
    annotation_list               go to state 68
    name_in_namespace             go to state 69


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 70


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  211 global_function_declaration: optional_annotation_list . "def" function_declaration
  607 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  610                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"
  625 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 71
    "class"   shift, and go to state 72
    "def"     shift, and go to state 73
    "enum"    shift, and go to state 74

    class_or_struct  go to state 75


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  584 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  586           | kwd_let . optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 76

    $default  reduce using rule 579 (optional_shared)

    optional_shared  go to state 77


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   91 annotation_argument_name: "type" .

    $default  reduce using rule 91 (annotation_argument_name)


State 33

   92 annotation_argument_name: "in" .

    $default  reduce using rule 92 (annotation_argument_name)


State 34

   90 annotation_argument_name: "name" .

    $default  reduce using rule 90 (annotation_argument_name)


State 35

   93 annotation_argument: annotation_argument_name . '=' string_constant
   94                    | annotation_argument_name . '=' "name"
   95                    | annotation_argument_name . '=' "integer constant"
   96                    | annotation_argument_name . '=' "floating point constant"
   97                    | annotation_argument_name . '=' "true"
   98                    | annotation_argument_name . '=' "false"
   99                    | annotation_argument_name .
  100                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 78

    $default  reduce using rule 99 (annotation_argument)


State 36

  101 annotation_argument_list: annotation_argument .

    $default  reduce using rule 101 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 79

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 80

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 81

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 82


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 83
    "public"  shift, and go to state 84
    '/'       shift, and go to state 85
    '.'       shift, and go to state 86

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 87


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  598 alias_declaration: "typedef" "begin of code block" . alias_list "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 591 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 88
    single_alias                      go to state 89
    alias_list                        go to state 90


State 49

  600 alias_declaration: "typedef" $@40 . single_alias "end of expression"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 591 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 88
    single_alias                      go to state 91


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 76

    $default  reduce using rule 579 (optional_shared)

    optional_shared  go to state 92


State 53

  593 optional_public_or_private_alias: "public" .

    $default  reduce using rule 593 (optional_public_or_private_alias)


State 54

  592 optional_public_or_private_alias: "private" .

    $default  reduce using rule 592 (optional_public_or_private_alias)


State 55

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 760 ($@84)

    $@84  go to state 93


State 56

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 750 ($@76)

    $@76  go to state 94


State 57

  759 variant_alias_declaration: "variant" optional_public_or_private_alias . $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 755 ($@80)

    $@80  go to state 95


State 58

  264 name_in_namespace: "name" .
  265                  | "name" . "::" "name"

    "::"  shift, and go to state 96

    $default  reduce using rule 264 (name_in_namespace)


State 59

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 97


State 60

  106 annotation_declaration_name: "require" .

    $default  reduce using rule 106 (annotation_declaration_name)


State 61

  107 annotation_declaration_name: "private" .

    $default  reduce using rule 107 (annotation_declaration_name)


State 62

  116 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 98
    name_in_namespace             go to state 69


State 63

  111 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 99
    name_in_namespace             go to state 69


State 64

  115 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 100
    name_in_namespace             go to state 69


State 65

  108 annotation_declaration_basic: annotation_declaration_name .
  109                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 101

    $default  reduce using rule 108 (annotation_declaration_basic)


State 66

  110 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 110 (annotation_declaration)


State 67

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  117 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 117 (annotation_list)


State 68

  118 annotation_list: annotation_list . ',' annotation_declaration
  120 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 105
    ']'  shift, and go to state 106


State 69

  105 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 105 (annotation_declaration_name)


State 70

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 71

  617 class_or_struct: "struct" .

    $default  reduce using rule 617 (class_or_struct)


State 72

  616 class_or_struct: "class" .

    $default  reduce using rule 616 (class_or_struct)


State 73

  211 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 107
    "private"  shift, and go to state 108

    $default  reduce using rule 212 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 109
    function_declaration                 go to state 110


State 74

  607 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  610                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "public"   shift, and go to state 111
    "private"  shift, and go to state 112

    $default  reduce using rule 601 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 113


State 75

  625 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "public"   shift, and go to state 114
    "private"  shift, and go to state 115

    $default  reduce using rule 618 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 116


State 76

  580 optional_shared: "shared" .

    $default  reduce using rule 580 (optional_shared)


State 77

  584 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  586           | kwd_let optional_shared . optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 117
    "private"  shift, and go to state 118

    $default  reduce using rule 581 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 119


State 78

   93 annotation_argument: annotation_argument_name '=' . string_constant
   94                    | annotation_argument_name '=' . "name"
   95                    | annotation_argument_name '=' . "integer constant"
   96                    | annotation_argument_name '=' . "floating point constant"
   97                    | annotation_argument_name '=' . "true"
   98                    | annotation_argument_name '=' . "false"
  100                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 120
    "false"                    shift, and go to state 121
    "integer constant"         shift, and go to state 122
    "floating point constant"  shift, and go to state 123
    "name"                     shift, and go to state 124
    "start of the string"      shift, and go to state 125
    '('                        shift, and go to state 126

    string_constant  go to state 127


State 79

  102 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 128


State 80

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 129


State 81

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 130


State 82

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 86

    $default  reduce using rule 42 (require_module_name)


State 83

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 131


State 84

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 85

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 132


State 86

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 133


State 87

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 88

  595 single_alias: optional_public_or_private_alias . "name" $@39 '=' type_declaration

    "name"  shift, and go to state 134


State 89

  596 alias_list: single_alias . "end of expression"

    "end of expression"  shift, and go to state 135


State 90

  597 alias_list: alias_list . single_alias "end of expression"
  598 alias_declaration: "typedef" "begin of code block" alias_list . "end of code block"

    "public"             shift, and go to state 53
    "private"            shift, and go to state 54
    "end of code block"  shift, and go to state 136

    $default  reduce using rule 591 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 88
    single_alias                      go to state 137


State 91

  600 alias_declaration: "typedef" $@40 single_alias . "end of expression"

    "end of expression"  shift, and go to state 138


State 92

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 139
    "private"  shift, and go to state 140

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 141


State 93

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 . "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "name"  shift, and go to state 142


State 94

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 . "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "name"  shift, and go to state 143


State 95

  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 . "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "name"  shift, and go to state 144


State 96

  265 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 145


State 97

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 146

    reader_character_sequence  go to state 147


State 98

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  116                       | "|>" annotation_declaration .

    $default  reduce using rule 116 (annotation_declaration)


State 99

  111 annotation_declaration: '!' annotation_declaration .
  112                       | annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 111 (annotation_declaration)


State 100

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  115                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104
    ')'   shift, and go to state 148


State 101

  109 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 149


State 102

  112 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 150
    name_in_namespace             go to state 69


State 103

  113 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 151
    name_in_namespace             go to state 69


State 104

  114 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 152
    name_in_namespace             go to state 69


State 105

  118 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 153
    name_in_namespace             go to state 69


State 106

  120 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 120 (optional_annotation_list)


State 107

  214 optional_public_or_private_function: "public" .

    $default  reduce using rule 214 (optional_public_or_private_function)


State 108

  213 optional_public_or_private_function: "private" .

    $default  reduce using rule 213 (optional_public_or_private_function)


State 109

  217 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 216 ($@6)

    $@6  go to state 154


State 110

  211 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 211 (global_function_declaration)


State 111

  603 optional_public_or_private_enum: "public" .

    $default  reduce using rule 603 (optional_public_or_private_enum)


State 112

  602 optional_public_or_private_enum: "private" .

    $default  reduce using rule 602 (optional_public_or_private_enum)


State 113

  607 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  610                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "name"  shift, and go to state 155

    enum_name  go to state 156


State 114

  620 optional_public_or_private_structure: "public" .

    $default  reduce using rule 620 (optional_public_or_private_structure)


State 115

  619 optional_public_or_private_structure: "private" .

    $default  reduce using rule 619 (optional_public_or_private_structure)


State 116

  625 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@45 structure_name $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 623 ($@45)

    $@45  go to state 157


State 117

  583 optional_public_or_private_variable: "public" .

    $default  reduce using rule 583 (optional_public_or_private_variable)


State 118

  582 optional_public_or_private_variable: "private" .

    $default  reduce using rule 582 (optional_public_or_private_variable)


State 119

  584 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  586           | kwd_let optional_shared optional_public_or_private_variable . $@38 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 158

    $default  reduce using rule 585 ($@38)

    $@38  go to state 159


State 120

   97 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 97 (annotation_argument)


State 121

   98 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 98 (annotation_argument)


State 122

   95 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 95 (annotation_argument)


State 123

   96 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 96 (annotation_argument)


State 124

   94 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 94 (annotation_argument)


State 125

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 160
    STRING_CHARACTER_ESC  shift, and go to state 161

    character_sequence  go to state 162


State 126

  100 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 163
    "false"                    shift, and go to state 164
    "integer constant"         shift, and go to state 165
    "floating point constant"  shift, and go to state 166
    "name"                     shift, and go to state 167
    "start of the string"      shift, and go to state 125

    string_constant                 go to state 168
    annotation_argument_value       go to state 169
    annotation_argument_value_list  go to state 170


State 127

   93 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 93 (annotation_argument)


State 128

  102 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 129

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 130

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 131

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 84

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 171


State 132

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 133

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 134

  595 single_alias: optional_public_or_private_alias "name" . $@39 '=' type_declaration

    $default  reduce using rule 594 ($@39)

    $@39  go to state 172


State 135

  596 alias_list: single_alias "end of expression" .

    $default  reduce using rule 596 (alias_list)


State 136

  598 alias_declaration: "typedef" "begin of code block" alias_list "end of code block" .

    $default  reduce using rule 598 (alias_declaration)


State 137

  597 alias_list: alias_list single_alias . "end of expression"

    "end of expression"  shift, and go to state 173


State 138

  600 alias_declaration: "typedef" $@40 single_alias "end of expression" .

    $default  reduce using rule 600 (alias_declaration)


State 139

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 140

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 141

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 142

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" . $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 761 ($@85)

    $@85  go to state 174


State 143

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" . $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 751 ($@77)

    $@77  go to state 175


State 144

  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" . $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 756 ($@81)

    $@81  go to state 176


State 145

  265 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 265 (name_in_namespace)


State 146

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 147

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 177

    $default  reduce using rule 35 (expr_reader)


State 148

  115 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 115 (annotation_declaration)


State 149

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  109 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 79
    ')'  shift, and go to state 178


State 150

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  112                       | annotation_declaration "&&" annotation_declaration .
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 112 (annotation_declaration)


State 151

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  113                       | annotation_declaration "||" annotation_declaration .
  114                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 102
    "^^"  shift, and go to state 104

    $default  reduce using rule 113 (annotation_declaration)


State 152

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  114                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 102

    $default  reduce using rule 114 (annotation_declaration)


State 153

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  118 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 118 (annotation_list)


State 154

  217 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 179
    "bool"      shift, and go to state 180
    "string"    shift, and go to state 181
    "int"       shift, and go to state 182
    "int2"      shift, and go to state 183
    "int3"      shift, and go to state 184
    "int4"      shift, and go to state 185
    "uint"      shift, and go to state 186
    "uint2"     shift, and go to state 187
    "uint3"     shift, and go to state 188
    "uint4"     shift, and go to state 189
    "float"     shift, and go to state 190
    "float2"    shift, and go to state 191
    "float3"    shift, and go to state 192
    "float4"    shift, and go to state 193
    "range"     shift, and go to state 194
    "urange"    shift, and go to state 195
    "range64"   shift, and go to state 196
    "urange64"  shift, and go to state 197
    "int64"     shift, and go to state 198
    "uint64"    shift, and go to state 199
    "double"    shift, and go to state 200
    "int8"      shift, and go to state 201
    "uint8"     shift, and go to state 202
    "int16"     shift, and go to state 203
    "uint16"    shift, and go to state 204
    "++"        shift, and go to state 205
    "--"        shift, and go to state 206
    "name"      shift, and go to state 207

    function_name                go to state 208
    function_declaration_header  go to state 209


State 155

  604 enum_name: "name" .

    $default  reduce using rule 604 (enum_name)


State 156

  607 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . "begin of code block" $@41 enum_list $@42 "end of code block"
  610                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 210
    ':'                    shift, and go to state 211


State 157

  625 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 . structure_name $@46 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 212

    $default  reduce using rule 613 (optional_sealed)

    optional_sealed  go to state 213
    structure_name   go to state 214


State 158

  584 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 576 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 215


State 159

  586 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 216
    '@'   shift, and go to state 217

    $default  reduce using rule 514 (optional_field_annotation)

    metadata_argument_list     go to state 218
    optional_field_annotation  go to state 219


State 160

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 161

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 162

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221
    "end of the string"   shift, and go to state 222


State 163

   86 annotation_argument_value: "true" .

    $default  reduce using rule 86 (annotation_argument_value)


State 164

   87 annotation_argument_value: "false" .

    $default  reduce using rule 87 (annotation_argument_value)


State 165

   84 annotation_argument_value: "integer constant" .

    $default  reduce using rule 84 (annotation_argument_value)


State 166

   85 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 167

   83 annotation_argument_value: "name" .

    $default  reduce using rule 83 (annotation_argument_value)


State 168

   82 annotation_argument_value: string_constant .

    $default  reduce using rule 82 (annotation_argument_value)


State 169

   88 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 88 (annotation_argument_value_list)


State 170

   89 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 223
    ')'  shift, and go to state 224


State 171

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 172

  595 single_alias: optional_public_or_private_alias "name" $@39 . '=' type_declaration

    '='  shift, and go to state 225


State 173

  597 alias_list: alias_list single_alias "end of expression" .

    $default  reduce using rule 597 (alias_list)


State 174

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 . "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "begin of code block"  shift, and go to state 226


State 175

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 . "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "begin of code block"  shift, and go to state 227


State 176

  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 . "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "begin of code block"  shift, and go to state 228


State 177

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 178

  109 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 109 (annotation_declaration_basic)


State 179

  127 function_name: "operator" . '!'
  128              | "operator" . '~'
  129              | "operator" . "+="
  130              | "operator" . "-="
  131              | "operator" . "*="
  132              | "operator" . "/="
  133              | "operator" . "%="
  134              | "operator" . "&="
  135              | "operator" . "|="
  136              | "operator" . "^="
  137              | "operator" . "&&="
  138              | "operator" . "||="
  139              | "operator" . "^^="
  140              | "operator" . "&&"
  141              | "operator" . "||"
  142              | "operator" . "^^"
  143              | "operator" . '+'
  144              | "operator" . '-'
  145              | "operator" . '*'
  146              | "operator" . '/'
  147              | "operator" . '%'
  148              | "operator" . '<'
  149              | "operator" . '>'
  150              | "operator" . ".."
  151              | "operator" . "=="
  152              | "operator" . "!="
  153              | "operator" . "<="
  154              | "operator" . ">="
  155              | "operator" . '&'
  156              | "operator" . '|'
  157              | "operator" . '^'
  160              | "operator" . "++"
  161              | "operator" . "--"
  162              | "operator" . "<<"
  163              | "operator" . ">>"
  164              | "operator" . "<<="
  165              | "operator" . ">>="
  166              | "operator" . "<<<"
  167              | "operator" . ">>>"
  168              | "operator" . "<<<="
  169              | "operator" . ">>>="
  170              | "operator" . '[' ']'
  171              | "operator" . "?[" ']'
  172              | "operator" . '.'
  173              | "operator" . "?."
  174              | "operator" . '.' "name"
  175              | "operator" . '.' "name" ":="
  176              | "operator" . "?." "name"
  177              | "operator" . ":="
  178              | "operator" . "delete"
  179              | "operator" . "??"
  180              | "operator" . "is"
  181              | "operator" . "as"
  182              | "operator" . "is" "name"
  183              | "operator" . "as" "name"
  184              | "operator" . '?' "as"
  185              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 229
    "as"      shift, and go to state 230
    "delete"  shift, and go to state 231
    "+="      shift, and go to state 232
    "-="      shift, and go to state 233
    "/="      shift, and go to state 234
    "*="      shift, and go to state 235
    "%="      shift, and go to state 236
    "&="      shift, and go to state 237
    "|="      shift, and go to state 238
    "^="      shift, and go to state 239
    "<<"      shift, and go to state 240
    ">>"      shift, and go to state 241
    "++"      shift, and go to state 242
    "--"      shift, and go to state 243
    "<="      shift, and go to state 244
    "<<="     shift, and go to state 245
    ">>="     shift, and go to state 246
    ">="      shift, and go to state 247
    "=="      shift, and go to state 248
    "!="      shift, and go to state 249
    "??"      shift, and go to state 250
    "?."      shift, and go to state 251
    "?["      shift, and go to state 252
    ":="      shift, and go to state 253
    "<<<"     shift, and go to state 254
    ">>>"     shift, and go to state 255
    "<<<="    shift, and go to state 256
    ">>>="    shift, and go to state 257
    "&&"      shift, and go to state 258
    "||"      shift, and go to state 259
    "^^"      shift, and go to state 260
    "&&="     shift, and go to state 261
    "||="     shift, and go to state 262
    "^^="     shift, and go to state 263
    ".."      shift, and go to state 264
    '?'       shift, and go to state 265
    '|'       shift, and go to state 266
    '^'       shift, and go to state 267
    '&'       shift, and go to state 268
    '<'       shift, and go to state 269
    '>'       shift, and go to state 270
    '-'       shift, and go to state 271
    '+'       shift, and go to state 272
    '*'       shift, and go to state 273
    '/'       shift, and go to state 274
    '%'       shift, and go to state 275
    '~'       shift, and go to state 276
    '!'       shift, and go to state 277
    '.'       shift, and go to state 278
    '['       shift, and go to state 279


State 180

  186 function_name: "bool" .

    $default  reduce using rule 186 (function_name)


State 181

  187 function_name: "string" .

    $default  reduce using rule 187 (function_name)


State 182

  188 function_name: "int" .

    $default  reduce using rule 188 (function_name)


State 183

  189 function_name: "int2" .

    $default  reduce using rule 189 (function_name)


State 184

  190 function_name: "int3" .

    $default  reduce using rule 190 (function_name)


State 185

  191 function_name: "int4" .

    $default  reduce using rule 191 (function_name)


State 186

  192 function_name: "uint" .

    $default  reduce using rule 192 (function_name)


State 187

  193 function_name: "uint2" .

    $default  reduce using rule 193 (function_name)


State 188

  194 function_name: "uint3" .

    $default  reduce using rule 194 (function_name)


State 189

  195 function_name: "uint4" .

    $default  reduce using rule 195 (function_name)


State 190

  196 function_name: "float" .

    $default  reduce using rule 196 (function_name)


State 191

  197 function_name: "float2" .

    $default  reduce using rule 197 (function_name)


State 192

  198 function_name: "float3" .

    $default  reduce using rule 198 (function_name)


State 193

  199 function_name: "float4" .

    $default  reduce using rule 199 (function_name)


State 194

  200 function_name: "range" .

    $default  reduce using rule 200 (function_name)


State 195

  201 function_name: "urange" .

    $default  reduce using rule 201 (function_name)


State 196

  202 function_name: "range64" .

    $default  reduce using rule 202 (function_name)


State 197

  203 function_name: "urange64" .

    $default  reduce using rule 203 (function_name)


State 198

  204 function_name: "int64" .

    $default  reduce using rule 204 (function_name)


State 199

  205 function_name: "uint64" .

    $default  reduce using rule 205 (function_name)


State 200

  206 function_name: "double" .

    $default  reduce using rule 206 (function_name)


State 201

  207 function_name: "int8" .

    $default  reduce using rule 207 (function_name)


State 202

  208 function_name: "uint8" .

    $default  reduce using rule 208 (function_name)


State 203

  209 function_name: "int16" .

    $default  reduce using rule 209 (function_name)


State 204

  210 function_name: "uint16" .

    $default  reduce using rule 210 (function_name)


State 205

  158 function_name: "++" . "operator"

    "operator"  shift, and go to state 280


State 206

  159 function_name: "--" . "operator"

    "operator"  shift, and go to state 281


State 207

  126 function_name: "name" .

    $default  reduce using rule 126 (function_name)


State 208

  215 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 282

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 283


State 209

  217 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 285


State 210

  607 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" . $@41 enum_list $@42 "end of code block"

    $default  reduce using rule 605 ($@41)

    $@41  go to state 286


State 211

  610 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "int"     shift, and go to state 287
    "uint"    shift, and go to state 288
    "int64"   shift, and go to state 289
    "uint64"  shift, and go to state 290
    "int8"    shift, and go to state 291
    "uint8"   shift, and go to state 292
    "int16"   shift, and go to state 293
    "uint16"  shift, and go to state 294

    enum_basic_type_declaration  go to state 295


State 212

  614 optional_sealed: "sealed" .

    $default  reduce using rule 614 (optional_sealed)


State 213

  615 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 296


State 214

  625 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name . $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 624 ($@46)

    $@46  go to state 297


State 215

  578 global_variable_declaration_list: global_variable_declaration_list . $@37 optional_field_annotation let_variable_declaration
  584 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 298

    $default  reduce using rule 577 ($@37)

    $@37  go to state 299


State 216

  515 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 300


State 217

  103 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 301


State 218

  104 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  516 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 302

    $default  reduce using rule 516 (optional_field_annotation)


State 219

  586 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 303
    "name"  shift, and go to state 304

    let_variable_name_with_pos_list  go to state 305
    let_variable_declaration         go to state 306


State 220

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 221

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 222

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 223

   89 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 163
    "false"                    shift, and go to state 164
    "integer constant"         shift, and go to state 165
    "floating point constant"  shift, and go to state 166
    "name"                     shift, and go to state 167
    "start of the string"      shift, and go to state 125

    string_constant            go to state 168
    annotation_argument_value  go to state 307


State 224

  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 100 (annotation_argument)


State 225

  595 single_alias: optional_public_or_private_alias "name" $@39 '=' . type_declaration

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 355


State 226

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" . $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 762 ($@86)

    $@86  go to state 356


State 227

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" . $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 752 ($@78)

    $@78  go to state 357


State 228

  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" . $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 757 ($@82)

    $@82  go to state 358


State 229

  180 function_name: "operator" "is" .
  182              | "operator" "is" . "name"

    "name"  shift, and go to state 359

    $default  reduce using rule 180 (function_name)


State 230

  181 function_name: "operator" "as" .
  183              | "operator" "as" . "name"

    "name"  shift, and go to state 360

    $default  reduce using rule 181 (function_name)


State 231

  178 function_name: "operator" "delete" .

    $default  reduce using rule 178 (function_name)


State 232

  129 function_name: "operator" "+=" .

    $default  reduce using rule 129 (function_name)


State 233

  130 function_name: "operator" "-=" .

    $default  reduce using rule 130 (function_name)


State 234

  132 function_name: "operator" "/=" .

    $default  reduce using rule 132 (function_name)


State 235

  131 function_name: "operator" "*=" .

    $default  reduce using rule 131 (function_name)


State 236

  133 function_name: "operator" "%=" .

    $default  reduce using rule 133 (function_name)


State 237

  134 function_name: "operator" "&=" .

    $default  reduce using rule 134 (function_name)


State 238

  135 function_name: "operator" "|=" .

    $default  reduce using rule 135 (function_name)


State 239

  136 function_name: "operator" "^=" .

    $default  reduce using rule 136 (function_name)


State 240

  162 function_name: "operator" "<<" .

    $default  reduce using rule 162 (function_name)


State 241

  163 function_name: "operator" ">>" .

    $default  reduce using rule 163 (function_name)


State 242

  160 function_name: "operator" "++" .

    $default  reduce using rule 160 (function_name)


State 243

  161 function_name: "operator" "--" .

    $default  reduce using rule 161 (function_name)


State 244

  153 function_name: "operator" "<=" .

    $default  reduce using rule 153 (function_name)


State 245

  164 function_name: "operator" "<<=" .

    $default  reduce using rule 164 (function_name)


State 246

  165 function_name: "operator" ">>=" .

    $default  reduce using rule 165 (function_name)


State 247

  154 function_name: "operator" ">=" .

    $default  reduce using rule 154 (function_name)


State 248

  151 function_name: "operator" "==" .

    $default  reduce using rule 151 (function_name)


State 249

  152 function_name: "operator" "!=" .

    $default  reduce using rule 152 (function_name)


State 250

  179 function_name: "operator" "??" .

    $default  reduce using rule 179 (function_name)


State 251

  173 function_name: "operator" "?." .
  176              | "operator" "?." . "name"

    "name"  shift, and go to state 361

    $default  reduce using rule 173 (function_name)


State 252

  171 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 362


State 253

  177 function_name: "operator" ":=" .

    $default  reduce using rule 177 (function_name)


State 254

  166 function_name: "operator" "<<<" .

    $default  reduce using rule 166 (function_name)


State 255

  167 function_name: "operator" ">>>" .

    $default  reduce using rule 167 (function_name)


State 256

  168 function_name: "operator" "<<<=" .

    $default  reduce using rule 168 (function_name)


State 257

  169 function_name: "operator" ">>>=" .

    $default  reduce using rule 169 (function_name)


State 258

  140 function_name: "operator" "&&" .

    $default  reduce using rule 140 (function_name)


State 259

  141 function_name: "operator" "||" .

    $default  reduce using rule 141 (function_name)


State 260

  142 function_name: "operator" "^^" .

    $default  reduce using rule 142 (function_name)


State 261

  137 function_name: "operator" "&&=" .

    $default  reduce using rule 137 (function_name)


State 262

  138 function_name: "operator" "||=" .

    $default  reduce using rule 138 (function_name)


State 263

  139 function_name: "operator" "^^=" .

    $default  reduce using rule 139 (function_name)


State 264

  150 function_name: "operator" ".." .

    $default  reduce using rule 150 (function_name)


State 265

  184 function_name: "operator" '?' . "as"
  185              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 363


State 266

  156 function_name: "operator" '|' .

    $default  reduce using rule 156 (function_name)


State 267

  157 function_name: "operator" '^' .

    $default  reduce using rule 157 (function_name)


State 268

  155 function_name: "operator" '&' .

    $default  reduce using rule 155 (function_name)


State 269

  148 function_name: "operator" '<' .

    $default  reduce using rule 148 (function_name)


State 270

  149 function_name: "operator" '>' .

    $default  reduce using rule 149 (function_name)


State 271

  144 function_name: "operator" '-' .

    $default  reduce using rule 144 (function_name)


State 272

  143 function_name: "operator" '+' .

    $default  reduce using rule 143 (function_name)


State 273

  145 function_name: "operator" '*' .

    $default  reduce using rule 145 (function_name)


State 274

  146 function_name: "operator" '/' .

    $default  reduce using rule 146 (function_name)


State 275

  147 function_name: "operator" '%' .

    $default  reduce using rule 147 (function_name)


State 276

  128 function_name: "operator" '~' .

    $default  reduce using rule 128 (function_name)


State 277

  127 function_name: "operator" '!' .

    $default  reduce using rule 127 (function_name)


State 278

  172 function_name: "operator" '.' .
  174              | "operator" '.' . "name"
  175              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 364

    $default  reduce using rule 172 (function_name)


State 279

  170 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 365


State 280

  158 function_name: "++" "operator" .

    $default  reduce using rule 158 (function_name)


State 281

  159 function_name: "--" "operator" .

    $default  reduce using rule 159 (function_name)


State 282

  122 optional_function_argument_list: '(' . ')'
  123                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 366
    "[["  shift, and go to state 216
    ')'   shift, and go to state 367
    '@'   shift, and go to state 217

    $default  reduce using rule 514 (optional_field_annotation)

    metadata_argument_list         go to state 218
    optional_field_annotation      go to state 368
    function_argument_declaration  go to state 369
    function_argument_list         go to state 370


State 283

  215 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 371

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 372


State 284

  218 expression_block: "begin of code block" . expressions "end of code block"
  219                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 243 (expressions)

    expressions  go to state 373


State 285

  217 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 217 (function_declaration)


State 286

  607 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 . enum_list $@42 "end of code block"

    $default  reduce using rule 587 (enum_list)

    enum_list  go to state 374


State 287

  658 enum_basic_type_declaration: "int" .

    $default  reduce using rule 658 (enum_basic_type_declaration)


State 288

  661 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 661 (enum_basic_type_declaration)


State 289

  664 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 664 (enum_basic_type_declaration)


State 290

  665 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 665 (enum_basic_type_declaration)


State 291

  659 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 659 (enum_basic_type_declaration)


State 292

  662 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 662 (enum_basic_type_declaration)


State 293

  660 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 660 (enum_basic_type_declaration)


State 294

  663 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 663 (enum_basic_type_declaration)


State 295

  610 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 375


State 296

  615 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 376

    $default  reduce using rule 611 (optional_structure_parent)

    optional_structure_parent  go to state 377


State 297

  625 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 378

    $default  reduce using rule 621 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 379


State 298

  584 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 584 (global_let)


State 299

  578 global_variable_declaration_list: global_variable_declaration_list $@37 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 216
    '@'   shift, and go to state 217

    $default  reduce using rule 514 (optional_field_annotation)

    metadata_argument_list     go to state 218
    optional_field_annotation  go to state 380


State 300

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  515 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 79
    ']'  shift, and go to state 381


State 301

  103 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 103 (metadata_argument_list)


State 302

  104 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 382


State 303

  567 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 383


State 304

  566 let_variable_name_with_pos_list: "name" .
  568                                | "name" . "aka" "name"

    "aka"  shift, and go to state 384

    $default  reduce using rule 566 (let_variable_name_with_pos_list)


State 305

  569 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  570                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  571 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  572                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  573                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  574                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  575                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 385
    ':'  shift, and go to state 386
    '&'  shift, and go to state 387

    $default  reduce using rule 564 (optional_ref)

    optional_ref  go to state 388


State 306

  586 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 586 (global_let)


State 307

   89 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 308

  690 type_declaration_no_options: "type" . '<' $@49 type_declaration '>' $@50

    '<'  shift, and go to state 389


State 309

  713 type_declaration_no_options: "array" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 390


State 310

  716 type_declaration_no_options: "table" . '<' $@56 table_type_pair '>' $@57

    '<'  shift, and go to state 391


State 311

  691 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 392


State 312

  719 type_declaration_no_options: "iterator" . '<' $@58 type_declaration '>' $@59

    '<'  shift, and go to state 393


State 313

  709 type_declaration_no_options: "smart_ptr" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 394


State 314

  631 basic_type_declaration: "bool" .

    $default  reduce using rule 631 (basic_type_declaration)


State 315

  651 basic_type_declaration: "void" .

    $default  reduce using rule 651 (basic_type_declaration)


State 316

  632 basic_type_declaration: "string" .

    $default  reduce using rule 632 (basic_type_declaration)


State 317

  667 auto_type_declaration: "auto" .
  668                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 395

    '('       [reduce using rule 667 (auto_type_declaration)]
    $default  reduce using rule 667 (auto_type_declaration)


State 318

  633 basic_type_declaration: "int" .

    $default  reduce using rule 633 (basic_type_declaration)


State 319

  637 basic_type_declaration: "int2" .

    $default  reduce using rule 637 (basic_type_declaration)


State 320

  638 basic_type_declaration: "int3" .

    $default  reduce using rule 638 (basic_type_declaration)


State 321

  639 basic_type_declaration: "int4" .

    $default  reduce using rule 639 (basic_type_declaration)


State 322

  640 basic_type_declaration: "uint" .

    $default  reduce using rule 640 (basic_type_declaration)


State 323

  657 basic_type_declaration: "bitfield" .
  677 bitfield_type_declaration: "bitfield" . '<' $@47 bitfield_bits '>' $@48

    '<'  shift, and go to state 396

    $default  reduce using rule 657 (basic_type_declaration)


State 324

  644 basic_type_declaration: "uint2" .

    $default  reduce using rule 644 (basic_type_declaration)


State 325

  645 basic_type_declaration: "uint3" .

    $default  reduce using rule 645 (basic_type_declaration)


State 326

  646 basic_type_declaration: "uint4" .

    $default  reduce using rule 646 (basic_type_declaration)


State 327

  647 basic_type_declaration: "float" .

    $default  reduce using rule 647 (basic_type_declaration)


State 328

  648 basic_type_declaration: "float2" .

    $default  reduce using rule 648 (basic_type_declaration)


State 329

  649 basic_type_declaration: "float3" .

    $default  reduce using rule 649 (basic_type_declaration)


State 330

  650 basic_type_declaration: "float4" .

    $default  reduce using rule 650 (basic_type_declaration)


State 331

  652 basic_type_declaration: "range" .

    $default  reduce using rule 652 (basic_type_declaration)


State 332

  653 basic_type_declaration: "urange" .

    $default  reduce using rule 653 (basic_type_declaration)


State 333

  654 basic_type_declaration: "range64" .

    $default  reduce using rule 654 (basic_type_declaration)


State 334

  655 basic_type_declaration: "urange64" .

    $default  reduce using rule 655 (basic_type_declaration)


State 335

  720 type_declaration_no_options: "block" .
  723                            | "block" . '<' $@60 type_declaration '>' $@61
  726                            | "block" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 397

    $default  reduce using rule 720 (type_declaration_no_options)


State 336

  636 basic_type_declaration: "int64" .

    $default  reduce using rule 636 (basic_type_declaration)


State 337

  643 basic_type_declaration: "uint64" .

    $default  reduce using rule 643 (basic_type_declaration)


State 338

  656 basic_type_declaration: "double" .

    $default  reduce using rule 656 (basic_type_declaration)


State 339

  727 type_declaration_no_options: "function" .
  730                            | "function" . '<' $@64 type_declaration '>' $@65
  733                            | "function" . '<' $@66 optional_function_argument_list optional_function_type '>' $@67

    '<'  shift, and go to state 398

    $default  reduce using rule 727 (type_declaration_no_options)


State 340

  734 type_declaration_no_options: "lambda" .
  737                            | "lambda" . '<' $@68 type_declaration '>' $@69
  740                            | "lambda" . '<' $@70 optional_function_argument_list optional_function_type '>' $@71

    '<'  shift, and go to state 399

    $default  reduce using rule 734 (type_declaration_no_options)


State 341

  634 basic_type_declaration: "int8" .

    $default  reduce using rule 634 (basic_type_declaration)


State 342

  641 basic_type_declaration: "uint8" .

    $default  reduce using rule 641 (basic_type_declaration)


State 343

  635 basic_type_declaration: "int16" .

    $default  reduce using rule 635 (basic_type_declaration)


State 344

  642 basic_type_declaration: "uint16" .

    $default  reduce using rule 642 (basic_type_declaration)


State 345

  743 type_declaration_no_options: "tuple" . '<' $@72 tuple_type_list '>' $@73

    '<'  shift, and go to state 400


State 346

  746 type_declaration_no_options: "variant" . '<' $@74 variant_type_list '>' $@75

    '<'  shift, and go to state 401


State 347

  669 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 402


State 348

  692 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  694                            | '$' . name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "name"  shift, and go to state 58

    name_in_namespace  go to state 403


State 349

  666 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 666 (structure_type_declaration)


State 350

  682 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 682 (type_declaration_no_options)


State 351

  685 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 685 (type_declaration_no_options)


State 352

  683 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 683 (type_declaration_no_options)


State 353

  684 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 684 (type_declaration_no_options)


State 354

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  747 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    $default  reduce using rule 747 (type_declaration)

    dim_list  go to state 414


State 355

  595 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415

    $default  reduce using rule 595 (single_alias)


State 356

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 . bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 672 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 416


State 357

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 . tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 544 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 417


State 358

  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 . variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 550 (variant_alias_type_list)

    variant_alias_type_list  go to state 418


State 359

  182 function_name: "operator" "is" "name" .

    $default  reduce using rule 182 (function_name)


State 360

  183 function_name: "operator" "as" "name" .

    $default  reduce using rule 183 (function_name)


State 361

  176 function_name: "operator" "?." "name" .

    $default  reduce using rule 176 (function_name)


State 362

  171 function_name: "operator" "?[" ']' .

    $default  reduce using rule 171 (function_name)


State 363

  184 function_name: "operator" '?' "as" .
  185              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 419

    $default  reduce using rule 184 (function_name)


State 364

  174 function_name: "operator" '.' "name" .
  175              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 420

    $default  reduce using rule 174 (function_name)


State 365

  170 function_name: "operator" '[' ']' .

    $default  reduce using rule 170 (function_name)


State 366

  537 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 421


State 367

  122 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 122 (optional_function_argument_list)


State 368

  536 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 422
    "var"  shift, and go to state 423

    $default  reduce using rule 293 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 424


State 369

  538 function_argument_list: function_argument_declaration .

    $default  reduce using rule 538 (function_argument_list)


State 370

  123 optional_function_argument_list: '(' function_argument_list . ')'
  539 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 425
    ')'                  shift, and go to state 426


State 371

  125 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 427


State 372

  215 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 215 (function_declaration_header)


State 373

  218 expression_block: "begin of code block" expressions . "end of code block"
  219                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  244 expressions: expressions . expression_any
  245            | expressions . error

    error                             shift, and go to state 428
    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 431
    "if"                              shift, and go to state 432
    "static_if"                       shift, and go to state 433
    "for"                             shift, and go to state 434
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "return"                          shift, and go to state 441
    "null"                            shift, and go to state 442
    "break"                           shift, and go to state 443
    "try"                             shift, and go to state 444
    "table"                           shift, and go to state 445
    "delete"                          shift, and go to state 446
    "deref"                           shift, and go to state 447
    "with"                            shift, and go to state 448
    "assume"                          shift, and go to state 449
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 452
    "continue"                        shift, and go to state 453
    "pass"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 455
    "label"                           shift, and go to state 456
    "goto"                            shift, and go to state 457
    "unsafe"                          shift, and go to state 458
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "yield"                           shift, and go to state 465
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 468
    "@ <|"                            shift, and go to state 469
    "@@ <|"                           shift, and go to state 470
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 488
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    "end of code block"               shift, and go to state 492
    "end of expression"               shift, and go to state 493
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder             go to state 503
    expr_reader                go to state 504
    expression_label           go to state 505
    expression_goto            go to state 506
    if_or_static_if            go to state 507
    expression_if_one_liner    go to state 508
    expression_if_then_else    go to state 509
    expression_for_loop        go to state 510
    expression_unsafe          go to state 511
    expression_while_loop      go to state 512
    expression_with            go to state 513
    expression_with_alias      go to state 514
    expr_call_pipe             go to state 515
    expression_any             go to state 516
    expr_keyword               go to state 517
    expression_keyword         go to state 518
    expr_pipe                  go to state 519
    name_in_namespace          go to state 520
    expression_delete          go to state 521
    expr_new                   go to state 522
    expression_break           go to state 523
    expression_continue        go to state 524
    expression_return_no_pipe  go to state 525
    expression_return          go to state 526
    expression_yield_no_pipe   go to state 527
    expression_yield           go to state 528
    expression_try_catch       go to state 529
    kwd_let                    go to state 530
    expression_let             go to state 531
    expr_cast                  go to state 532
    expr_type_decl             go to state 533
    expr_type_info             go to state 534
    block_or_lambda            go to state 535
    expr_full_block            go to state 536
    expr_numeric_const         go to state 537
    expr_assign                go to state 538
    expr_assign_pipe           go to state 539
    expr_named_call            go to state 540
    expr_method_call           go to state 541
    func_addr_expr             go to state 542
    expr_field                 go to state 543
    expr_call                  go to state 544
    expr                       go to state 545
    expr_mtag                  go to state 546
    basic_type_declaration     go to state 547
    make_decl                  go to state 548
    make_struct_decl           go to state 549
    make_tuple_call            go to state 550
    make_dim_decl              go to state 551
    make_table_decl            go to state 552
    array_comprehension        go to state 553


State 374

  588 enum_list: enum_list . "end of expression"
  589          | enum_list . "name" "end of expression"
  590          | enum_list . "name" '=' expr "end of expression"
  607 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list . $@42 "end of code block"

    "name"               shift, and go to state 554
    "end of expression"  shift, and go to state 555

    $default  reduce using rule 606 ($@42)

    $@42  go to state 556


State 375

  610 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" . $@43 enum_list $@44 "end of code block"

    $default  reduce using rule 608 ($@43)

    $@43  go to state 557


State 376

  612 optional_structure_parent: ':' . name_in_namespace

    "name"  shift, and go to state 58

    name_in_namespace  go to state 558


State 377

  615 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 615 (structure_name)


State 378

  622 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 528 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 559


State 379

  625 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list .

    $default  reduce using rule 625 (structure_declaration)


State 380

  578 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 303
    "name"  shift, and go to state 304

    let_variable_name_with_pos_list  go to state 305
    let_variable_declaration         go to state 560


State 381

  515 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 561


State 382

  104 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 104 (metadata_argument_list)


State 383

  567 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 565
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 384

  568 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 566


State 385

  569 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  570                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 567


State 386

  571 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  572                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  573                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 568


State 387

  565 optional_ref: '&' .

    $default  reduce using rule 565 (optional_ref)


State 388

  574 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  575                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 569
    ":="  shift, and go to state 570
    '='   shift, and go to state 571

    copy_or_move_or_clone  go to state 572


State 389

  690 type_declaration_no_options: "type" '<' . $@49 type_declaration '>' $@50

    $default  reduce using rule 688 ($@49)

    $@49  go to state 573


State 390

  713 type_declaration_no_options: "array" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 711 ($@54)

    $@54  go to state 574


State 391

  716 type_declaration_no_options: "table" '<' . $@56 table_type_pair '>' $@57

    $default  reduce using rule 714 ($@56)

    $@56  go to state 575


State 392

  691 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 576
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 393

  719 type_declaration_no_options: "iterator" '<' . $@58 type_declaration '>' $@59

    $default  reduce using rule 717 ($@58)

    $@58  go to state 577


State 394

  709 type_declaration_no_options: "smart_ptr" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 707 ($@52)

    $@52  go to state 578


State 395

  668 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 579


State 396

  677 bitfield_type_declaration: "bitfield" '<' . $@47 bitfield_bits '>' $@48

    $default  reduce using rule 675 ($@47)

    $@47  go to state 580


State 397

  723 type_declaration_no_options: "block" '<' . $@60 type_declaration '>' $@61
  726                            | "block" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 724 ($@62)
    '>'       reduce using rule 724 ($@62)
    '('       reduce using rule 724 ($@62)
    $default  reduce using rule 721 ($@60)

    $@60  go to state 581
    $@62  go to state 582


State 398

  730 type_declaration_no_options: "function" '<' . $@64 type_declaration '>' $@65
  733                            | "function" '<' . $@66 optional_function_argument_list optional_function_type '>' $@67

    ':'       reduce using rule 731 ($@66)
    '>'       reduce using rule 731 ($@66)
    '('       reduce using rule 731 ($@66)
    $default  reduce using rule 728 ($@64)

    $@64  go to state 583
    $@66  go to state 584


State 399

  737 type_declaration_no_options: "lambda" '<' . $@68 type_declaration '>' $@69
  740                            | "lambda" '<' . $@70 optional_function_argument_list optional_function_type '>' $@71

    ':'       reduce using rule 738 ($@70)
    '>'       reduce using rule 738 ($@70)
    '('       reduce using rule 738 ($@70)
    $default  reduce using rule 735 ($@68)

    $@68  go to state 585
    $@70  go to state 586


State 400

  743 type_declaration_no_options: "tuple" '<' . $@72 tuple_type_list '>' $@73

    $default  reduce using rule 741 ($@72)

    $@72  go to state 587


State 401

  746 type_declaration_no_options: "variant" '<' . $@74 variant_type_list '>' $@75

    $default  reduce using rule 744 ($@74)

    $@74  go to state 588


State 402

  669 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 589
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 403

  692 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  694                            | '$' name_in_namespace . '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 590
    '('  shift, and go to state 591


State 404

  697 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 697 (type_declaration_no_options)


State 405

  702 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 702 (type_declaration_no_options)


State 406

  696 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 696 (type_declaration_no_options)


State 407

  704 type_declaration_no_options: type_declaration_no_options "==" . "const"
  705                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 592
    '&'      shift, and go to state 593


State 408

  710 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 710 (type_declaration_no_options)


State 409

  706 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 706 (type_declaration_no_options)


State 410

  699 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 699 (type_declaration_no_options)


State 411

  695 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  698                            | type_declaration_no_options '-' . "const"
  700                            | type_declaration_no_options '-' . '&'
  703                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 594
    '&'      shift, and go to state 595
    '['      shift, and go to state 596
    '#'      shift, and go to state 597


State 412

  680 dim_list: '[' . expr ']'
  687 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    ']'                               shift, and go to state 598
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 599
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 413

  701 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 701 (type_declaration_no_options)


State 414

  681 dim_list: dim_list . '[' expr ']'
  686 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 600

    '['       [reduce using rule 686 (type_declaration_no_options)]
    $default  reduce using rule 686 (type_declaration_no_options)


State 415

  748 type_declaration: type_declaration '|' . type_declaration_no_options
  749                 | type_declaration '|' . '#'

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348
    '#'          shift, and go to state 601

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 602


State 416

  673 bitfield_alias_bits: bitfield_alias_bits . "end of expression"
  674                    | bitfield_alias_bits . "name" "end of expression"
  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits . $@87 "end of code block"

    "name"               shift, and go to state 603
    "end of expression"  shift, and go to state 604

    $default  reduce using rule 763 ($@87)

    $@87  go to state 605


State 417

  545 tuple_alias_type_list: tuple_alias_type_list . "end of expression"
  546                      | tuple_alias_type_list . tuple_type "end of expression"
  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list . $@79 "end of code block"

    "type"               shift, and go to state 308
    "array"              shift, and go to state 309
    "table"              shift, and go to state 310
    "typedecl"           shift, and go to state 311
    "iterator"           shift, and go to state 312
    "smart_ptr"          shift, and go to state 313
    "bool"               shift, and go to state 314
    "void"               shift, and go to state 315
    "string"             shift, and go to state 316
    "auto"               shift, and go to state 317
    "int"                shift, and go to state 318
    "int2"               shift, and go to state 319
    "int3"               shift, and go to state 320
    "int4"               shift, and go to state 321
    "uint"               shift, and go to state 322
    "bitfield"           shift, and go to state 323
    "uint2"              shift, and go to state 324
    "uint3"              shift, and go to state 325
    "uint4"              shift, and go to state 326
    "float"              shift, and go to state 327
    "float2"             shift, and go to state 328
    "float3"             shift, and go to state 329
    "float4"             shift, and go to state 330
    "range"              shift, and go to state 331
    "urange"             shift, and go to state 332
    "range64"            shift, and go to state 333
    "urange64"           shift, and go to state 334
    "block"              shift, and go to state 335
    "int64"              shift, and go to state 336
    "uint64"             shift, and go to state 337
    "double"             shift, and go to state 338
    "function"           shift, and go to state 339
    "lambda"             shift, and go to state 340
    "int8"               shift, and go to state 341
    "uint8"              shift, and go to state 342
    "int16"              shift, and go to state 343
    "uint16"             shift, and go to state 344
    "tuple"              shift, and go to state 345
    "variant"            shift, and go to state 346
    "$t"                 shift, and go to state 347
    "name"               shift, and go to state 606
    "end of expression"  shift, and go to state 607
    '$'                  shift, and go to state 348

    $default  reduce using rule 753 ($@79)

    name_in_namespace            go to state 349
    tuple_type                   go to state 608
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 609
    $@79                         go to state 610


State 418

  551 variant_alias_type_list: variant_alias_type_list . "end of expression"
  552                        | variant_alias_type_list . variant_type "end of expression"
  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list . $@83 "end of code block"

    "name"               shift, and go to state 611
    "end of expression"  shift, and go to state 612

    $default  reduce using rule 758 ($@83)

    variant_type  go to state 613
    $@83          go to state 614


State 419

  185 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 185 (function_name)


State 420

  175 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 175 (function_name)


State 421

  537 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 615
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 422

  291 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 291 (kwd_let_var_or_nothing)


State 423

  292 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 292 (kwd_let_var_or_nothing)


State 424

  536 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 616
    "name"  shift, and go to state 617

    variable_declaration         go to state 618
    variable_name_with_pos_list  go to state 619


State 425

  539 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 366
    "[["  shift, and go to state 216
    '@'   shift, and go to state 217

    $default  reduce using rule 514 (optional_field_annotation)

    metadata_argument_list         go to state 218
    optional_field_annotation      go to state 368
    function_argument_declaration  go to state 620


State 426

  123 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 123 (optional_function_argument_list)


State 427

  125 optional_function_type: ':' type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415

    $default  reduce using rule 125 (optional_function_type)


State 428

  245 expressions: expressions error .

    $default  reduce using rule 245 (expressions)


State 429

  805 make_struct_decl: "struct" . '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 621


State 430

  808 make_struct_decl: "class" . '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 622


State 431

   78 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 623
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 432

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 433

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 434

   76 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 75 ($@4)

    $@4  go to state 624


State 435

  420 expr: "true" .

    $default  reduce using rule 420 (expr)


State 436

  421 expr: "false" .

    $default  reduce using rule 421 (expr)


State 437

  272 expr_new: "new" . new_type_declaration
  273         | "new" . new_type_declaration '(' use_initializer ')'
  274         | "new" . new_type_declaration '(' expr_list ')'
  275         | "new" . new_type_declaration '(' use_initializer make_struct_single ')'
  276         | "new" . make_decl

    "struct"               shift, and go to state 429
    "class"                shift, and go to state 430
    "array"                shift, and go to state 440
    "table"                shift, and go to state 445
    "fixed_array"          shift, and go to state 459
    "default"              shift, and go to state 460
    "tuple"                shift, and go to state 462
    "variant"              shift, and go to state 463
    "[["                   shift, and go to state 478
    "[{"                   shift, and go to state 479
    "{{"                   shift, and go to state 480
    "name"                 shift, and go to state 58
    "begin of code block"  shift, and go to state 491
    '<'                    shift, and go to state 625
    '['                    shift, and go to state 499

    name_in_namespace           go to state 349
    new_type_declaration        go to state 626
    structure_type_declaration  go to state 627
    make_decl                   go to state 628
    make_struct_decl            go to state 549
    make_tuple_call             go to state 550
    make_dim_decl               go to state 551
    make_table_decl             go to state 552
    array_comprehension         go to state 553


State 438

  318 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  319               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  320               | "typeinfo" . '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    '('  shift, and go to state 629


State 439

  317 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 630


State 440

  831 make_dim_decl: "array" . "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim ')'
  834              | "array" . "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim ')'
  837              | "array" . "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_struct_dim ')'
  838              | "array" . '(' expr_list optional_comma ')'
  841              | "array" . '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')'

    "struct"   shift, and go to state 631
    "tuple"    shift, and go to state 632
    "variant"  shift, and go to state 633
    '<'        shift, and go to state 634
    '('        shift, and go to state 635


State 441

  279 expression_return_no_pipe: "return" .
  280                          | "return" . expr_list
  281                          | "return" . "<-" expr_list
  283 expression_return: "return" . expr_pipe
  284                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "<-"                              shift, and go to state 636
    "$ <|"                            shift, and go to state 468
    "@ <|"                            shift, and go to state 469
    "@@ <|"                           shift, and go to state 470
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    $default  reduce using rule 279 (expression_return_no_pipe)

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 515
    expression_keyword      go to state 518
    expr_pipe               go to state 637
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 638
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign             go to state 639
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 640
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 442

  414 expr: "null" .

    $default  reduce using rule 414 (expr)


State 443

  277 expression_break: "break" .

    $default  reduce using rule 277 (expression_break)


State 444

  290 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 641


State 445

  852 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  853                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  854                | "table" . '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 642
    '('  shift, and go to state 643


State 446

  266 expression_delete: "delete" . expr
  267                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "explicit"                        shift, and go to state 644
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 645
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 447

  464 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 646


State 448

   79 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 647
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 449

   81 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 648


State 450

  308 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 649


State 451

  311 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 650


State 452

  465 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 651


State 453

  278 expression_continue: "continue" .

    $default  reduce using rule 278 (expression_continue)


State 454

  242 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 652


State 455

  314 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 653


State 456

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 654


State 457

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "label"                           shift, and go to state 655
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 656
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 458

   77 expression_unsafe: "unsafe" . expression_block
  496 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 284
    '('                    shift, and go to state 657

    expression_block  go to state 658


State 459

  842 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  845              | "fixed_array" . '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 659
    '('  shift, and go to state 660


State 460

  814 make_struct_decl: "default" . '<' $@94 type_declaration_no_options '>' $@95 use_initializer

    '<'  shift, and go to state 661


State 461

  657 basic_type_declaration: "bitfield" .

    $default  reduce using rule 657 (basic_type_declaration)


State 462

  820 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  823                | "tuple" . '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 662
    '('  shift, and go to state 663


State 463

  811 make_struct_decl: "variant" . '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    '<'  shift, and go to state 664


State 464

  466 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  467     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 665


State 465

  285 expression_yield_no_pipe: "yield" . expr
  286                         | "yield" . "<-" expr
  288 expression_yield: "yield" . expr_pipe
  289                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "<-"                              shift, and go to state 666
    "$ <|"                            shift, and go to state 468
    "@ <|"                            shift, and go to state 469
    "@@ <|"                           shift, and go to state 470
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 515
    expression_keyword      go to state 518
    expr_pipe               go to state 667
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign             go to state 639
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 668
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 466

  450 expr: "++" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 669
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 467

  451 expr: "--" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 670
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 468

  262 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 501
    '@'                    shift, and go to state 671

    expression_block  go to state 672
    block_or_lambda   go to state 673
    expr_block        go to state 674


State 469

  260 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 501
    '@'                    shift, and go to state 671

    expression_block  go to state 672
    block_or_lambda   go to state 673
    expr_block        go to state 675


State 470

  261 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 501
    '@'                    shift, and go to state 671

    expression_block  go to state 672
    block_or_lambda   go to state 673
    expr_block        go to state 676


State 471

  498 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 677


State 472

  499 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 678


State 473

  500 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 679


State 474

  501 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 680


State 475

  502 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 681


State 476

  504 expr_mtag: "$c" . '(' expr ')' '(' ')'
  505          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 682


State 477

  503 expr_mtag: "..." .

    $default  reduce using rule 503 (expr_mtag)


State 478

  797 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  798                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  799                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  800                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  827 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  861 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 683
    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 684


State 479

  801 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  802                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  828 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  862 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 685
    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 686


State 480

  851 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  864 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "for"                             shift, and go to state 687
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 688
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_map_tuple          go to state 689
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table              go to state 690
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 481

  342 expr_numeric_const: "integer constant" .

    $default  reduce using rule 342 (expr_numeric_const)


State 482

  344 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 344 (expr_numeric_const)


State 483

  343 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 343 (expr_numeric_const)


State 484

  345 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 345 (expr_numeric_const)


State 485

  346 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 346 (expr_numeric_const)


State 486

  347 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 347 (expr_numeric_const)


State 487

  348 expr_numeric_const: "double constant" .

    $default  reduce using rule 348 (expr_numeric_const)


State 488

  246 expr_keyword: "keyword" . expr expression_block
  255 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '<'                               shift, and go to state 691
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 692
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 489

  258 expression_keyword: "type function" . '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    '<'  shift, and go to state 693


State 490

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 694


State 491

  850 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  863 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "for"                             shift, and go to state 695
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 688
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_map_tuple          go to state 696
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    expr_map_tuple_list     go to state 697
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 492

  218 expression_block: "begin of code block" expressions "end of code block" .
  219                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 698

    $default  reduce using rule 218 (expression_block)


State 493

  222 expression_any: "end of expression" .

    $default  reduce using rule 222 (expression_any)


State 494

  427 expr: '-' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 699
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 495

  426 expr: '+' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 700
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 496

  463 expr: '*' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 701
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 497

  425 expr: '~' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 702
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 498

  424 expr: '!' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 703
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 499

  826 make_dim_decl: '[' . expr_list optional_comma ']'
  859 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  860                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "for"                             shift, and go to state 704
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "iterator"                        shift, and go to state 705
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 706
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 500

  454 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 708
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 501

  326 block_or_lambda: '$' .

    $default  reduce using rule 326 (block_or_lambda)


State 502

  327 block_or_lambda: '@' .
  328                | '@' . '@'
  395 func_addr_expr: '@' . '@' func_addr_name
  398               | '@' . '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  401               | '@' . '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  513 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 709

    $default  reduce using rule 327 (block_or_lambda)


State 503

  418 expr: string_builder .

    $default  reduce using rule 418 (expr)


State 504

  417 expr: expr_reader .

    $default  reduce using rule 417 (expr)


State 505

  240 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 710


State 506

  241 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 711


State 507

   72 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 712
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 508

   74 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 713


State 509

  238 expression_any: expression_if_then_else .

    $default  reduce using rule 238 (expression_any)


State 510

  233 expression_any: expression_for_loop .

    $default  reduce using rule 233 (expression_any)


State 511

  230 expression_any: expression_unsafe .

    $default  reduce using rule 230 (expression_any)


State 512

  229 expression_any: expression_while_loop .

    $default  reduce using rule 229 (expression_any)


State 513

  231 expression_any: expression_with .

    $default  reduce using rule 231 (expression_any)


State 514

  232 expression_any: expression_with_alias .

    $default  reduce using rule 232 (expression_any)


State 515

  263 expr_pipe: expr_call_pipe .

    $default  reduce using rule 263 (expr_pipe)


State 516

  244 expressions: expressions expression_any .

    $default  reduce using rule 244 (expressions)


State 517

  224 expression_any: expr_keyword .

    $default  reduce using rule 224 (expression_any)


State 518

  221 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  497 expr: expression_keyword .

    '$'  shift, and go to state 501
    '@'  shift, and go to state 671

    '$'       [reduce using rule 497 (expr)]
    '@'       [reduce using rule 497 (expr)]
    $default  reduce using rule 497 (expr)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 715


State 519

  223 expression_any: expr_pipe .

    $default  reduce using rule 223 (expression_any)


State 520

  389 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  390                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  409 expr_call: name_in_namespace . '(' ')'
  410          | name_in_namespace . '(' make_struct_single ')'
  411          | name_in_namespace . '(' expr_list ')'
  415 expr: name_in_namespace .
  495     | name_in_namespace . "name"

    "name"  shift, and go to state 716
    '('     shift, and go to state 717

    "name"    [reduce using rule 415 (expr)]
    '('       [reduce using rule 415 (expr)]
    $default  reduce using rule 415 (expr)


State 521

  227 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 718


State 522

  488 expr: expr_new .

    $default  reduce using rule 488 (expr)


State 523

   70 expression_if_one_liner: expression_break .
  234 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 719

    $default  reduce using rule 70 (expression_if_one_liner)


State 524

   71 expression_if_one_liner: expression_continue .
  235 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 720

    $default  reduce using rule 71 (expression_if_one_liner)


State 525

   68 expression_if_one_liner: expression_return_no_pipe .
  282 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 721

    $default  reduce using rule 68 (expression_if_one_liner)


State 526

  236 expression_any: expression_return .

    $default  reduce using rule 236 (expression_any)


State 527

   69 expression_if_one_liner: expression_yield_no_pipe .
  287 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 722

    $default  reduce using rule 69 (expression_if_one_liner)


State 528

  237 expression_any: expression_yield .

    $default  reduce using rule 237 (expression_any)


State 529

  239 expression_any: expression_try_catch .

    $default  reduce using rule 239 (expression_any)


State 530

  304 expression_let: kwd_let . optional_in_scope let_variable_declaration
  305               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 723

    $default  reduce using rule 297 (optional_in_scope)

    optional_in_scope  go to state 724


State 531

  228 expression_any: expression_let .

    $default  reduce using rule 228 (expression_any)


State 532

  487 expr: expr_cast .

    $default  reduce using rule 487 (expr)


State 533

  486 expr: expr_type_decl .

    $default  reduce using rule 486 (expr)


State 534

  485 expr: expr_type_info .

    $default  reduce using rule 485 (expr)


State 535

  339 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    optional_annotation_list  go to state 725


State 536

  491 expr: expr_full_block .

    $default  reduce using rule 491 (expr)


State 537

  416 expr: expr_numeric_const .

    $default  reduce using rule 416 (expr)


State 538

  226 expression_any: expr_assign . "end of expression"
  259 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 726
    "end of expression"  shift, and go to state 727


State 539

  225 expression_any: expr_assign_pipe .

    $default  reduce using rule 225 (expression_any)


State 540

  490 expr: expr_named_call .

    $default  reduce using rule 490 (expr)


State 541

  489 expr: expr_method_call .

    $default  reduce using rule 489 (expr)


State 542

  461 expr: func_addr_expr .

    $default  reduce using rule 461 (expr)


State 543

  422 expr: expr_field .

    $default  reduce using rule 422 (expr)


State 544

  462 expr: expr_call .

    $default  reduce using rule 462 (expr)


State 545

   67 expression_if_one_liner: expr .
  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  349 expr_assign: expr .
  350            | expr . '=' expr
  351            | expr . "<-" expr
  352            | expr . ":=" expr
  353            | expr . "&=" expr
  354            | expr . "|=" expr
  355            | expr . "^=" expr
  356            | expr . "&&=" expr
  357            | expr . "||=" expr
  358            | expr . "^^=" expr
  359            | expr . "+=" expr
  360            | expr . "-=" expr
  361            | expr . "*=" expr
  362            | expr . "/=" expr
  363            | expr . "%=" expr
  364            | expr . "<<=" expr
  365            | expr . ">>=" expr
  366            | expr . "<<<=" expr
  367            | expr . ">>>=" expr
  372 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  373                 | expr . "<-" expr_assign_pipe_right
  374                 | expr . "&=" expr_assign_pipe_right
  375                 | expr . "|=" expr_assign_pipe_right
  376                 | expr . "^=" expr_assign_pipe_right
  377                 | expr . "&&=" expr_assign_pipe_right
  378                 | expr . "||=" expr_assign_pipe_right
  379                 | expr . "^^=" expr_assign_pipe_right
  380                 | expr . "+=" expr_assign_pipe_right
  381                 | expr . "-=" expr_assign_pipe_right
  382                 | expr . "*=" expr_assign_pipe_right
  383                 | expr . "/=" expr_assign_pipe_right
  384                 | expr . "%=" expr_assign_pipe_right
  385                 | expr . "<<=" expr_assign_pipe_right
  386                 | expr . ">>=" expr_assign_pipe_right
  387                 | expr . "<<<=" expr_assign_pipe_right
  388                 | expr . ">>>=" expr_assign_pipe_right
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 728
    "as"    shift, and go to state 729
    "+="    shift, and go to state 730
    "-="    shift, and go to state 731
    "/="    shift, and go to state 732
    "*="    shift, and go to state 733
    "%="    shift, and go to state 734
    "&="    shift, and go to state 735
    "|="    shift, and go to state 736
    "^="    shift, and go to state 737
    "<<"    shift, and go to state 738
    ">>"    shift, and go to state 739
    "++"    shift, and go to state 740
    "--"    shift, and go to state 741
    "<="    shift, and go to state 742
    "<<="   shift, and go to state 743
    ">>="   shift, and go to state 744
    ">="    shift, and go to state 745
    "=="    shift, and go to state 746
    "!="    shift, and go to state 747
    "->"    shift, and go to state 748
    "<-"    shift, and go to state 749
    "??"    shift, and go to state 750
    "?."    shift, and go to state 751
    "?["    shift, and go to state 752
    "<|"    shift, and go to state 753
    "|>"    shift, and go to state 754
    ":="    shift, and go to state 755
    "<<<"   shift, and go to state 756
    ">>>"   shift, and go to state 757
    "<<<="  shift, and go to state 758
    ">>>="  shift, and go to state 759
    "&&"    shift, and go to state 760
    "||"    shift, and go to state 761
    "^^"    shift, and go to state 762
    "&&="   shift, and go to state 763
    "||="   shift, and go to state 764
    "^^="   shift, and go to state 765
    ".."    shift, and go to state 766
    '='     shift, and go to state 767
    '?'     shift, and go to state 768
    '|'     shift, and go to state 769
    '^'     shift, and go to state 770
    '&'     shift, and go to state 771
    '<'     shift, and go to state 772
    '>'     shift, and go to state 773
    '-'     shift, and go to state 774
    '+'     shift, and go to state 775
    '*'     shift, and go to state 776
    '/'     shift, and go to state 777
    '%'     shift, and go to state 778
    '.'     shift, and go to state 779
    '['     shift, and go to state 780
    '$'     shift, and go to state 501
    '@'     shift, and go to state 671

    "if"      reduce using rule 67 (expression_if_one_liner)
    $default  reduce using rule 349 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 546

  423 expr: expr_mtag .

    $default  reduce using rule 423 (expr)


State 547

  412 expr_call: basic_type_declaration . '(' ')'
  413          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 782


State 548

  419 expr: make_decl .

    $default  reduce using rule 419 (expr)


State 549

  765 make_decl: make_struct_decl .

    $default  reduce using rule 765 (make_decl)


State 550

  769 make_decl: make_tuple_call .

    $default  reduce using rule 769 (make_decl)


State 551

  766 make_decl: make_dim_decl .

    $default  reduce using rule 766 (make_decl)


State 552

  767 make_decl: make_table_decl .

    $default  reduce using rule 767 (make_decl)


State 553

  768 make_decl: array_comprehension .

    $default  reduce using rule 768 (make_decl)


State 554

  589 enum_list: enum_list "name" . "end of expression"
  590          | enum_list "name" . '=' expr "end of expression"

    "end of expression"  shift, and go to state 783
    '='                  shift, and go to state 784


State 555

  588 enum_list: enum_list "end of expression" .

    $default  reduce using rule 588 (enum_list)


State 556

  607 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 . "end of code block"

    "end of code block"  shift, and go to state 785


State 557

  610 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 . enum_list $@44 "end of code block"

    $default  reduce using rule 587 (enum_list)

    enum_list  go to state 786


State 558

  612 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 612 (optional_structure_parent)


State 559

  530 struct_variable_declaration_list: struct_variable_declaration_list . $@34 structure_variable_declaration "end of expression"
  532                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  534                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  535                                 | struct_variable_declaration_list . '[' annotation_list ']' "end of expression"
  622 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 787
    '['                  shift, and go to state 788

    "def"     reduce using rule 119 (optional_annotation_list)
    $default  reduce using rule 529 ($@34)

    optional_annotation_list  go to state 789
    $@34                      go to state 790


State 560

  578 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 578 (global_variable_declaration_list)


State 561

  515 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 515 (optional_field_annotation)


State 562

  496 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 657


State 563

  255 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    '<'  shift, and go to state 691


State 564

  497 expr: expression_keyword .

    $default  reduce using rule 497 (expr)


State 565

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  567 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 791


State 566

  568 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 568 (let_variable_name_with_pos_list)


State 567

  569 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  570                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 792

    $default  reduce using rule 569 (let_variable_name_with_pos_list)


State 568

  571 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  572                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  573                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 404
    "implicit"           shift, and go to state 405
    "explicit"           shift, and go to state 406
    "=="                 shift, and go to state 407
    "<-"                 shift, and go to state 569
    "??"                 shift, and go to state 408
    ":="                 shift, and go to state 570
    "end of expression"  shift, and go to state 793
    '='                  shift, and go to state 571
    '?'                  shift, and go to state 409
    '&'                  shift, and go to state 410
    '-'                  shift, and go to state 411
    '['                  shift, and go to state 412
    '#'                  shift, and go to state 413

    copy_or_move_or_clone  go to state 794
    dim_list               go to state 414


State 569

  562 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 562 (copy_or_move_or_clone)


State 570

  563 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 563 (copy_or_move_or_clone)


State 571

  561 copy_or_move_or_clone: '=' .

    $default  reduce using rule 561 (copy_or_move_or_clone)


State 572

  574 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  575                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 468
    "@ <|"                            shift, and go to state 469
    "@@ <|"                           shift, and go to state 470
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 515
    expression_keyword      go to state 518
    expr_pipe               go to state 795
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign             go to state 639
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 796
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 573

  690 type_declaration_no_options: "type" '<' $@49 . type_declaration '>' $@50

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 797


State 574

  713 type_declaration_no_options: "array" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 798


State 575

  716 type_declaration_no_options: "table" '<' $@56 . table_type_pair '>' $@57

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    table_type_pair              go to state 799
    type_declaration_no_options  go to state 354
    type_declaration             go to state 800


State 576

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  691 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 801


State 577

  719 type_declaration_no_options: "iterator" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 802


State 578

  709 type_declaration_no_options: "smart_ptr" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 803


State 579

  668 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 804


State 580

  677 bitfield_type_declaration: "bitfield" '<' $@47 . bitfield_bits '>' $@48

    "name"  shift, and go to state 805

    bitfield_bits  go to state 806


State 581

  723 type_declaration_no_options: "block" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 807


State 582

  726 type_declaration_no_options: "block" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 282

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 808


State 583

  730 type_declaration_no_options: "function" '<' $@64 . type_declaration '>' $@65

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 809


State 584

  733 type_declaration_no_options: "function" '<' $@66 . optional_function_argument_list optional_function_type '>' $@67

    '('  shift, and go to state 282

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 810


State 585

  737 type_declaration_no_options: "lambda" '<' $@68 . type_declaration '>' $@69

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 811


State 586

  740 type_declaration_no_options: "lambda" '<' $@70 . optional_function_argument_list optional_function_type '>' $@71

    '('  shift, and go to state 282

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 812


State 587

  743 type_declaration_no_options: "tuple" '<' $@72 . tuple_type_list '>' $@73

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 606
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    tuple_type                   go to state 813
    tuple_type_list              go to state 814
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 609


State 588

  746 type_declaration_no_options: "variant" '<' $@74 . variant_type_list '>' $@75

    "name"  shift, and go to state 611

    variant_type       go to state 815
    variant_type_list  go to state 816


State 589

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  669 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 817


State 590

  694 type_declaration_no_options: '$' name_in_namespace '<' . $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 693 ($@51)

    $@51  go to state 818


State 591

  692 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    $default  reduce using rule 247 (optional_expr_list)

    string_builder          go to state 503
    expr_reader             go to state 504
    optional_expr_list      go to state 819
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 820
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 592

  704 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 704 (type_declaration_no_options)


State 593

  705 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 705 (type_declaration_no_options)


State 594

  698 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 698 (type_declaration_no_options)


State 595

  700 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 700 (type_declaration_no_options)


State 596

  695 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 821


State 597

  703 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 703 (type_declaration_no_options)


State 598

  687 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 687 (type_declaration_no_options)


State 599

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  680 dim_list: '[' expr . ']'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ']'    shift, and go to state 822


State 600

  681 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 823
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 601

  749 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 749 (type_declaration)


State 602

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  748 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    $default  reduce using rule 748 (type_declaration)

    dim_list  go to state 414


State 603

  674 bitfield_alias_bits: bitfield_alias_bits "name" . "end of expression"

    "end of expression"  shift, and go to state 824


State 604

  673 bitfield_alias_bits: bitfield_alias_bits "end of expression" .

    $default  reduce using rule 673 (bitfield_alias_bits)


State 605

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 . "end of code block"

    "end of code block"  shift, and go to state 825


State 606

  264 name_in_namespace: "name" .
  265                  | "name" . "::" "name"
  541 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 96
    ':'   shift, and go to state 826

    $default  reduce using rule 264 (name_in_namespace)


State 607

  545 tuple_alias_type_list: tuple_alias_type_list "end of expression" .

    $default  reduce using rule 545 (tuple_alias_type_list)


State 608

  546 tuple_alias_type_list: tuple_alias_type_list tuple_type . "end of expression"

    "end of expression"  shift, and go to state 827


State 609

  540 tuple_type: type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415

    $default  reduce using rule 540 (tuple_type)


State 610

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 . "end of code block"

    "end of code block"  shift, and go to state 828


State 611

  547 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 829


State 612

  551 variant_alias_type_list: variant_alias_type_list "end of expression" .

    $default  reduce using rule 551 (variant_alias_type_list)


State 613

  552 variant_alias_type_list: variant_alias_type_list variant_type . "end of expression"

    "end of expression"  shift, and go to state 830


State 614

  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 . "end of code block"

    "end of code block"  shift, and go to state 831


State 615

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  537 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 832


State 616

  627 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 833


State 617

  626 variable_name_with_pos_list: "name" .
  628                            | "name" . "aka" "name"

    "aka"  shift, and go to state 834

    $default  reduce using rule 626 (variable_name_with_pos_list)


State 618

  536 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 536 (function_argument_declaration)


State 619

  555 variable_declaration: variable_name_with_pos_list .
  556                     | variable_name_with_pos_list . '&'
  557                     | variable_name_with_pos_list . ':' type_declaration
  558                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  559                     | variable_name_with_pos_list . copy_or_move expr
  560                     | variable_name_with_pos_list . copy_or_move expr_pipe
  629 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  630                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 835
    ','   shift, and go to state 836
    '='   shift, and go to state 837
    ':'   shift, and go to state 838
    '&'   shift, and go to state 839

    $default  reduce using rule 555 (variable_declaration)

    copy_or_move  go to state 840


State 620

  539 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 539 (function_argument_list)


State 621

  805 make_struct_decl: "struct" '<' . $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 803 ($@88)

    $@88  go to state 841


State 622

  808 make_struct_decl: "class" '<' . $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 806 ($@90)

    $@90  go to state 842


State 623

   78 expression_while_loop: "while" expr . expression_block
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 728
    "as"                   shift, and go to state 729
    "<<"                   shift, and go to state 738
    ">>"                   shift, and go to state 739
    "++"                   shift, and go to state 740
    "--"                   shift, and go to state 741
    "<="                   shift, and go to state 742
    ">="                   shift, and go to state 745
    "=="                   shift, and go to state 746
    "!="                   shift, and go to state 747
    "->"                   shift, and go to state 748
    "??"                   shift, and go to state 750
    "?."                   shift, and go to state 751
    "?["                   shift, and go to state 752
    "<|"                   shift, and go to state 753
    "|>"                   shift, and go to state 754
    "<<<"                  shift, and go to state 756
    ">>>"                  shift, and go to state 757
    "&&"                   shift, and go to state 760
    "||"                   shift, and go to state 761
    "^^"                   shift, and go to state 762
    ".."                   shift, and go to state 766
    "begin of code block"  shift, and go to state 284
    '?'                    shift, and go to state 768
    '|'                    shift, and go to state 769
    '^'                    shift, and go to state 770
    '&'                    shift, and go to state 771
    '<'                    shift, and go to state 772
    '>'                    shift, and go to state 773
    '-'                    shift, and go to state 774
    '+'                    shift, and go to state 775
    '*'                    shift, and go to state 776
    '/'                    shift, and go to state 777
    '%'                    shift, and go to state 778
    '.'                    shift, and go to state 779
    '['                    shift, and go to state 780

    expression_block  go to state 843


State 624

   76 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 616
    "name"  shift, and go to state 617

    variable_name_with_pos_list  go to state 844


State 625

  270 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 268 ($@11)

    $@11  go to state 845


State 626

  272 expr_new: "new" new_type_declaration .
  273         | "new" new_type_declaration . '(' use_initializer ')'
  274         | "new" new_type_declaration . '(' expr_list ')'
  275         | "new" new_type_declaration . '(' use_initializer make_struct_single ')'

    '('  shift, and go to state 846

    '('       [reduce using rule 272 (expr_new)]
    $default  reduce using rule 272 (expr_new)


State 627

  271 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 271 (new_type_declaration)


State 628

  276 expr_new: "new" make_decl .

    $default  reduce using rule 276 (expr_new)


State 629

  318 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  319               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  320               | "typeinfo" '(' . name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    "name"  shift, and go to state 58

    name_in_namespace  go to state 847


State 630

  317 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 315 ($@19)

    $@19  go to state 848


State 631

  831 make_dim_decl: "array" "struct" . '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 849


State 632

  834 make_dim_decl: "array" "tuple" . '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 850


State 633

  837 make_dim_decl: "array" "variant" . '<' $@102 type_declaration_no_options '>' $@103 '(' make_struct_dim ')'

    '<'  shift, and go to state 851


State 634

  841 make_dim_decl: "array" '<' . $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')'

    $default  reduce using rule 839 ($@104)

    $@104  go to state 852


State 635

  838 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 853
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 636

  281 expression_return_no_pipe: "return" "<-" . expr_list
  284 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 468
    "@ <|"                            shift, and go to state 469
    "@@ <|"                           shift, and go to state 470
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 515
    expression_keyword      go to state 518
    expr_pipe               go to state 854
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 855
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign             go to state 639
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 640
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 637

  283 expression_return: "return" expr_pipe .

    $default  reduce using rule 283 (expression_return)


State 638

  280 expression_return_no_pipe: "return" expr_list .
  322 expr_list: expr_list . ',' expr

    ','  shift, and go to state 856

    $default  reduce using rule 280 (expression_return_no_pipe)


State 639

  259 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 726


State 640

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  321 expr_list: expr .
  349 expr_assign: expr .
  350            | expr . '=' expr
  351            | expr . "<-" expr
  352            | expr . ":=" expr
  353            | expr . "&=" expr
  354            | expr . "|=" expr
  355            | expr . "^=" expr
  356            | expr . "&&=" expr
  357            | expr . "||=" expr
  358            | expr . "^^=" expr
  359            | expr . "+=" expr
  360            | expr . "-=" expr
  361            | expr . "*=" expr
  362            | expr . "/=" expr
  363            | expr . "%=" expr
  364            | expr . "<<=" expr
  365            | expr . ">>=" expr
  366            | expr . "<<<=" expr
  367            | expr . ">>>=" expr
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 728
    "as"    shift, and go to state 729
    "+="    shift, and go to state 857
    "-="    shift, and go to state 858
    "/="    shift, and go to state 859
    "*="    shift, and go to state 860
    "%="    shift, and go to state 861
    "&="    shift, and go to state 862
    "|="    shift, and go to state 863
    "^="    shift, and go to state 864
    "<<"    shift, and go to state 738
    ">>"    shift, and go to state 739
    "++"    shift, and go to state 740
    "--"    shift, and go to state 741
    "<="    shift, and go to state 742
    "<<="   shift, and go to state 865
    ">>="   shift, and go to state 866
    ">="    shift, and go to state 745
    "=="    shift, and go to state 746
    "!="    shift, and go to state 747
    "->"    shift, and go to state 748
    "<-"    shift, and go to state 867
    "??"    shift, and go to state 750
    "?."    shift, and go to state 751
    "?["    shift, and go to state 752
    "<|"    shift, and go to state 753
    "|>"    shift, and go to state 754
    ":="    shift, and go to state 755
    "<<<"   shift, and go to state 756
    ">>>"   shift, and go to state 757
    "<<<="  shift, and go to state 868
    ">>>="  shift, and go to state 869
    "&&"    shift, and go to state 760
    "||"    shift, and go to state 761
    "^^"    shift, and go to state 762
    "&&="   shift, and go to state 870
    "||="   shift, and go to state 871
    "^^="   shift, and go to state 872
    ".."    shift, and go to state 766
    '='     shift, and go to state 873
    '?'     shift, and go to state 768
    '|'     shift, and go to state 769
    '^'     shift, and go to state 770
    '&'     shift, and go to state 771
    '<'     shift, and go to state 772
    '>'     shift, and go to state 773
    '-'     shift, and go to state 774
    '+'     shift, and go to state 775
    '*'     shift, and go to state 776
    '/'     shift, and go to state 777
    '%'     shift, and go to state 778
    '.'     shift, and go to state 779
    '['     shift, and go to state 780
    '$'     shift, and go to state 501
    '@'     shift, and go to state 671

    " <|"     reduce using rule 349 (expr_assign)
    $default  reduce using rule 321 (expr_list)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 641

  290 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 874


State 642

  853 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  854                | "table" '<' . type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 875


State 643

  852 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 688
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_map_tuple          go to state 696
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    expr_map_tuple_list     go to state 876
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 644

  267 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 877
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 645

  266 expression_delete: "delete" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 266 (expression_delete)


State 646

  464 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 878
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 647

   79 expression_with: "with" expr . expression_block
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 728
    "as"                   shift, and go to state 729
    "<<"                   shift, and go to state 738
    ">>"                   shift, and go to state 739
    "++"                   shift, and go to state 740
    "--"                   shift, and go to state 741
    "<="                   shift, and go to state 742
    ">="                   shift, and go to state 745
    "=="                   shift, and go to state 746
    "!="                   shift, and go to state 747
    "->"                   shift, and go to state 748
    "??"                   shift, and go to state 750
    "?."                   shift, and go to state 751
    "?["                   shift, and go to state 752
    "<|"                   shift, and go to state 753
    "|>"                   shift, and go to state 754
    "<<<"                  shift, and go to state 756
    ">>>"                  shift, and go to state 757
    "&&"                   shift, and go to state 760
    "||"                   shift, and go to state 761
    "^^"                   shift, and go to state 762
    ".."                   shift, and go to state 766
    "begin of code block"  shift, and go to state 284
    '?'                    shift, and go to state 768
    '|'                    shift, and go to state 769
    '^'                    shift, and go to state 770
    '&'                    shift, and go to state 771
    '<'                    shift, and go to state 772
    '>'                    shift, and go to state 773
    '-'                    shift, and go to state 774
    '+'                    shift, and go to state 775
    '*'                    shift, and go to state 776
    '/'                    shift, and go to state 777
    '%'                    shift, and go to state 778
    '.'                    shift, and go to state 779
    '['                    shift, and go to state 780

    expression_block  go to state 879


State 648

   81 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 880


State 649

  308 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 306 ($@13)

    $@13  go to state 881


State 650

  311 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 309 ($@15)

    $@15  go to state 882


State 651

  465 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 883
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 652

  242 expression_any: "pass" "end of expression" .

    $default  reduce using rule 242 (expression_any)


State 653

  314 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 312 ($@17)

    $@17  go to state 884


State 654

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 885


State 655

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 886


State 656

   56 expression_goto: "goto" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 56 (expression_goto)


State 657

  496 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 887
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 658

   77 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 77 (expression_unsafe)


State 659

  845 make_dim_decl: "fixed_array" '<' . $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 843 ($@106)

    $@106  go to state 888


State 660

  842 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 889
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 661

  814 make_struct_decl: "default" '<' . $@94 type_declaration_no_options '>' $@95 use_initializer

    $default  reduce using rule 812 ($@94)

    $@94  go to state 890


State 662

  823 make_tuple_call: "tuple" '<' . $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 821 ($@96)

    $@96  go to state 891


State 663

  820 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 892
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 664

  811 make_struct_decl: "variant" '<' . $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    $default  reduce using rule 809 ($@92)

    $@92  go to state 893


State 665

  466 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  467     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 894


State 666

  286 expression_yield_no_pipe: "yield" "<-" . expr
  289 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 468
    "@ <|"                            shift, and go to state 469
    "@@ <|"                           shift, and go to state 470
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 515
    expression_keyword      go to state 518
    expr_pipe               go to state 895
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign             go to state 639
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 896
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 667

  288 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 288 (expression_yield)


State 668

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  285 expression_yield_no_pipe: "yield" expr .
  349 expr_assign: expr .
  350            | expr . '=' expr
  351            | expr . "<-" expr
  352            | expr . ":=" expr
  353            | expr . "&=" expr
  354            | expr . "|=" expr
  355            | expr . "^=" expr
  356            | expr . "&&=" expr
  357            | expr . "||=" expr
  358            | expr . "^^=" expr
  359            | expr . "+=" expr
  360            | expr . "-=" expr
  361            | expr . "*=" expr
  362            | expr . "/=" expr
  363            | expr . "%=" expr
  364            | expr . "<<=" expr
  365            | expr . ">>=" expr
  366            | expr . "<<<=" expr
  367            | expr . ">>>=" expr
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 728
    "as"    shift, and go to state 729
    "+="    shift, and go to state 857
    "-="    shift, and go to state 858
    "/="    shift, and go to state 859
    "*="    shift, and go to state 860
    "%="    shift, and go to state 861
    "&="    shift, and go to state 862
    "|="    shift, and go to state 863
    "^="    shift, and go to state 864
    "<<"    shift, and go to state 738
    ">>"    shift, and go to state 739
    "++"    shift, and go to state 740
    "--"    shift, and go to state 741
    "<="    shift, and go to state 742
    "<<="   shift, and go to state 865
    ">>="   shift, and go to state 866
    ">="    shift, and go to state 745
    "=="    shift, and go to state 746
    "!="    shift, and go to state 747
    "->"    shift, and go to state 748
    "<-"    shift, and go to state 867
    "??"    shift, and go to state 750
    "?."    shift, and go to state 751
    "?["    shift, and go to state 752
    "<|"    shift, and go to state 753
    "|>"    shift, and go to state 754
    ":="    shift, and go to state 755
    "<<<"   shift, and go to state 756
    ">>>"   shift, and go to state 757
    "<<<="  shift, and go to state 868
    ">>>="  shift, and go to state 869
    "&&"    shift, and go to state 760
    "||"    shift, and go to state 761
    "^^"    shift, and go to state 762
    "&&="   shift, and go to state 870
    "||="   shift, and go to state 871
    "^^="   shift, and go to state 872
    ".."    shift, and go to state 766
    '='     shift, and go to state 873
    '?'     shift, and go to state 768
    '|'     shift, and go to state 769
    '^'     shift, and go to state 770
    '&'     shift, and go to state 771
    '<'     shift, and go to state 772
    '>'     shift, and go to state 773
    '-'     shift, and go to state 774
    '+'     shift, and go to state 775
    '*'     shift, and go to state 776
    '/'     shift, and go to state 777
    '%'     shift, and go to state 778
    '.'     shift, and go to state 779
    '['     shift, and go to state 780
    '$'     shift, and go to state 501
    '@'     shift, and go to state 671

    " <|"     reduce using rule 349 (expr_assign)
    $default  reduce using rule 285 (expression_yield_no_pipe)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 669

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  450     | "++" expr .
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 728
    "as"  shift, and go to state 729
    "++"  shift, and go to state 740
    "--"  shift, and go to state 741
    "->"  shift, and go to state 748
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    "<|"  shift, and go to state 753
    "|>"  shift, and go to state 754
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 450 (expr)


State 670

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  451     | "--" expr .
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 728
    "as"  shift, and go to state 729
    "++"  shift, and go to state 740
    "--"  shift, and go to state 741
    "->"  shift, and go to state 748
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    "<|"  shift, and go to state 753
    "|>"  shift, and go to state 754
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 451 (expr)


State 671

  327 block_or_lambda: '@' .
  328                | '@' . '@'

    '@'  shift, and go to state 897

    $default  reduce using rule 327 (block_or_lambda)


State 672

  337 expr_block: expression_block .

    $default  reduce using rule 337 (expr_block)


State 673

  338 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    optional_annotation_list  go to state 898


State 674

  262 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 262 (expr_pipe)


State 675

  260 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 260 (expr_pipe)


State 676

  261 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 261 (expr_pipe)


State 677

  498 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 899
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 678

  499 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 900
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 679

  500 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 901
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 680

  501 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 902
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 681

  502 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 903
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 682

  504 expr_mtag: "$c" '(' . expr ')' '(' ')'
  505          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 904
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 683

  861 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 616
    "name"  shift, and go to state 617

    variable_name_with_pos_list  go to state 905


State 684

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  797 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  798                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  799                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  800                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  827 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "const"                           shift, and go to state 404
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "where"                           shift, and go to state 906
    "reinterpret"                     shift, and go to state 455
    "implicit"                        shift, and go to state 405
    "explicit"                        shift, and go to state 406
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "=="                              shift, and go to state 407
    "??"                              shift, and go to state 408
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "$f"                              shift, and go to state 907
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 908
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '?'                               shift, and go to state 409
    '&'                               shift, and go to state 410
    '-'                               shift, and go to state 909
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 910
    '('                               shift, and go to state 911
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502
    '#'                               shift, and go to state 413

    $default  reduce using rule 781 (optional_block)

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 912
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    dim_list                go to state 414
    make_decl               go to state 548
    make_struct_fields      go to state 913
    make_struct_dim         go to state 914
    optional_block          go to state 915
    make_struct_decl        go to state 549
    make_tuple              go to state 916
    make_tuple_call         go to state 550
    make_dim                go to state 917
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 685

  862 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 616
    "name"  shift, and go to state 617

    variable_name_with_pos_list  go to state 918


State 686

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  801 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  802                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  828 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "const"                           shift, and go to state 404
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "implicit"                        shift, and go to state 405
    "explicit"                        shift, and go to state 406
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "=="                              shift, and go to state 407
    "??"                              shift, and go to state 408
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "$f"                              shift, and go to state 907
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 908
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '?'                               shift, and go to state 409
    '&'                               shift, and go to state 410
    '-'                               shift, and go to state 909
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 910
    '('                               shift, and go to state 919
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502
    '#'                               shift, and go to state 413

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 912
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    dim_list                go to state 414
    make_decl               go to state 548
    make_struct_fields      go to state 913
    make_struct_dim         go to state 920
    make_struct_decl        go to state 549
    make_tuple              go to state 916
    make_tuple_call         go to state 550
    make_dim                go to state 921
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 687

  864 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 616
    "name"  shift, and go to state 617

    variable_name_with_pos_list  go to state 922


State 688

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  818 make_map_tuple: expr . "=>" expr
  819               | expr .

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "=>"   shift, and go to state 923
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 819 (make_map_tuple)


State 689

  846 make_table: make_map_tuple .

    $default  reduce using rule 846 (make_table)


State 690

  847 make_table: make_table . "end of expression" make_map_tuple
  851 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 924
    "end of expression"  shift, and go to state 925
    ";}}"                shift, and go to state 926

    optional_trailing_semicolon_cur_cur  go to state 927


State 691

  255 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options_list '>' $@8 expr

    $default  reduce using rule 253 ($@7)

    $@7  go to state 928


State 692

  246 expr_keyword: "keyword" expr . expression_block
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 728
    "as"                   shift, and go to state 729
    "<<"                   shift, and go to state 738
    ">>"                   shift, and go to state 739
    "++"                   shift, and go to state 740
    "--"                   shift, and go to state 741
    "<="                   shift, and go to state 742
    ">="                   shift, and go to state 745
    "=="                   shift, and go to state 746
    "!="                   shift, and go to state 747
    "->"                   shift, and go to state 748
    "??"                   shift, and go to state 750
    "?."                   shift, and go to state 751
    "?["                   shift, and go to state 752
    "<|"                   shift, and go to state 753
    "|>"                   shift, and go to state 754
    "<<<"                  shift, and go to state 756
    ">>>"                  shift, and go to state 757
    "&&"                   shift, and go to state 760
    "||"                   shift, and go to state 761
    "^^"                   shift, and go to state 762
    ".."                   shift, and go to state 766
    "begin of code block"  shift, and go to state 284
    '?'                    shift, and go to state 768
    '|'                    shift, and go to state 769
    '^'                    shift, and go to state 770
    '&'                    shift, and go to state 771
    '<'                    shift, and go to state 772
    '>'                    shift, and go to state 773
    '-'                    shift, and go to state 774
    '+'                    shift, and go to state 775
    '*'                    shift, and go to state 776
    '/'                    shift, and go to state 777
    '%'                    shift, and go to state 778
    '.'                    shift, and go to state 779
    '['                    shift, and go to state 780

    expression_block  go to state 929


State 693

  258 expression_keyword: "type function" '<' . $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    $default  reduce using rule 256 ($@9)

    $@9  go to state 930


State 694

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 160
    STRING_CHARACTER_ESC  shift, and go to state 161
    "end of the string"   shift, and go to state 931
    "{"                   shift, and go to state 932

    character_sequence  go to state 933


State 695

  863 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 616
    "name"  shift, and go to state 617

    variable_name_with_pos_list  go to state 934


State 696

  848 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 848 (expr_map_tuple_list)


State 697

  849 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  850 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 935

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 936


State 698

  219 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 937


State 699

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  427 expr: '-' expr .
  428     | expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 728
    "as"  shift, and go to state 729
    "++"  shift, and go to state 740
    "--"  shift, and go to state 741
    "->"  shift, and go to state 748
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    "<|"  shift, and go to state 753
    "|>"  shift, and go to state 754
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 427 (expr)


State 700

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  426 expr: '+' expr .
  428     | expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 728
    "as"  shift, and go to state 729
    "++"  shift, and go to state 740
    "--"  shift, and go to state 741
    "->"  shift, and go to state 748
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    "<|"  shift, and go to state 753
    "|>"  shift, and go to state 754
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 426 (expr)


State 701

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  463     | '*' expr .
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 463 (expr)


State 702

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  425 expr: '~' expr .
  428     | expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 728
    "as"  shift, and go to state 729
    "++"  shift, and go to state 740
    "--"  shift, and go to state 741
    "->"  shift, and go to state 748
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    "<|"  shift, and go to state 753
    "|>"  shift, and go to state 754
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 425 (expr)


State 703

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  424 expr: '!' expr .
  428     | expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 728
    "as"  shift, and go to state 729
    "++"  shift, and go to state 740
    "--"  shift, and go to state 741
    "->"  shift, and go to state 748
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    "<|"  shift, and go to state 753
    "|>"  shift, and go to state 754
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 424 (expr)


State 704

  859 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 616
    "name"  shift, and go to state 617

    variable_name_with_pos_list  go to state 938


State 705

  860 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 939


State 706

  322 expr_list: expr_list . ',' expr
  826 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 940

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 941


State 707

  321 expr_list: expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 321 (expr_list)


State 708

  322 expr_list: expr_list . ',' expr
  454 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 940

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 942


State 709

  328 block_or_lambda: '@' '@' .
  395 func_addr_expr: '@' '@' . func_addr_name
  398               | '@' '@' . '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  401               | '@' '@' . '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  513 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "$i"    shift, and go to state 943
    "$c"    shift, and go to state 944
    "name"  shift, and go to state 58
    '<'     shift, and go to state 945

    $default  reduce using rule 328 (block_or_lambda)

    name_in_namespace  go to state 946
    func_addr_name     go to state 947


State 710

  240 expression_any: expression_label "end of expression" .

    $default  reduce using rule 240 (expression_any)


State 711

  241 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 241 (expression_any)


State 712

   72 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 728
    "as"                   shift, and go to state 729
    "<<"                   shift, and go to state 738
    ">>"                   shift, and go to state 739
    "++"                   shift, and go to state 740
    "--"                   shift, and go to state 741
    "<="                   shift, and go to state 742
    ">="                   shift, and go to state 745
    "=="                   shift, and go to state 746
    "!="                   shift, and go to state 747
    "->"                   shift, and go to state 748
    "??"                   shift, and go to state 750
    "?."                   shift, and go to state 751
    "?["                   shift, and go to state 752
    "<|"                   shift, and go to state 753
    "|>"                   shift, and go to state 754
    "<<<"                  shift, and go to state 756
    ">>>"                  shift, and go to state 757
    "&&"                   shift, and go to state 760
    "||"                   shift, and go to state 761
    "^^"                   shift, and go to state 762
    ".."                   shift, and go to state 766
    "begin of code block"  shift, and go to state 284
    '?'                    shift, and go to state 768
    '|'                    shift, and go to state 769
    '^'                    shift, and go to state 770
    '&'                    shift, and go to state 771
    '<'                    shift, and go to state 772
    '>'                    shift, and go to state 773
    '-'                    shift, and go to state 774
    '+'                    shift, and go to state 775
    '*'                    shift, and go to state 776
    '/'                    shift, and go to state 777
    '%'                    shift, and go to state 778
    '.'                    shift, and go to state 779
    '['                    shift, and go to state 780

    expression_block  go to state 948


State 713

   74 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner "end of expression"

    $default  reduce using rule 73 ($@3)

    $@3  go to state 949


State 714

  341 expr_full_block_assumed_piped: block_or_lambda . $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 340 ($@21)

    $@21  go to state 950


State 715

  221 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 221 (expr_call_pipe)


State 716

  495 expr: name_in_namespace "name" .

    $default  reduce using rule 495 (expr)


State 717

  389 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  390                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  409 expr_call: name_in_namespace '(' . ')'
  410          | name_in_namespace '(' . make_struct_single ')'
  411          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "$f"                              shift, and go to state 907
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 908
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 951
    '('                               shift, and go to state 500
    ')'                               shift, and go to state 952
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 953
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_fields      go to state 954
    make_struct_single      go to state 955
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 718

  227 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 227 (expression_any)


State 719

  234 expression_any: expression_break "end of expression" .

    $default  reduce using rule 234 (expression_any)


State 720

  235 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 235 (expression_any)


State 721

  282 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 282 (expression_return)


State 722

  287 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 287 (expression_yield)


State 723

  296 optional_in_scope: "inscope" .

    $default  reduce using rule 296 (optional_in_scope)


State 724

  304 expression_let: kwd_let optional_in_scope . let_variable_declaration
  305               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 303
    "[["    shift, and go to state 956
    "name"  shift, and go to state 304
    '('     shift, and go to state 957

    tuple_expansion_variable_declaration  go to state 958
    let_variable_name_with_pos_list       go to state 305
    let_variable_declaration              go to state 959


State 725

  339 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 960

    $default  reduce using rule 335 (optional_capture_list)

    optional_capture_list  go to state 961


State 726

  259 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 501
    '@'                    shift, and go to state 671

    expression_block  go to state 672
    block_or_lambda   go to state 673
    expr_block        go to state 962


State 727

  226 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 226 (expression_any)


State 728

  472 expr: expr "is" . "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr "is" . basic_type_declaration
  474     | expr "is" . "name"
  512 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 963
    "bool"      shift, and go to state 314
    "void"      shift, and go to state 315
    "string"    shift, and go to state 316
    "int"       shift, and go to state 318
    "int2"      shift, and go to state 319
    "int3"      shift, and go to state 320
    "int4"      shift, and go to state 321
    "uint"      shift, and go to state 322
    "bitfield"  shift, and go to state 461
    "uint2"     shift, and go to state 324
    "uint3"     shift, and go to state 325
    "uint4"     shift, and go to state 326
    "float"     shift, and go to state 327
    "float2"    shift, and go to state 328
    "float3"    shift, and go to state 329
    "float4"    shift, and go to state 330
    "range"     shift, and go to state 331
    "urange"    shift, and go to state 332
    "range64"   shift, and go to state 333
    "urange64"  shift, and go to state 334
    "int64"     shift, and go to state 336
    "uint64"    shift, and go to state 337
    "double"    shift, and go to state 338
    "int8"      shift, and go to state 341
    "uint8"     shift, and go to state 342
    "int16"     shift, and go to state 343
    "uint16"    shift, and go to state 344
    "$f"        shift, and go to state 964
    "name"      shift, and go to state 965

    basic_type_declaration  go to state 966


State 729

  475 expr: expr "as" . "name"
  478     | expr "as" . "type" '<' $@30 type_declaration '>' $@31
  479     | expr "as" . basic_type_declaration
  510 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 967
    "bool"      shift, and go to state 314
    "void"      shift, and go to state 315
    "string"    shift, and go to state 316
    "int"       shift, and go to state 318
    "int2"      shift, and go to state 319
    "int3"      shift, and go to state 320
    "int4"      shift, and go to state 321
    "uint"      shift, and go to state 322
    "bitfield"  shift, and go to state 461
    "uint2"     shift, and go to state 324
    "uint3"     shift, and go to state 325
    "uint4"     shift, and go to state 326
    "float"     shift, and go to state 327
    "float2"    shift, and go to state 328
    "float3"    shift, and go to state 329
    "float4"    shift, and go to state 330
    "range"     shift, and go to state 331
    "urange"    shift, and go to state 332
    "range64"   shift, and go to state 333
    "urange64"  shift, and go to state 334
    "int64"     shift, and go to state 336
    "uint64"    shift, and go to state 337
    "double"    shift, and go to state 338
    "int8"      shift, and go to state 341
    "uint8"     shift, and go to state 342
    "int16"     shift, and go to state 343
    "uint16"    shift, and go to state 344
    "$f"        shift, and go to state 968
    "name"      shift, and go to state 969

    basic_type_declaration  go to state 970


State 730

  359 expr_assign: expr "+=" . expr
  380 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 974
    expression_keyword      go to state 518
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign_pipe_right  go to state 975
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 976
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 731

  360 expr_assign: expr "-=" . expr
  381 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 974
    expression_keyword      go to state 518
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign_pipe_right  go to state 977
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 978
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 732

  362 expr_assign: expr "/=" . expr
  383 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 974
    expression_keyword      go to state 518
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign_pipe_right  go to state 979
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 980
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 733

  361 expr_assign: expr "*=" . expr
  382 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 974
    expression_keyword      go to state 518
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign_pipe_right  go to state 981
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 982
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 734

  363 expr_assign: expr "%=" . expr
  384 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 974
    expression_keyword      go to state 518
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign_pipe_right  go to state 983
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 984
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 735

  353 expr_assign: expr "&=" . expr
  374 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 974
    expression_keyword      go to state 518
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign_pipe_right  go to state 985
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 986
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 736

  354 expr_assign: expr "|=" . expr
  375 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 974
    expression_keyword      go to state 518
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign_pipe_right  go to state 987
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 988
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 737

  355 expr_assign: expr "^=" . expr
  376 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 974
    expression_keyword      go to state 518
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign_pipe_right  go to state 989
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 990
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 738

  428 expr: expr "<<" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 991
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 739

  429 expr: expr ">>" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 992
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 740

  452 expr: expr "++" .

    $default  reduce using rule 452 (expr)


State 741

  453 expr: expr "--" .

    $default  reduce using rule 453 (expr)


State 742

  441 expr: expr "<=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 993
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 743

  364 expr_assign: expr "<<=" . expr
  385 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 974
    expression_keyword      go to state 518
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign_pipe_right  go to state 994
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 995
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 744

  365 expr_assign: expr ">>=" . expr
  386 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 974
    expression_keyword      go to state 518
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign_pipe_right  go to state 996
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 997
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 745

  442 expr: expr ">=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 998
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 746

  439 expr: expr "==" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 999
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 747

  440 expr: expr "!=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1000
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 748

  391 expr_method_call: expr "->" . "name" '(' ')'
  392                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 1001


State 749

  351 expr_assign: expr "<-" . expr
  373 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 974
    expression_keyword      go to state 518
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign_pipe_right  go to state 1002
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1003
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 750

  468 expr: expr "??" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1004
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 751

  459 expr: expr "?." . "name"
  507 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1005
    "name"  shift, and go to state 1006


State 752

  457 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1007
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 753

  492 expr: expr "<|" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1008
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 754

  493 expr: expr "|>" . expr
  494     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1009
    expr_mtag               go to state 546
    basic_type_declaration  go to state 1010
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 755

  352 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1011
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 756

  430 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1012
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 757

  431 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1013
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 758

  366 expr_assign: expr "<<<=" . expr
  387 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 974
    expression_keyword      go to state 518
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign_pipe_right  go to state 1014
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1015
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 759

  367 expr_assign: expr ">>>=" . expr
  388 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 974
    expression_keyword      go to state 518
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign_pipe_right  go to state 1016
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1017
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 760

  446 expr: expr "&&" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1018
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 761

  447 expr: expr "||" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1019
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 762

  448 expr: expr "^^" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1020
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 763

  356 expr_assign: expr "&&=" . expr
  377 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 974
    expression_keyword      go to state 518
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign_pipe_right  go to state 1021
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1022
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 764

  357 expr_assign: expr "||=" . expr
  378 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 974
    expression_keyword      go to state 518
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign_pipe_right  go to state 1023
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1024
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 765

  358 expr_assign: expr "^^=" . expr
  379 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 974
    expression_keyword      go to state 518
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign_pipe_right  go to state 1025
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1026
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 766

  449 expr: expr ".." . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1027
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 767

  350 expr_assign: expr '=' . expr
  372 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 974
    expression_keyword      go to state 518
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign_pipe_right  go to state 1028
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1029
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 768

  469 expr: expr '?' . expr ':' expr
  480     | expr '?' . "as" "name"
  483     | expr '?' . "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr '?' . "as" basic_type_declaration
  511 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "as"                              shift, and go to state 1030
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1031
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 769

  444 expr: expr '|' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1032
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 770

  445 expr: expr '^' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1033
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 771

  443 expr: expr '&' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1034
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 772

  437 expr: expr '<' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1035
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 773

  438 expr: expr '>' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1036
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 774

  433 expr: expr '-' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1037
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 775

  432 expr: expr '+' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1038
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 776

  434 expr: expr '*' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1039
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 777

  435 expr: expr '/' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1040
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 778

  436 expr: expr '%' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1041
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 779

  402 expr_field: expr '.' . "name"
  403           | expr '.' . '.' "name"
  404           | expr '.' . "name" '(' ')'
  405           | expr '.' . "name" '(' expr_list ')'
  408           | expr '.' . $@26 error $@27
  456 expr: expr '.' . '[' expr ']'
  458     | expr '.' . "?[" expr ']'
  460     | expr '.' . "?." "name"
  506 expr_mtag: expr '.' . "$f" '(' expr ')'
  508          | expr '.' . '.' "$f" '(' expr ')'
  509          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 1042
    "?["    shift, and go to state 1043
    "$f"    shift, and go to state 1044
    "name"  shift, and go to state 1045
    '.'     shift, and go to state 1046
    '['     shift, and go to state 1047

    $default  reduce using rule 406 ($@26)

    $@26  go to state 1048


State 780

  455 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1049
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 781

  220 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 220 (expr_call_pipe)


State 782

  412 expr_call: basic_type_declaration '(' . ')'
  413          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    ')'                               shift, and go to state 1050
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 1051
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 783

  589 enum_list: enum_list "name" "end of expression" .

    $default  reduce using rule 589 (enum_list)


State 784

  590 enum_list: enum_list "name" '=' . expr "end of expression"

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1052
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 785

  607 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block" .

    $default  reduce using rule 607 (enum_declaration)


State 786

  588 enum_list: enum_list . "end of expression"
  589          | enum_list . "name" "end of expression"
  590          | enum_list . "name" '=' expr "end of expression"
  610 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list . $@44 "end of code block"

    "name"               shift, and go to state 554
    "end of expression"  shift, and go to state 555

    $default  reduce using rule 609 ($@44)

    $@44  go to state 1053


State 787

  622 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 622 (optional_struct_variable_declaration_list)


State 788

  120 optional_annotation_list: '[' . annotation_list ']'
  535 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' "end of expression"

    "require"  shift, and go to state 60
    "private"  shift, and go to state 61
    "|>"       shift, and go to state 62
    "name"     shift, and go to state 58
    '!'        shift, and go to state 63
    '('        shift, and go to state 64

    annotation_declaration_name   go to state 65
    annotation_declaration_basic  go to state 66
    annotation_declaration        go to state 67
    annotation_list               go to state 1054
    name_in_namespace             go to state 69


State 789

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  534                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "def"  shift, and go to state 1055


State 790

  530 struct_variable_declaration_list: struct_variable_declaration_list $@34 . structure_variable_declaration "end of expression"

    "[["  shift, and go to state 216
    '@'   shift, and go to state 217

    $default  reduce using rule 514 (optional_field_annotation)

    metadata_argument_list          go to state 218
    optional_field_annotation       go to state 1056
    structure_variable_declaration  go to state 1057


State 791

  567 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 567 (let_variable_name_with_pos_list)


State 792

  570 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1058


State 793

  571 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 571 (let_variable_declaration)


State 794

  572 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  573                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 468
    "@ <|"                            shift, and go to state 469
    "@@ <|"                           shift, and go to state 470
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 515
    expression_keyword      go to state 518
    expr_pipe               go to state 1059
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign             go to state 639
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1060
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 795

  575 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 575 (let_variable_declaration)


State 796

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  349 expr_assign: expr .
  350            | expr . '=' expr
  351            | expr . "<-" expr
  352            | expr . ":=" expr
  353            | expr . "&=" expr
  354            | expr . "|=" expr
  355            | expr . "^=" expr
  356            | expr . "&&=" expr
  357            | expr . "||=" expr
  358            | expr . "^^=" expr
  359            | expr . "+=" expr
  360            | expr . "-=" expr
  361            | expr . "*=" expr
  362            | expr . "/=" expr
  363            | expr . "%=" expr
  364            | expr . "<<=" expr
  365            | expr . ">>=" expr
  366            | expr . "<<<=" expr
  367            | expr . ">>>=" expr
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  574 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 728
    "as"                 shift, and go to state 729
    "+="                 shift, and go to state 857
    "-="                 shift, and go to state 858
    "/="                 shift, and go to state 859
    "*="                 shift, and go to state 860
    "%="                 shift, and go to state 861
    "&="                 shift, and go to state 862
    "|="                 shift, and go to state 863
    "^="                 shift, and go to state 864
    "<<"                 shift, and go to state 738
    ">>"                 shift, and go to state 739
    "++"                 shift, and go to state 740
    "--"                 shift, and go to state 741
    "<="                 shift, and go to state 742
    "<<="                shift, and go to state 865
    ">>="                shift, and go to state 866
    ">="                 shift, and go to state 745
    "=="                 shift, and go to state 746
    "!="                 shift, and go to state 747
    "->"                 shift, and go to state 748
    "<-"                 shift, and go to state 867
    "??"                 shift, and go to state 750
    "?."                 shift, and go to state 751
    "?["                 shift, and go to state 752
    "<|"                 shift, and go to state 753
    "|>"                 shift, and go to state 754
    ":="                 shift, and go to state 755
    "<<<"                shift, and go to state 756
    ">>>"                shift, and go to state 757
    "<<<="               shift, and go to state 868
    ">>>="               shift, and go to state 869
    "&&"                 shift, and go to state 760
    "||"                 shift, and go to state 761
    "^^"                 shift, and go to state 762
    "&&="                shift, and go to state 870
    "||="                shift, and go to state 871
    "^^="                shift, and go to state 872
    ".."                 shift, and go to state 766
    "end of expression"  shift, and go to state 1061
    '='                  shift, and go to state 873
    '?'                  shift, and go to state 768
    '|'                  shift, and go to state 769
    '^'                  shift, and go to state 770
    '&'                  shift, and go to state 771
    '<'                  shift, and go to state 772
    '>'                  shift, and go to state 773
    '-'                  shift, and go to state 774
    '+'                  shift, and go to state 775
    '*'                  shift, and go to state 776
    '/'                  shift, and go to state 777
    '%'                  shift, and go to state 778
    '.'                  shift, and go to state 779
    '['                  shift, and go to state 780
    '$'                  shift, and go to state 501
    '@'                  shift, and go to state 671

    $default  reduce using rule 349 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 797

  690 type_declaration_no_options: "type" '<' $@49 type_declaration . '>' $@50
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415
    '>'  shift, and go to state 1062


State 798

  713 type_declaration_no_options: "array" '<' $@54 type_declaration . '>' $@55
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415
    '>'  shift, and go to state 1063


State 799

  716 type_declaration_no_options: "table" '<' $@56 table_type_pair . '>' $@57

    '>'  shift, and go to state 1064


State 800

  678 table_type_pair: type_declaration .
  679                | type_declaration . "end of expression" type_declaration
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 1065
    '|'                  shift, and go to state 415

    $default  reduce using rule 678 (table_type_pair)


State 801

  691 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 691 (type_declaration_no_options)


State 802

  719 type_declaration_no_options: "iterator" '<' $@58 type_declaration . '>' $@59
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415
    '>'  shift, and go to state 1066


State 803

  709 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration . '>' $@53
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415
    '>'  shift, and go to state 1067


State 804

  668 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 668 (auto_type_declaration)


State 805

  670 bitfield_bits: "name" .

    $default  reduce using rule 670 (bitfield_bits)


State 806

  671 bitfield_bits: bitfield_bits . "end of expression" "name"
  677 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits . '>' $@48

    "end of expression"  shift, and go to state 1068
    '>'                  shift, and go to state 1069


State 807

  723 type_declaration_no_options: "block" '<' $@60 type_declaration . '>' $@61
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415
    '>'  shift, and go to state 1070


State 808

  726 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 371

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1071


State 809

  730 type_declaration_no_options: "function" '<' $@64 type_declaration . '>' $@65
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415
    '>'  shift, and go to state 1072


State 810

  733 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list . optional_function_type '>' $@67

    ':'  shift, and go to state 371

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1073


State 811

  737 type_declaration_no_options: "lambda" '<' $@68 type_declaration . '>' $@69
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415
    '>'  shift, and go to state 1074


State 812

  740 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list . optional_function_type '>' $@71

    ':'  shift, and go to state 371

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1075


State 813

  542 tuple_type_list: tuple_type .

    $default  reduce using rule 542 (tuple_type_list)


State 814

  543 tuple_type_list: tuple_type_list . "end of expression" tuple_type
  743 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list . '>' $@73

    "end of expression"  shift, and go to state 1076
    '>'                  shift, and go to state 1077


State 815

  548 variant_type_list: variant_type .

    $default  reduce using rule 548 (variant_type_list)


State 816

  549 variant_type_list: variant_type_list . "end of expression" variant_type
  746 type_declaration_no_options: "variant" '<' $@74 variant_type_list . '>' $@75

    "end of expression"  shift, and go to state 1078
    '>'                  shift, and go to state 1079


State 817

  669 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 669 (auto_type_declaration)


State 818

  694 type_declaration_no_options: '$' name_in_namespace '<' $@51 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    type_declaration_no_options_list  go to state 1080
    name_in_namespace                 go to state 349
    basic_type_declaration            go to state 350
    structure_type_declaration        go to state 351
    auto_type_declaration             go to state 352
    bitfield_type_declaration         go to state 353
    type_declaration_no_options       go to state 354
    type_declaration                  go to state 1081


State 819

  692 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1082


State 820

  248 optional_expr_list: expr_list .
  322 expr_list: expr_list . ',' expr

    ','  shift, and go to state 856

    $default  reduce using rule 248 (optional_expr_list)


State 821

  695 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 695 (type_declaration_no_options)


State 822

  680 dim_list: '[' expr ']' .

    $default  reduce using rule 680 (dim_list)


State 823

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  681 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ']'    shift, and go to state 1083


State 824

  674 bitfield_alias_bits: bitfield_alias_bits "name" "end of expression" .

    $default  reduce using rule 674 (bitfield_alias_bits)


State 825

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block" .

    $default  reduce using rule 764 (bitfield_alias_declaration)


State 826

  541 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 1084


State 827

  546 tuple_alias_type_list: tuple_alias_type_list tuple_type "end of expression" .

    $default  reduce using rule 546 (tuple_alias_type_list)


State 828

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block" .

    $default  reduce using rule 754 (tuple_alias_declaration)


State 829

  547 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 1085


State 830

  552 variant_alias_type_list: variant_alias_type_list variant_type "end of expression" .

    $default  reduce using rule 552 (variant_alias_type_list)


State 831

  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block" .

    $default  reduce using rule 759 (variant_alias_declaration)


State 832

  537 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 537 (function_argument_declaration)


State 833

  627 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1086
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 834

  628 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1087


State 835

  554 copy_or_move: "<-" .

    $default  reduce using rule 554 (copy_or_move)


State 836

  629 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  630                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1088


State 837

  553 copy_or_move: '=' .

    $default  reduce using rule 553 (copy_or_move)


State 838

  557 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  558                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 1089


State 839

  556 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 556 (variable_declaration)


State 840

  559 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  560                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 468
    "@ <|"                            shift, and go to state 469
    "@@ <|"                           shift, and go to state 470
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expr_call_pipe          go to state 515
    expression_keyword      go to state 518
    expr_pipe               go to state 1090
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_assign             go to state 639
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1091
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 841

  805 make_struct_decl: "struct" '<' $@88 . type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1092


State 842

  808 make_struct_decl: "class" '<' $@90 . type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1093


State 843

   78 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 78 (expression_while_loop)


State 844

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  629 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  630                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1094
    ','   shift, and go to state 836


State 845

  270 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 1095


State 846

  273 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  274         | "new" new_type_declaration '(' . expr_list ')'
  275         | "new" new_type_declaration '(' . use_initializer make_struct_single ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "uninitialized"                   shift, and go to state 1096
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    "name"    [reduce using rule 795 (use_initializer)]
    $default  reduce using rule 795 (use_initializer)

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 1097
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    use_initializer         go to state 1098
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 847

  318 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  319               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  320               | "typeinfo" '(' name_in_namespace . '<' "name" "end of expression" "name" '>' expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '<'                               shift, and go to state 1099
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1100
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 848

  317 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 1101


State 849

  831 make_dim_decl: "array" "struct" '<' . $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 829 ($@98)

    $@98  go to state 1102


State 850

  834 make_dim_decl: "array" "tuple" '<' . $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 832 ($@100)

    $@100  go to state 1103


State 851

  837 make_dim_decl: "array" "variant" '<' . $@102 type_declaration_no_options '>' $@103 '(' make_struct_dim ')'

    $default  reduce using rule 835 ($@102)

    $@102  go to state 1104


State 852

  841 make_dim_decl: "array" '<' $@104 . type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1105


State 853

  322 expr_list: expr_list . ',' expr
  838 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 940

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 1106


State 854

  284 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 284 (expression_return)


State 855

  281 expression_return_no_pipe: "return" "<-" expr_list .
  322 expr_list: expr_list . ',' expr

    ','  shift, and go to state 856

    $default  reduce using rule 281 (expression_return_no_pipe)


State 856

  322 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1107
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 857

  359 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1108
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 858

  360 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1109
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 859

  362 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1110
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 860

  361 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1111
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 861

  363 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1112
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 862

  353 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1113
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 863

  354 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1114
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 864

  355 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1115
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 865

  364 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1116
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 866

  365 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1117
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 867

  351 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1118
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 868

  366 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1119
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 869

  367 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1120
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 870

  356 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1121
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 871

  357 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1122
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 872

  358 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1123
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 873

  350 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1124
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 874

  290 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 1125


State 875

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  853 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  854                | "table" '<' type_declaration_no_options . "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "const"              shift, and go to state 404
    "implicit"           shift, and go to state 405
    "explicit"           shift, and go to state 406
    "=="                 shift, and go to state 407
    "??"                 shift, and go to state 408
    "end of expression"  shift, and go to state 1126
    '?'                  shift, and go to state 409
    '&'                  shift, and go to state 410
    '>'                  shift, and go to state 1127
    '-'                  shift, and go to state 411
    '['                  shift, and go to state 412
    '#'                  shift, and go to state 413

    dim_list  go to state 414


State 876

  849 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  852 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 935

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 1128


State 877

  267 expression_delete: "delete" "explicit" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 267 (expression_delete)


State 878

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  464     | "deref" '(' expr . ')'
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1129


State 879

   79 expression_with: "with" expr expression_block .

    $default  reduce using rule 79 (expression_with)


State 880

   81 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 80 ($@5)

    $@5  go to state 1130


State 881

  308 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1131


State 882

  311 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1132


State 883

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  465     | "addr" '(' expr . ')'
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1133


State 884

  314 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1134


State 885

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 886

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 887

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  496     | "unsafe" '(' expr . ')'
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1135


State 888

  845 make_dim_decl: "fixed_array" '<' $@106 . type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1136


State 889

  322 expr_list: expr_list . ',' expr
  842 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 940

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 1137


State 890

  814 make_struct_decl: "default" '<' $@94 . type_declaration_no_options '>' $@95 use_initializer

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1138


State 891

  823 make_tuple_call: "tuple" '<' $@96 . type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1139


State 892

  322 expr_list: expr_list . ',' expr
  820 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 940

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 1140


State 893

  811 make_struct_decl: "variant" '<' $@92 . type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1141


State 894

  466 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  467     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '>'         shift, and go to state 1142
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    dim_list  go to state 414


State 895

  289 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 289 (expression_yield)


State 896

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  286 expression_yield_no_pipe: "yield" "<-" expr .
  349 expr_assign: expr .
  350            | expr . '=' expr
  351            | expr . "<-" expr
  352            | expr . ":=" expr
  353            | expr . "&=" expr
  354            | expr . "|=" expr
  355            | expr . "^=" expr
  356            | expr . "&&=" expr
  357            | expr . "||=" expr
  358            | expr . "^^=" expr
  359            | expr . "+=" expr
  360            | expr . "-=" expr
  361            | expr . "*=" expr
  362            | expr . "/=" expr
  363            | expr . "%=" expr
  364            | expr . "<<=" expr
  365            | expr . ">>=" expr
  366            | expr . "<<<=" expr
  367            | expr . ">>>=" expr
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 728
    "as"    shift, and go to state 729
    "+="    shift, and go to state 857
    "-="    shift, and go to state 858
    "/="    shift, and go to state 859
    "*="    shift, and go to state 860
    "%="    shift, and go to state 861
    "&="    shift, and go to state 862
    "|="    shift, and go to state 863
    "^="    shift, and go to state 864
    "<<"    shift, and go to state 738
    ">>"    shift, and go to state 739
    "++"    shift, and go to state 740
    "--"    shift, and go to state 741
    "<="    shift, and go to state 742
    "<<="   shift, and go to state 865
    ">>="   shift, and go to state 866
    ">="    shift, and go to state 745
    "=="    shift, and go to state 746
    "!="    shift, and go to state 747
    "->"    shift, and go to state 748
    "<-"    shift, and go to state 867
    "??"    shift, and go to state 750
    "?."    shift, and go to state 751
    "?["    shift, and go to state 752
    "<|"    shift, and go to state 753
    "|>"    shift, and go to state 754
    ":="    shift, and go to state 755
    "<<<"   shift, and go to state 756
    ">>>"   shift, and go to state 757
    "<<<="  shift, and go to state 868
    ">>>="  shift, and go to state 869
    "&&"    shift, and go to state 760
    "||"    shift, and go to state 761
    "^^"    shift, and go to state 762
    "&&="   shift, and go to state 870
    "||="   shift, and go to state 871
    "^^="   shift, and go to state 872
    ".."    shift, and go to state 766
    '='     shift, and go to state 873
    '?'     shift, and go to state 768
    '|'     shift, and go to state 769
    '^'     shift, and go to state 770
    '&'     shift, and go to state 771
    '<'     shift, and go to state 772
    '>'     shift, and go to state 773
    '-'     shift, and go to state 774
    '+'     shift, and go to state 775
    '*'     shift, and go to state 776
    '/'     shift, and go to state 777
    '%'     shift, and go to state 778
    '.'     shift, and go to state 779
    '['     shift, and go to state 780
    '$'     shift, and go to state 501
    '@'     shift, and go to state 671

    " <|"     reduce using rule 349 (expr_assign)
    $default  reduce using rule 286 (expression_yield_no_pipe)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 897

  328 block_or_lambda: '@' '@' .

    $default  reduce using rule 328 (block_or_lambda)


State 898

  338 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 960

    $default  reduce using rule 335 (optional_capture_list)

    optional_capture_list  go to state 1143


State 899

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  498 expr_mtag: "$$" '(' expr . ')'
  506          | expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1144


State 900

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  499 expr_mtag: "$i" '(' expr . ')'
  506          | expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1145


State 901

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  500 expr_mtag: "$v" '(' expr . ')'
  506          | expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1146


State 902

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  501 expr_mtag: "$b" '(' expr . ')'
  506          | expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1147


State 903

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  502 expr_mtag: "$a" '(' expr . ')'
  506          | expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1148


State 904

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  504 expr_mtag: "$c" '(' expr . ')' '(' ')'
  505          | "$c" '(' expr . ')' '(' expr_list ')'
  506          | expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1149


State 905

  629 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  630                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  861 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1150
    ','   shift, and go to state 836


State 906

  782 optional_block: "where" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 501
    '@'                    shift, and go to state 671

    expression_block  go to state 672
    block_or_lambda   go to state 673
    expr_block        go to state 1151


State 907

  774 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  775                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1152


State 908

  264 name_in_namespace: "name" .
  265                  | "name" . "::" "name"
  770 make_struct_fields: "name" . copy_or_move expr
  771                   | "name" . ":=" expr

    "<-"  shift, and go to state 835
    ":="  shift, and go to state 1153
    "::"  shift, and go to state 96
    '='   shift, and go to state 837

    $default  reduce using rule 264 (name_in_namespace)

    copy_or_move  go to state 1154


State 909

  427 expr: '-' . expr
  695 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  698                            | type_declaration_no_options '-' . "const"
  700                            | type_declaration_no_options '-' . '&'
  703                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "const"                           shift, and go to state 594
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '&'                               shift, and go to state 595
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 1155
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502
    '#'                               shift, and go to state 597

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 699
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 910

  680 dim_list: '[' . expr ']'
  687 type_declaration_no_options: type_declaration_no_options '[' . ']'
  826 make_dim_decl: '[' . expr_list optional_comma ']'
  859 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  860                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "for"                             shift, and go to state 704
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "iterator"                        shift, and go to state 705
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    ']'                               shift, and go to state 598
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 706
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1156
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 911

  454 expr: '(' . expr_list optional_comma ')'
  799 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  800                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    ')'                               shift, and go to state 1157
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 708
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 912

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  815 make_tuple: expr .
  816           | expr . "=>" expr

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "=>"   shift, and go to state 1158
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 815 (make_tuple)


State 913

  772 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  773                   | make_struct_fields . ',' "name" ":=" expr
  776                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  779 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1159

    $default  reduce using rule 779 (make_struct_dim)


State 914

  780 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  797 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 906
    "end of expression"  shift, and go to state 1160

    $default  reduce using rule 781 (optional_block)

    optional_block  go to state 1161


State 915

  798 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1162
    ",]]"  shift, and go to state 1163
    ']'    shift, and go to state 1164

    optional_trailing_delim_sqr_sqr  go to state 1165


State 916

  817 make_tuple: make_tuple . ',' expr
  824 make_dim: make_tuple .

    ','  shift, and go to state 1166

    $default  reduce using rule 824 (make_dim)


State 917

  825 make_dim: make_dim . "end of expression" make_tuple
  827 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1167
    ";]]"                shift, and go to state 1168
    ']'                  shift, and go to state 1169

    optional_trailing_semicolon_sqr_sqr  go to state 1170


State 918

  629 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  630                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  862 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1171
    ','   shift, and go to state 836


State 919

  454 expr: '(' . expr_list optional_comma ')'
  802 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    ')'                               shift, and go to state 1172
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 708
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 920

  780 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  801 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 906
    "end of expression"  shift, and go to state 1160

    $default  reduce using rule 781 (optional_block)

    optional_block  go to state 1173


State 921

  825 make_dim: make_dim . "end of expression" make_tuple
  828 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1174
    "end of expression"  shift, and go to state 1167
    ";}]"                shift, and go to state 1175

    optional_trailing_semicolon_cur_sqr  go to state 1176


State 922

  629 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  630                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  864 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1177
    ','   shift, and go to state 836


State 923

  818 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1178
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 924

  783 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1179


State 925

  847 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 688
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_map_tuple          go to state 1180
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 926

  784 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 784 (optional_trailing_semicolon_cur_cur)


State 927

  851 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 851 (make_table_decl)


State 928

  255 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options_list '>' $@8 expr

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    type_declaration_no_options_list  go to state 1181
    name_in_namespace                 go to state 349
    basic_type_declaration            go to state 350
    structure_type_declaration        go to state 351
    auto_type_declaration             go to state 352
    bitfield_type_declaration         go to state 353
    type_declaration_no_options       go to state 354
    type_declaration                  go to state 1081


State 929

  246 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 246 (expr_keyword)


State 930

  258 expression_keyword: "type function" '<' $@9 . type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    type_declaration_no_options_list  go to state 1182
    name_in_namespace                 go to state 349
    basic_type_declaration            go to state 350
    structure_type_declaration        go to state 351
    auto_type_declaration             go to state 352
    bitfield_type_declaration         go to state 353
    type_declaration_no_options       go to state 354
    type_declaration                  go to state 1081


State 931

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 932

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1183
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 933

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 934

  629 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  630                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  863 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1184
    ','   shift, and go to state 836


State 935

  849 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  858 optional_comma: ',' .

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    $default  reduce using rule 858 (optional_comma)

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 688
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_map_tuple          go to state 1185
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 936

  850 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1186


State 937

  219 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 243 (expressions)

    expressions  go to state 1187


State 938

  629 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  630                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  859 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1188
    ','   shift, and go to state 836


State 939

  860 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 616
    "name"  shift, and go to state 617

    variable_name_with_pos_list  go to state 1189


State 940

  322 expr_list: expr_list ',' . expr
  858 optional_comma: ',' .

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    $default  reduce using rule 858 (optional_comma)

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1107
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 941

  826 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1190


State 942

  454 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1191


State 943

  394 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1192


State 944

  513 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1193


State 945

  398 func_addr_expr: '@' '@' '<' . $@22 type_declaration_no_options '>' $@23 func_addr_name
  401               | '@' '@' '<' . $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    ':'       reduce using rule 399 ($@24)
    '>'       reduce using rule 399 ($@24)
    '('       reduce using rule 399 ($@24)
    $default  reduce using rule 396 ($@22)

    $@22  go to state 1194
    $@24  go to state 1195


State 946

  393 func_addr_name: name_in_namespace .

    $default  reduce using rule 393 (func_addr_name)


State 947

  395 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 395 (func_addr_expr)


State 948

   72 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1196
    "elif"         shift, and go to state 1197
    "static_elif"  shift, and go to state 1198

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1199
    expression_else      go to state 1200


State 949

   74 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1201
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 950

  341 expr_full_block_assumed_piped: block_or_lambda $@21 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    optional_annotation_list  go to state 1202


State 951

  389 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  826 make_dim_decl: '[' . expr_list optional_comma ']'
  859 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  860                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "for"                             shift, and go to state 704
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "iterator"                        shift, and go to state 705
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "$f"                              shift, and go to state 907
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 908
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 706
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_fields      go to state 1203
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 952

  409 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 409 (expr_call)


State 953

  322 expr_list: expr_list . ',' expr
  390 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  411 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1204
    ')'  shift, and go to state 1205


State 954

  772 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  773                   | make_struct_fields . ',' "name" ":=" expr
  776                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  778 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1159

    $default  reduce using rule 778 (make_struct_single)


State 955

  410 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1206


State 956

  300 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  302                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1207

    tuple_expansion  go to state 1208


State 957

  301 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  303                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1207

    tuple_expansion  go to state 1209


State 958

  305 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 305 (expression_let)


State 959

  304 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 304 (expression_let)


State 960

  336 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1210
    ":="  shift, and go to state 1211
    '='   shift, and go to state 1212
    '&'   shift, and go to state 1213

    capture_entry  go to state 1214
    capture_list   go to state 1215


State 961

  339 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1216


State 962

  259 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 259 (expr_pipe)


State 963

  472 expr: expr "is" "type" . '<' $@28 type_declaration_no_options '>' $@29

    '<'  shift, and go to state 1217


State 964

  512 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1218


State 965

  474 expr: expr "is" "name" .

    $default  reduce using rule 474 (expr)


State 966

  473 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 473 (expr)


State 967

  478 expr: expr "as" "type" . '<' $@30 type_declaration '>' $@31

    '<'  shift, and go to state 1219


State 968

  510 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1220


State 969

  475 expr: expr "as" "name" .

    $default  reduce using rule 475 (expr)


State 970

  479 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 479 (expr)


State 971

  370 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 501
    '@'                    shift, and go to state 671

    expression_block  go to state 672
    block_or_lambda   go to state 673
    expr_block        go to state 1221


State 972

  368 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 501
    '@'                    shift, and go to state 671

    expression_block  go to state 672
    block_or_lambda   go to state 673
    expr_block        go to state 1222


State 973

  369 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 501
    '@'                    shift, and go to state 671

    expression_block  go to state 672
    block_or_lambda   go to state 673
    expr_block        go to state 1223


State 974

  371 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 371 (expr_assign_pipe_right)


State 975

  380 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 380 (expr_assign_pipe)


State 976

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  359 expr_assign: expr "+=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    '$'    shift, and go to state 501
    '@'    shift, and go to state 671

    $default  reduce using rule 359 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 977

  381 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 381 (expr_assign_pipe)


State 978

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  360 expr_assign: expr "-=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    '$'    shift, and go to state 501
    '@'    shift, and go to state 671

    $default  reduce using rule 360 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 979

  383 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 383 (expr_assign_pipe)


State 980

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  362 expr_assign: expr "/=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    '$'    shift, and go to state 501
    '@'    shift, and go to state 671

    $default  reduce using rule 362 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 981

  382 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 382 (expr_assign_pipe)


State 982

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  361 expr_assign: expr "*=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    '$'    shift, and go to state 501
    '@'    shift, and go to state 671

    $default  reduce using rule 361 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 983

  384 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 384 (expr_assign_pipe)


State 984

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  363 expr_assign: expr "%=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    '$'    shift, and go to state 501
    '@'    shift, and go to state 671

    $default  reduce using rule 363 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 985

  374 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 374 (expr_assign_pipe)


State 986

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  353 expr_assign: expr "&=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    '$'    shift, and go to state 501
    '@'    shift, and go to state 671

    $default  reduce using rule 353 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 987

  375 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 375 (expr_assign_pipe)


State 988

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  354 expr_assign: expr "|=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    '$'    shift, and go to state 501
    '@'    shift, and go to state 671

    $default  reduce using rule 354 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 989

  376 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 376 (expr_assign_pipe)


State 990

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  355 expr_assign: expr "^=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    '$'    shift, and go to state 501
    '@'    shift, and go to state 671

    $default  reduce using rule 355 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 991

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  428     | expr "<<" expr .
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 728
    "as"  shift, and go to state 729
    "++"  shift, and go to state 740
    "--"  shift, and go to state 741
    "->"  shift, and go to state 748
    "??"  shift, and go to state 750
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    "<|"  shift, and go to state 753
    "|>"  shift, and go to state 754
    '-'   shift, and go to state 774
    '+'   shift, and go to state 775
    '*'   shift, and go to state 776
    '/'   shift, and go to state 777
    '%'   shift, and go to state 778
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 428 (expr)


State 992

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  429     | expr ">>" expr .
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 728
    "as"  shift, and go to state 729
    "++"  shift, and go to state 740
    "--"  shift, and go to state 741
    "->"  shift, and go to state 748
    "??"  shift, and go to state 750
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    "<|"  shift, and go to state 753
    "|>"  shift, and go to state 754
    '-'   shift, and go to state 774
    '+'   shift, and go to state 775
    '*'   shift, and go to state 776
    '/'   shift, and go to state 777
    '%'   shift, and go to state 778
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 429 (expr)


State 993

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  441     | expr "<=" expr .
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 441 (expr)


State 994

  385 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 385 (expr_assign_pipe)


State 995

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  364 expr_assign: expr "<<=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    '$'    shift, and go to state 501
    '@'    shift, and go to state 671

    $default  reduce using rule 364 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 996

  386 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 386 (expr_assign_pipe)


State 997

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  365 expr_assign: expr ">>=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    '$'    shift, and go to state 501
    '@'    shift, and go to state 671

    $default  reduce using rule 365 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 998

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  442     | expr ">=" expr .
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 442 (expr)


State 999

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  439     | expr "==" expr .
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 439 (expr)


State 1000

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  440     | expr "!=" expr .
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 440 (expr)


State 1001

  391 expr_method_call: expr "->" "name" . '(' ')'
  392                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1224


State 1002

  373 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 373 (expr_assign_pipe)


State 1003

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  351 expr_assign: expr "<-" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    '$'    shift, and go to state 501
    '@'    shift, and go to state 671

    $default  reduce using rule 351 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 1004

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  468     | expr "??" expr .
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 728
    "as"  shift, and go to state 729
    "++"  shift, and go to state 740
    "--"  shift, and go to state 741
    "->"  shift, and go to state 748
    "??"  shift, and go to state 750
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    "<|"  shift, and go to state 753
    "|>"  shift, and go to state 754
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 468 (expr)


State 1005

  507 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1225


State 1006

  459 expr: expr "?." "name" .

    $default  reduce using rule 459 (expr)


State 1007

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  457     | expr "?[" expr . ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ']'    shift, and go to state 1226


State 1008

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  492     | expr "<|" expr .
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 748
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 492 (expr)


State 1009

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  493     | expr "|>" expr .
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 748
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 493 (expr)


State 1010

  412 expr_call: basic_type_declaration . '(' ')'
  413          | basic_type_declaration . '(' expr_list ')'
  494 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 782

    $default  reduce using rule 494 (expr)


State 1011

  352 expr_assign: expr ":=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 352 (expr_assign)


State 1012

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  430     | expr "<<<" expr .
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 728
    "as"  shift, and go to state 729
    "++"  shift, and go to state 740
    "--"  shift, and go to state 741
    "->"  shift, and go to state 748
    "??"  shift, and go to state 750
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    "<|"  shift, and go to state 753
    "|>"  shift, and go to state 754
    '-'   shift, and go to state 774
    '+'   shift, and go to state 775
    '*'   shift, and go to state 776
    '/'   shift, and go to state 777
    '%'   shift, and go to state 778
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 430 (expr)


State 1013

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  431     | expr ">>>" expr .
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 728
    "as"  shift, and go to state 729
    "++"  shift, and go to state 740
    "--"  shift, and go to state 741
    "->"  shift, and go to state 748
    "??"  shift, and go to state 750
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    "<|"  shift, and go to state 753
    "|>"  shift, and go to state 754
    '-'   shift, and go to state 774
    '+'   shift, and go to state 775
    '*'   shift, and go to state 776
    '/'   shift, and go to state 777
    '%'   shift, and go to state 778
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 431 (expr)


State 1014

  387 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 387 (expr_assign_pipe)


State 1015

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr "<<<=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    '$'    shift, and go to state 501
    '@'    shift, and go to state 671

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 1016

  388 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 388 (expr_assign_pipe)


State 1017

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  367 expr_assign: expr ">>>=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    '$'    shift, and go to state 501
    '@'    shift, and go to state 671

    $default  reduce using rule 367 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 1018

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  446     | expr "&&" expr .
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 446 (expr)


State 1019

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  447     | expr "||" expr .
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "^^"   shift, and go to state 762
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 447 (expr)


State 1020

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  448     | expr "^^" expr .
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 448 (expr)


State 1021

  377 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 377 (expr_assign_pipe)


State 1022

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  356 expr_assign: expr "&&=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    '$'    shift, and go to state 501
    '@'    shift, and go to state 671

    $default  reduce using rule 356 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 1023

  378 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 378 (expr_assign_pipe)


State 1024

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  357 expr_assign: expr "||=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    '$'    shift, and go to state 501
    '@'    shift, and go to state 671

    $default  reduce using rule 357 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 1025

  379 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 379 (expr_assign_pipe)


State 1026

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_assign: expr "^^=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    '$'    shift, and go to state 501
    '@'    shift, and go to state 671

    $default  reduce using rule 358 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 1027

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  449     | expr ".." expr .
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    ".."  error (nonassociative)

    $default  reduce using rule 449 (expr)


State 1028

  372 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 372 (expr_assign_pipe)


State 1029

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  350 expr_assign: expr '=' expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    '$'    shift, and go to state 501
    '@'    shift, and go to state 671

    $default  reduce using rule 350 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 1030

  480 expr: expr '?' "as" . "name"
  483     | expr '?' "as" . "type" '<' $@32 type_declaration '>' $@33
  484     | expr '?' "as" . basic_type_declaration
  511 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1227
    "bool"      shift, and go to state 314
    "void"      shift, and go to state 315
    "string"    shift, and go to state 316
    "int"       shift, and go to state 318
    "int2"      shift, and go to state 319
    "int3"      shift, and go to state 320
    "int4"      shift, and go to state 321
    "uint"      shift, and go to state 322
    "bitfield"  shift, and go to state 461
    "uint2"     shift, and go to state 324
    "uint3"     shift, and go to state 325
    "uint4"     shift, and go to state 326
    "float"     shift, and go to state 327
    "float2"    shift, and go to state 328
    "float3"    shift, and go to state 329
    "float4"    shift, and go to state 330
    "range"     shift, and go to state 331
    "urange"    shift, and go to state 332
    "range64"   shift, and go to state 333
    "urange64"  shift, and go to state 334
    "int64"     shift, and go to state 336
    "uint64"    shift, and go to state 337
    "double"    shift, and go to state 338
    "int8"      shift, and go to state 341
    "uint8"     shift, and go to state 342
    "int16"     shift, and go to state 343
    "uint16"    shift, and go to state 344
    "$f"        shift, and go to state 1228
    "name"      shift, and go to state 1229

    basic_type_declaration  go to state 1230


State 1031

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  469     | expr '?' expr . ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    ':'    shift, and go to state 1231
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780


State 1032

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  444     | expr '|' expr .
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 444 (expr)


State 1033

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  445     | expr '^' expr .
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 445 (expr)


State 1034

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  443     | expr '&' expr .
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 443 (expr)


State 1035

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  437     | expr '<' expr .
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 437 (expr)


State 1036

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  438     | expr '>' expr .
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 438 (expr)


State 1037

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  433     | expr '-' expr .
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 728
    "as"  shift, and go to state 729
    "++"  shift, and go to state 740
    "--"  shift, and go to state 741
    "->"  shift, and go to state 748
    "??"  shift, and go to state 750
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    "<|"  shift, and go to state 753
    "|>"  shift, and go to state 754
    '*'   shift, and go to state 776
    '/'   shift, and go to state 777
    '%'   shift, and go to state 778
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 433 (expr)


State 1038

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  432     | expr '+' expr .
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 728
    "as"  shift, and go to state 729
    "++"  shift, and go to state 740
    "--"  shift, and go to state 741
    "->"  shift, and go to state 748
    "??"  shift, and go to state 750
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    "<|"  shift, and go to state 753
    "|>"  shift, and go to state 754
    '*'   shift, and go to state 776
    '/'   shift, and go to state 777
    '%'   shift, and go to state 778
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 432 (expr)


State 1039

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  434     | expr '*' expr .
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 728
    "as"  shift, and go to state 729
    "++"  shift, and go to state 740
    "--"  shift, and go to state 741
    "->"  shift, and go to state 748
    "??"  shift, and go to state 750
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    "<|"  shift, and go to state 753
    "|>"  shift, and go to state 754
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 434 (expr)


State 1040

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  435     | expr '/' expr .
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 728
    "as"  shift, and go to state 729
    "++"  shift, and go to state 740
    "--"  shift, and go to state 741
    "->"  shift, and go to state 748
    "??"  shift, and go to state 750
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    "<|"  shift, and go to state 753
    "|>"  shift, and go to state 754
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 435 (expr)


State 1041

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  436     | expr '%' expr .
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 728
    "as"  shift, and go to state 729
    "++"  shift, and go to state 740
    "--"  shift, and go to state 741
    "->"  shift, and go to state 748
    "??"  shift, and go to state 750
    "?."  shift, and go to state 751
    "?["  shift, and go to state 752
    "<|"  shift, and go to state 753
    "|>"  shift, and go to state 754
    '.'   shift, and go to state 779
    '['   shift, and go to state 780

    $default  reduce using rule 436 (expr)


State 1042

  460 expr: expr '.' "?." . "name"
  509 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1232
    "name"  shift, and go to state 1233


State 1043

  458 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1234
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1044

  506 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1235


State 1045

  402 expr_field: expr '.' "name" .
  404           | expr '.' "name" . '(' ')'
  405           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1236

    '('       [reduce using rule 402 (expr_field)]
    $default  reduce using rule 402 (expr_field)


State 1046

  403 expr_field: expr '.' '.' . "name"
  508 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1237
    "name"  shift, and go to state 1238


State 1047

  456 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1239
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1048

  408 expr_field: expr '.' $@26 . error $@27

    error  shift, and go to state 1240


State 1049

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  455     | expr '[' expr . ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ']'    shift, and go to state 1241


State 1050

  412 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 412 (expr_call)


State 1051

  322 expr_list: expr_list . ',' expr
  413 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 856
    ')'  shift, and go to state 1242


State 1052

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  590 enum_list: enum_list "name" '=' expr . "end of expression"

    "is"                 shift, and go to state 728
    "as"                 shift, and go to state 729
    "<<"                 shift, and go to state 738
    ">>"                 shift, and go to state 739
    "++"                 shift, and go to state 740
    "--"                 shift, and go to state 741
    "<="                 shift, and go to state 742
    ">="                 shift, and go to state 745
    "=="                 shift, and go to state 746
    "!="                 shift, and go to state 747
    "->"                 shift, and go to state 748
    "??"                 shift, and go to state 750
    "?."                 shift, and go to state 751
    "?["                 shift, and go to state 752
    "<|"                 shift, and go to state 753
    "|>"                 shift, and go to state 754
    "<<<"                shift, and go to state 756
    ">>>"                shift, and go to state 757
    "&&"                 shift, and go to state 760
    "||"                 shift, and go to state 761
    "^^"                 shift, and go to state 762
    ".."                 shift, and go to state 766
    "end of expression"  shift, and go to state 1243
    '?'                  shift, and go to state 768
    '|'                  shift, and go to state 769
    '^'                  shift, and go to state 770
    '&'                  shift, and go to state 771
    '<'                  shift, and go to state 772
    '>'                  shift, and go to state 773
    '-'                  shift, and go to state 774
    '+'                  shift, and go to state 775
    '*'                  shift, and go to state 776
    '/'                  shift, and go to state 777
    '%'                  shift, and go to state 778
    '.'                  shift, and go to state 779
    '['                  shift, and go to state 780


State 1053

  610 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 . "end of code block"

    "end of code block"  shift, and go to state 1244


State 1054

  118 annotation_list: annotation_list . ',' annotation_declaration
  120 optional_annotation_list: '[' annotation_list . ']'
  535 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' "end of expression"

    ','  shift, and go to state 105
    ']'  shift, and go to state 1245


State 1055

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  534                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "public"   shift, and go to state 1246
    "private"  shift, and go to state 1247

    $default  reduce using rule 522 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1248


State 1056

  527 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1249

    $default  reduce using rule 525 (optional_static_member_variable)

    optional_static_member_variable  go to state 1250


State 1057

  530 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1251


State 1058

  570 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 570 (let_variable_name_with_pos_list)


State 1059

  573 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 573 (let_variable_declaration)


State 1060

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  349 expr_assign: expr .
  350            | expr . '=' expr
  351            | expr . "<-" expr
  352            | expr . ":=" expr
  353            | expr . "&=" expr
  354            | expr . "|=" expr
  355            | expr . "^=" expr
  356            | expr . "&&=" expr
  357            | expr . "||=" expr
  358            | expr . "^^=" expr
  359            | expr . "+=" expr
  360            | expr . "-=" expr
  361            | expr . "*=" expr
  362            | expr . "/=" expr
  363            | expr . "%=" expr
  364            | expr . "<<=" expr
  365            | expr . ">>=" expr
  366            | expr . "<<<=" expr
  367            | expr . ">>>=" expr
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  572 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 728
    "as"                 shift, and go to state 729
    "+="                 shift, and go to state 857
    "-="                 shift, and go to state 858
    "/="                 shift, and go to state 859
    "*="                 shift, and go to state 860
    "%="                 shift, and go to state 861
    "&="                 shift, and go to state 862
    "|="                 shift, and go to state 863
    "^="                 shift, and go to state 864
    "<<"                 shift, and go to state 738
    ">>"                 shift, and go to state 739
    "++"                 shift, and go to state 740
    "--"                 shift, and go to state 741
    "<="                 shift, and go to state 742
    "<<="                shift, and go to state 865
    ">>="                shift, and go to state 866
    ">="                 shift, and go to state 745
    "=="                 shift, and go to state 746
    "!="                 shift, and go to state 747
    "->"                 shift, and go to state 748
    "<-"                 shift, and go to state 867
    "??"                 shift, and go to state 750
    "?."                 shift, and go to state 751
    "?["                 shift, and go to state 752
    "<|"                 shift, and go to state 753
    "|>"                 shift, and go to state 754
    ":="                 shift, and go to state 755
    "<<<"                shift, and go to state 756
    ">>>"                shift, and go to state 757
    "<<<="               shift, and go to state 868
    ">>>="               shift, and go to state 869
    "&&"                 shift, and go to state 760
    "||"                 shift, and go to state 761
    "^^"                 shift, and go to state 762
    "&&="                shift, and go to state 870
    "||="                shift, and go to state 871
    "^^="                shift, and go to state 872
    ".."                 shift, and go to state 766
    "end of expression"  shift, and go to state 1252
    '='                  shift, and go to state 873
    '?'                  shift, and go to state 768
    '|'                  shift, and go to state 769
    '^'                  shift, and go to state 770
    '&'                  shift, and go to state 771
    '<'                  shift, and go to state 772
    '>'                  shift, and go to state 773
    '-'                  shift, and go to state 774
    '+'                  shift, and go to state 775
    '*'                  shift, and go to state 776
    '/'                  shift, and go to state 777
    '%'                  shift, and go to state 778
    '.'                  shift, and go to state 779
    '['                  shift, and go to state 780
    '$'                  shift, and go to state 501
    '@'                  shift, and go to state 671

    $default  reduce using rule 349 (expr_assign)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 1061

  574 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 574 (let_variable_declaration)


State 1062

  690 type_declaration_no_options: "type" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 689 ($@50)

    $@50  go to state 1253


State 1063

  713 type_declaration_no_options: "array" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 712 ($@55)

    $@55  go to state 1254


State 1064

  716 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' . $@57

    $default  reduce using rule 715 ($@57)

    $@57  go to state 1255


State 1065

  679 table_type_pair: type_declaration "end of expression" . type_declaration

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 1256


State 1066

  719 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 718 ($@59)

    $@59  go to state 1257


State 1067

  709 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 708 ($@53)

    $@53  go to state 1258


State 1068

  671 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1259


State 1069

  677 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' . $@48

    $default  reduce using rule 676 ($@48)

    $@48  go to state 1260


State 1070

  723 type_declaration_no_options: "block" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 722 ($@61)

    $@61  go to state 1261


State 1071

  726 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1262


State 1072

  730 type_declaration_no_options: "function" '<' $@64 type_declaration '>' . $@65

    $default  reduce using rule 729 ($@65)

    $@65  go to state 1263


State 1073

  733 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type . '>' $@67

    '>'  shift, and go to state 1264


State 1074

  737 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' . $@69

    $default  reduce using rule 736 ($@69)

    $@69  go to state 1265


State 1075

  740 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type . '>' $@71

    '>'  shift, and go to state 1266


State 1076

  543 tuple_type_list: tuple_type_list "end of expression" . tuple_type

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 606
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    tuple_type                   go to state 1267
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 609


State 1077

  743 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' . $@73

    $default  reduce using rule 742 ($@73)

    $@73  go to state 1268


State 1078

  549 variant_type_list: variant_type_list "end of expression" . variant_type

    "name"  shift, and go to state 611

    variant_type  go to state 1269


State 1079

  746 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' . $@75

    $default  reduce using rule 745 ($@75)

    $@75  go to state 1270


State 1080

  252 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  694 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 1271
    '>'                  shift, and go to state 1272


State 1081

  251 type_declaration_no_options_list: type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415

    $default  reduce using rule 251 (type_declaration_no_options_list)


State 1082

  692 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 692 (type_declaration_no_options)


State 1083

  681 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 681 (dim_list)


State 1084

  541 tuple_type: "name" ':' type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415

    $default  reduce using rule 541 (tuple_type)


State 1085

  547 variant_type: "name" ':' type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415

    $default  reduce using rule 547 (variant_type)


State 1086

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  627 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1273


State 1087

  628 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 628 (variable_name_with_pos_list)


State 1088

  629 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  630                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1274

    $default  reduce using rule 629 (variable_name_with_pos_list)


State 1089

  557 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  558                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 835
    '='   shift, and go to state 837
    '|'   shift, and go to state 415

    $default  reduce using rule 557 (variable_declaration)

    copy_or_move  go to state 1275


State 1090

  560 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 560 (variable_declaration)


State 1091

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  349 expr_assign: expr .
  350            | expr . '=' expr
  351            | expr . "<-" expr
  352            | expr . ":=" expr
  353            | expr . "&=" expr
  354            | expr . "|=" expr
  355            | expr . "^=" expr
  356            | expr . "&&=" expr
  357            | expr . "||=" expr
  358            | expr . "^^=" expr
  359            | expr . "+=" expr
  360            | expr . "-=" expr
  361            | expr . "*=" expr
  362            | expr . "/=" expr
  363            | expr . "%=" expr
  364            | expr . "<<=" expr
  365            | expr . ">>=" expr
  366            | expr . "<<<=" expr
  367            | expr . ">>>=" expr
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  559 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 728
    "as"    shift, and go to state 729
    "+="    shift, and go to state 857
    "-="    shift, and go to state 858
    "/="    shift, and go to state 859
    "*="    shift, and go to state 860
    "%="    shift, and go to state 861
    "&="    shift, and go to state 862
    "|="    shift, and go to state 863
    "^="    shift, and go to state 864
    "<<"    shift, and go to state 738
    ">>"    shift, and go to state 739
    "++"    shift, and go to state 740
    "--"    shift, and go to state 741
    "<="    shift, and go to state 742
    "<<="   shift, and go to state 865
    ">>="   shift, and go to state 866
    ">="    shift, and go to state 745
    "=="    shift, and go to state 746
    "!="    shift, and go to state 747
    "->"    shift, and go to state 748
    "<-"    shift, and go to state 867
    "??"    shift, and go to state 750
    "?."    shift, and go to state 751
    "?["    shift, and go to state 752
    "<|"    shift, and go to state 753
    "|>"    shift, and go to state 754
    ":="    shift, and go to state 755
    "<<<"   shift, and go to state 756
    ">>>"   shift, and go to state 757
    "<<<="  shift, and go to state 868
    ">>>="  shift, and go to state 869
    "&&"    shift, and go to state 760
    "||"    shift, and go to state 761
    "^^"    shift, and go to state 762
    "&&="   shift, and go to state 870
    "||="   shift, and go to state 871
    "^^="   shift, and go to state 872
    ".."    shift, and go to state 766
    '='     shift, and go to state 873
    '?'     shift, and go to state 768
    '|'     shift, and go to state 769
    '^'     shift, and go to state 770
    '&'     shift, and go to state 771
    '<'     shift, and go to state 772
    '>'     shift, and go to state 773
    '-'     shift, and go to state 774
    '+'     shift, and go to state 775
    '*'     shift, and go to state 776
    '/'     shift, and go to state 777
    '%'     shift, and go to state 778
    '.'     shift, and go to state 779
    '['     shift, and go to state 780
    '$'     shift, and go to state 501
    '@'     shift, and go to state 671

    " <|"     reduce using rule 349 (expr_assign)
    $default  reduce using rule 559 (variable_declaration)

    block_or_lambda                go to state 714
    expr_full_block_assumed_piped  go to state 781


State 1092

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  805 make_struct_decl: "struct" '<' $@88 type_declaration_no_options . '>' $@89 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '>'         shift, and go to state 1276
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    dim_list  go to state 414


State 1093

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  808 make_struct_decl: "class" '<' $@90 type_declaration_no_options . '>' $@91 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '>'         shift, and go to state 1277
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    dim_list  go to state 414


State 1094

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 1278
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1095

  270 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415
    '>'  shift, and go to state 1279


State 1096

  796 use_initializer: "uninitialized" .

    $default  reduce using rule 796 (use_initializer)


State 1097

  274 expr_new: "new" new_type_declaration '(' expr_list . ')'
  322 expr_list: expr_list . ',' expr

    ','  shift, and go to state 856
    ')'  shift, and go to state 1280


State 1098

  273 expr_new: "new" new_type_declaration '(' use_initializer . ')'
  275         | "new" new_type_declaration '(' use_initializer . make_struct_single ')'

    "$f"    shift, and go to state 907
    "name"  shift, and go to state 1281
    ')'     shift, and go to state 1282

    make_struct_fields  go to state 954
    make_struct_single  go to state 1283


State 1099

  319 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  320               | "typeinfo" '(' name_in_namespace '<' . "name" "end of expression" "name" '>' expr ')'

    "name"  shift, and go to state 1284


State 1100

  318 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1285


State 1101

  317 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415
    '>'  shift, and go to state 1286


State 1102

  831 make_dim_decl: "array" "struct" '<' $@98 . type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1287


State 1103

  834 make_dim_decl: "array" "tuple" '<' $@100 . type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1288


State 1104

  837 make_dim_decl: "array" "variant" '<' $@102 . type_declaration_no_options '>' $@103 '(' make_struct_dim ')'

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1289


State 1105

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  841 make_dim_decl: "array" '<' $@104 type_declaration_no_options . '>' $@105 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '>'         shift, and go to state 1290
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    dim_list  go to state 414


State 1106

  838 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1291


State 1107

  322 expr_list: expr_list ',' expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 322 (expr_list)


State 1108

  359 expr_assign: expr "+=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 359 (expr_assign)


State 1109

  360 expr_assign: expr "-=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 360 (expr_assign)


State 1110

  362 expr_assign: expr "/=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 362 (expr_assign)


State 1111

  361 expr_assign: expr "*=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 361 (expr_assign)


State 1112

  363 expr_assign: expr "%=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 363 (expr_assign)


State 1113

  353 expr_assign: expr "&=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 353 (expr_assign)


State 1114

  354 expr_assign: expr "|=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 354 (expr_assign)


State 1115

  355 expr_assign: expr "^=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 355 (expr_assign)


State 1116

  364 expr_assign: expr "<<=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 364 (expr_assign)


State 1117

  365 expr_assign: expr ">>=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 365 (expr_assign)


State 1118

  351 expr_assign: expr "<-" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 351 (expr_assign)


State 1119

  366 expr_assign: expr "<<<=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 366 (expr_assign)


State 1120

  367 expr_assign: expr ">>>=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 367 (expr_assign)


State 1121

  356 expr_assign: expr "&&=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 356 (expr_assign)


State 1122

  357 expr_assign: expr "||=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 357 (expr_assign)


State 1123

  358 expr_assign: expr "^^=" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 358 (expr_assign)


State 1124

  350 expr_assign: expr '=' expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 350 (expr_assign)


State 1125

  290 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 290 (expression_try_catch)


State 1126

  854 make_table_decl: "table" '<' type_declaration_no_options "end of expression" . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1292


State 1127

  853 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1293


State 1128

  852 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1294


State 1129

  464 expr: "deref" '(' expr ')' .

    $default  reduce using rule 464 (expr)


State 1130

   81 expression_with_alias: "assume" "name" '=' $@5 . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1295
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1131

  308 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '>'         shift, and go to state 1296
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    dim_list  go to state 414


State 1132

  311 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '>'         shift, and go to state 1297
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    dim_list  go to state 414


State 1133

  465 expr: "addr" '(' expr ')' .

    $default  reduce using rule 465 (expr)


State 1134

  314 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '>'         shift, and go to state 1298
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    dim_list  go to state 414


State 1135

  496 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 496 (expr)


State 1136

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  845 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options . '>' $@107 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '>'         shift, and go to state 1299
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    dim_list  go to state 414


State 1137

  842 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1300


State 1138

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  814 make_struct_decl: "default" '<' $@94 type_declaration_no_options . '>' $@95 use_initializer

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '>'         shift, and go to state 1301
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    dim_list  go to state 414


State 1139

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  823 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options . '>' $@97 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '>'         shift, and go to state 1302
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    dim_list  go to state 414


State 1140

  820 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1303


State 1141

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  811 make_struct_decl: "variant" '<' $@92 type_declaration_no_options . '>' $@93 '(' make_struct_dim ')'

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '>'         shift, and go to state 1304
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    dim_list  go to state 414


State 1142

  466 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  467     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 960

    $default  reduce using rule 335 (optional_capture_list)

    optional_capture_list  go to state 1305


State 1143

  338 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1306


State 1144

  498 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 498 (expr_mtag)


State 1145

  499 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 499 (expr_mtag)


State 1146

  500 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 500 (expr_mtag)


State 1147

  501 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 501 (expr_mtag)


State 1148

  502 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 502 (expr_mtag)


State 1149

  504 expr_mtag: "$c" '(' expr ')' . '(' ')'
  505          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1307


State 1150

  861 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 1308
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1151

  782 optional_block: "where" expr_block .

    $default  reduce using rule 782 (optional_block)


State 1152

  774 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  775                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1309
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1153

  771 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1310
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1154

  770 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1311
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1155

  695 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  826 make_dim_decl: '[' . expr_list optional_comma ']'
  859 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  860                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "for"                             shift, and go to state 704
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "iterator"                        shift, and go to state 705
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    ']'                               shift, and go to state 821
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 706
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1156

  321 expr_list: expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  680 dim_list: '[' expr . ']'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ']'    shift, and go to state 822

    ']'       [reduce using rule 321 (expr_list)]
    $default  reduce using rule 321 (expr_list)


State 1157

  799 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  800                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 906
    "$f"     shift, and go to state 907
    "name"   shift, and go to state 1281

    $default  reduce using rule 781 (optional_block)

    make_struct_fields  go to state 913
    make_struct_dim     go to state 1312
    optional_block      go to state 1313


State 1158

  816 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1314
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1159

  772 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  773                   | make_struct_fields ',' . "name" ":=" expr
  776                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1315
    "name"  shift, and go to state 1316


State 1160

  780 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 907
    "name"  shift, and go to state 1281

    make_struct_fields  go to state 1317


State 1161

  797 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1162
    ",]]"  shift, and go to state 1163
    ']'    shift, and go to state 1164

    optional_trailing_delim_sqr_sqr  go to state 1318


State 1162

  790 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 790 (optional_trailing_delim_sqr_sqr)


State 1163

  791 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 791 (optional_trailing_delim_sqr_sqr)


State 1164

  789 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1319


State 1165

  798 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 798 (make_struct_decl)


State 1166

  817 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1320
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1167

  825 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 912
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple              go to state 1321
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1168

  788 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 788 (optional_trailing_semicolon_sqr_sqr)


State 1169

  787 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1322


State 1170

  827 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 827 (make_dim_decl)


State 1171

  862 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 1323
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1172

  802 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 907
    "name"  shift, and go to state 1281

    make_struct_fields  go to state 913
    make_struct_dim     go to state 1324


State 1173

  801 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1325
    ";}]"                shift, and go to state 1326
    ",}]"                shift, and go to state 1327

    optional_trailing_delim_cur_sqr  go to state 1328


State 1174

  785 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1329


State 1175

  786 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 786 (optional_trailing_semicolon_cur_sqr)


State 1176

  828 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 828 (make_dim_decl)


State 1177

  864 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 1330
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1178

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  818 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 818 (make_map_tuple)


State 1179

  783 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 783 (optional_trailing_semicolon_cur_cur)


State 1180

  847 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 847 (make_table)


State 1181

  252 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  255 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list . '>' $@8 expr

    "end of expression"  shift, and go to state 1271
    '>'                  shift, and go to state 1331


State 1182

  252 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  258 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list . '>' $@10 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 1271
    '>'                  shift, and go to state 1332


State 1183

   30 string_builder_body: string_builder_body "{" expr . "}"
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    "}"    shift, and go to state 1333
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780


State 1184

  863 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 1334
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1185

  849 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 849 (expr_map_tuple_list)


State 1186

  850 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 850 (make_table_decl)


State 1187

  219 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  244 expressions: expressions . expression_any
  245            | expressions . error

    error                             shift, and go to state 428
    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 431
    "if"                              shift, and go to state 432
    "static_if"                       shift, and go to state 433
    "for"                             shift, and go to state 434
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "return"                          shift, and go to state 441
    "null"                            shift, and go to state 442
    "break"                           shift, and go to state 443
    "try"                             shift, and go to state 444
    "table"                           shift, and go to state 445
    "delete"                          shift, and go to state 446
    "deref"                           shift, and go to state 447
    "with"                            shift, and go to state 448
    "assume"                          shift, and go to state 449
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 452
    "continue"                        shift, and go to state 453
    "pass"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 455
    "label"                           shift, and go to state 456
    "goto"                            shift, and go to state 457
    "unsafe"                          shift, and go to state 458
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "yield"                           shift, and go to state 465
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$ <|"                            shift, and go to state 468
    "@ <|"                            shift, and go to state 469
    "@@ <|"                           shift, and go to state 470
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 488
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    "end of code block"               shift, and go to state 1335
    "end of expression"               shift, and go to state 493
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder             go to state 503
    expr_reader                go to state 504
    expression_label           go to state 505
    expression_goto            go to state 506
    if_or_static_if            go to state 507
    expression_if_one_liner    go to state 508
    expression_if_then_else    go to state 509
    expression_for_loop        go to state 510
    expression_unsafe          go to state 511
    expression_while_loop      go to state 512
    expression_with            go to state 513
    expression_with_alias      go to state 514
    expr_call_pipe             go to state 515
    expression_any             go to state 516
    expr_keyword               go to state 517
    expression_keyword         go to state 518
    expr_pipe                  go to state 519
    name_in_namespace          go to state 520
    expression_delete          go to state 521
    expr_new                   go to state 522
    expression_break           go to state 523
    expression_continue        go to state 524
    expression_return_no_pipe  go to state 525
    expression_return          go to state 526
    expression_yield_no_pipe   go to state 527
    expression_yield           go to state 528
    expression_try_catch       go to state 529
    kwd_let                    go to state 530
    expression_let             go to state 531
    expr_cast                  go to state 532
    expr_type_decl             go to state 533
    expr_type_info             go to state 534
    block_or_lambda            go to state 535
    expr_full_block            go to state 536
    expr_numeric_const         go to state 537
    expr_assign                go to state 538
    expr_assign_pipe           go to state 539
    expr_named_call            go to state 540
    expr_method_call           go to state 541
    func_addr_expr             go to state 542
    expr_field                 go to state 543
    expr_call                  go to state 544
    expr                       go to state 545
    expr_mtag                  go to state 546
    basic_type_declaration     go to state 547
    make_decl                  go to state 548
    make_struct_decl           go to state 549
    make_tuple_call            go to state 550
    make_dim_decl              go to state 551
    make_table_decl            go to state 552
    array_comprehension        go to state 553


State 1188

  859 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 1336
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1189

  629 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  630                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  860 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1337
    ','   shift, and go to state 836


State 1190

  826 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 826 (make_dim_decl)


State 1191

  454 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 454 (expr)


State 1192

  394 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1338
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1193

  513 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1339
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1194

  398 func_addr_expr: '@' '@' '<' $@22 . type_declaration_no_options '>' $@23 func_addr_name

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1340


State 1195

  401 func_addr_expr: '@' '@' '<' $@24 . optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    '('  shift, and go to state 282

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1341


State 1196

   60 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 1342


State 1197

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1198

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1199

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1343
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1200

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 72 (expression_if_then_else)


State 1201

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner "end of expression"
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1344
    "is"    shift, and go to state 728
    "as"    shift, and go to state 729
    "<<"    shift, and go to state 738
    ">>"    shift, and go to state 739
    "++"    shift, and go to state 740
    "--"    shift, and go to state 741
    "<="    shift, and go to state 742
    ">="    shift, and go to state 745
    "=="    shift, and go to state 746
    "!="    shift, and go to state 747
    "->"    shift, and go to state 748
    "??"    shift, and go to state 750
    "?."    shift, and go to state 751
    "?["    shift, and go to state 752
    "<|"    shift, and go to state 753
    "|>"    shift, and go to state 754
    "<<<"   shift, and go to state 756
    ">>>"   shift, and go to state 757
    "&&"    shift, and go to state 760
    "||"    shift, and go to state 761
    "^^"    shift, and go to state 762
    ".."    shift, and go to state 766
    '?'     shift, and go to state 768
    '|'     shift, and go to state 769
    '^'     shift, and go to state 770
    '&'     shift, and go to state 771
    '<'     shift, and go to state 772
    '>'     shift, and go to state 773
    '-'     shift, and go to state 774
    '+'     shift, and go to state 775
    '*'     shift, and go to state 776
    '/'     shift, and go to state 777
    '%'     shift, and go to state 778
    '.'     shift, and go to state 779
    '['     shift, and go to state 780

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1345


State 1202

  341 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "[["  shift, and go to state 960

    $default  reduce using rule 335 (optional_capture_list)

    optional_capture_list  go to state 1346


State 1203

  389 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  772 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  773                   | make_struct_fields . ',' "name" ":=" expr
  776                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1159
    ']'  shift, and go to state 1347


State 1204

  322 expr_list: expr_list ',' . expr
  390 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 1348
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1107
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1205

  411 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 411 (expr_call)


State 1206

  410 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 410 (expr_call)


State 1207

  298 tuple_expansion: "name" .

    $default  reduce using rule 298 (tuple_expansion)


State 1208

  299 tuple_expansion: tuple_expansion . ',' "name"
  300 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  302                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1349
    ']'  shift, and go to state 1350


State 1209

  299 tuple_expansion: tuple_expansion . ',' "name"
  301 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  303                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1349
    ')'  shift, and go to state 1351


State 1210

  331 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1352


State 1211

  332 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1353


State 1212

  330 capture_entry: '=' . "name"

    "name"  shift, and go to state 1354


State 1213

  329 capture_entry: '&' . "name"

    "name"  shift, and go to state 1355


State 1214

  333 capture_list: capture_entry .

    $default  reduce using rule 333 (capture_list)


State 1215

  334 capture_list: capture_list . ',' capture_entry
  336 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1356
    ']'  shift, and go to state 1357


State 1216

  339 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 371

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1358


State 1217

  472 expr: expr "is" "type" '<' . $@28 type_declaration_no_options '>' $@29

    $default  reduce using rule 470 ($@28)

    $@28  go to state 1359


State 1218

  512 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1360
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1219

  478 expr: expr "as" "type" '<' . $@30 type_declaration '>' $@31

    $default  reduce using rule 476 ($@30)

    $@30  go to state 1361


State 1220

  510 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1362
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1221

  370 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 370 (expr_assign_pipe_right)


State 1222

  368 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 368 (expr_assign_pipe_right)


State 1223

  369 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 369 (expr_assign_pipe_right)


State 1224

  391 expr_method_call: expr "->" "name" '(' . ')'
  392                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    ')'                               shift, and go to state 1363
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 1364
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1225

  507 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1365
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1226

  457 expr: expr "?[" expr ']' .

    $default  reduce using rule 457 (expr)


State 1227

  483 expr: expr '?' "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 1366


State 1228

  511 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1367


State 1229

  480 expr: expr '?' "as" "name" .

    $default  reduce using rule 480 (expr)


State 1230

  484 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 484 (expr)


State 1231

  469 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1368
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1232

  509 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1369


State 1233

  460 expr: expr '.' "?." "name" .

    $default  reduce using rule 460 (expr)


State 1234

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  458     | expr '.' "?[" expr . ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ']'    shift, and go to state 1370


State 1235

  506 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1371
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1236

  404 expr_field: expr '.' "name" '(' . ')'
  405           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    ')'                               shift, and go to state 1372
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 1373
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1237

  508 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1374


State 1238

  403 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 403 (expr_field)


State 1239

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  456     | expr '.' '[' expr . ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ']'    shift, and go to state 1375


State 1240

  408 expr_field: expr '.' $@26 error . $@27

    $default  reduce using rule 407 ($@27)

    $@27  go to state 1376


State 1241

  455 expr: expr '[' expr ']' .

    $default  reduce using rule 455 (expr)


State 1242

  413 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 413 (expr_call)


State 1243

  590 enum_list: enum_list "name" '=' expr "end of expression" .

    $default  reduce using rule 590 (enum_list)


State 1244

  610 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block" .

    $default  reduce using rule 610 (enum_declaration)


State 1245

  120 optional_annotation_list: '[' annotation_list ']' .
  535 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . "end of expression"

    "end of expression"  shift, and go to state 1377

    $default  reduce using rule 120 (optional_annotation_list)


State 1246

  523 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 523 (optional_public_or_private_member_variable)


State 1247

  524 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 524 (optional_public_or_private_member_variable)


State 1248

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@35 function_declaration_header "end of expression"
  534                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "abstract"  shift, and go to state 1378
    "static"    shift, and go to state 1249

    $default  reduce using rule 525 (optional_static_member_variable)

    optional_static_member_variable  go to state 1379


State 1249

  526 optional_static_member_variable: "static" .

    $default  reduce using rule 526 (optional_static_member_variable)


State 1250

  527 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1380
    "sealed"    shift, and go to state 1381

    $default  reduce using rule 517 (optional_override)

    optional_override  go to state 1382


State 1251

  530 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression" .

    $default  reduce using rule 530 (struct_variable_declaration_list)


State 1252

  572 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 572 (let_variable_declaration)


State 1253

  690 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 690 (type_declaration_no_options)


State 1254

  713 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 713 (type_declaration_no_options)


State 1255

  716 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57 .

    $default  reduce using rule 716 (type_declaration_no_options)


State 1256

  679 table_type_pair: type_declaration "end of expression" type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415

    $default  reduce using rule 679 (table_type_pair)


State 1257

  719 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 719 (type_declaration_no_options)


State 1258

  709 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 709 (type_declaration_no_options)


State 1259

  671 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 671 (bitfield_bits)


State 1260

  677 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48 .

    $default  reduce using rule 677 (bitfield_type_declaration)


State 1261

  723 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 723 (type_declaration_no_options)


State 1262

  726 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 725 ($@63)

    $@63  go to state 1383


State 1263

  730 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65 .

    $default  reduce using rule 730 (type_declaration_no_options)


State 1264

  733 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' . $@67

    $default  reduce using rule 732 ($@67)

    $@67  go to state 1384


State 1265

  737 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69 .

    $default  reduce using rule 737 (type_declaration_no_options)


State 1266

  740 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' . $@71

    $default  reduce using rule 739 ($@71)

    $@71  go to state 1385


State 1267

  543 tuple_type_list: tuple_type_list "end of expression" tuple_type .

    $default  reduce using rule 543 (tuple_type_list)


State 1268

  743 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73 .

    $default  reduce using rule 743 (type_declaration_no_options)


State 1269

  549 variant_type_list: variant_type_list "end of expression" variant_type .

    $default  reduce using rule 549 (variant_type_list)


State 1270

  746 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75 .

    $default  reduce using rule 746 (type_declaration_no_options)


State 1271

  252 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" . type_declaration

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 1386


State 1272

  694 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1387


State 1273

  627 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 627 (variable_name_with_pos_list)


State 1274

  630 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1388


State 1275

  558 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1389
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1276

  805 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' . $@89 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 804 ($@89)

    $@89  go to state 1390


State 1277

  808 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' . $@91 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 807 ($@91)

    $@91  go to state 1391


State 1278

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  322 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 284
    ','                    shift, and go to state 856

    expression_block  go to state 1392


State 1279

  270 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 269 ($@12)

    $@12  go to state 1393


State 1280

  274 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 274 (expr_new)


State 1281

  770 make_struct_fields: "name" . copy_or_move expr
  771                   | "name" . ":=" expr

    "<-"  shift, and go to state 835
    ":="  shift, and go to state 1153
    '='   shift, and go to state 837

    copy_or_move  go to state 1154


State 1282

  273 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 273 (expr_new)


State 1283

  275 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single . ')'

    ')'  shift, and go to state 1394


State 1284

  319 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  320               | "typeinfo" '(' name_in_namespace '<' "name" . "end of expression" "name" '>' expr ')'

    "end of expression"  shift, and go to state 1395
    '>'                  shift, and go to state 1396


State 1285

  318 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 318 (expr_type_info)


State 1286

  317 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 316 ($@20)

    $@20  go to state 1397


State 1287

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  831 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options . '>' $@99 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '>'         shift, and go to state 1398
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    dim_list  go to state 414


State 1288

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  834 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options . '>' $@101 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '>'         shift, and go to state 1399
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    dim_list  go to state 414


State 1289

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  837 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options . '>' $@103 '(' make_struct_dim ')'

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '>'         shift, and go to state 1400
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    dim_list  go to state 414


State 1290

  841 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' . $@105 '(' expr_list optional_comma ')'

    $default  reduce using rule 840 ($@105)

    $@105  go to state 1401


State 1291

  838 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 838 (make_dim_decl)


State 1292

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  854 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '>'         shift, and go to state 1402
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    dim_list  go to state 414


State 1293

  853 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 688
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_map_tuple          go to state 696
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    expr_map_tuple_list     go to state 1403
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1294

  852 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 852 (make_table_decl)


State 1295

   81 expression_with_alias: "assume" "name" '=' $@5 expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 81 (expression_with_alias)


State 1296

  308 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 307 ($@14)

    $@14  go to state 1404


State 1297

  311 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 310 ($@16)

    $@16  go to state 1405


State 1298

  314 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 313 ($@18)

    $@18  go to state 1406


State 1299

  845 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' . $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 844 ($@107)

    $@107  go to state 1407


State 1300

  842 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 842 (make_dim_decl)


State 1301

  814 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' . $@95 use_initializer

    $default  reduce using rule 813 ($@95)

    $@95  go to state 1408


State 1302

  823 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' . $@97 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 822 ($@97)

    $@97  go to state 1409


State 1303

  820 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 820 (make_tuple_call)


State 1304

  811 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' . $@93 '(' make_struct_dim ')'

    $default  reduce using rule 810 ($@93)

    $@93  go to state 1410


State 1305

  466 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  467     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1411


State 1306

  338 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 371

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1412


State 1307

  504 expr_mtag: "$c" '(' expr ')' '(' . ')'
  505          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    ')'                               shift, and go to state 1413
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 1414
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1308

  322 expr_list: expr_list . ',' expr
  861 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1415
    ','                  shift, and go to state 856


State 1309

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  774 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  775                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1416


State 1310

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  771 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 771 (make_struct_fields)


State 1311

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  770 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 770 (make_struct_fields)


State 1312

  780 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  800 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 906
    "end of expression"  shift, and go to state 1160

    $default  reduce using rule 781 (optional_block)

    optional_block  go to state 1417


State 1313

  799 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1162
    ",]]"  shift, and go to state 1163
    ']'    shift, and go to state 1164

    optional_trailing_delim_sqr_sqr  go to state 1418


State 1314

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  816 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 816 (make_tuple)


State 1315

  776 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  777                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1419


State 1316

  772 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  773                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 835
    ":="  shift, and go to state 1420
    '='   shift, and go to state 837

    copy_or_move  go to state 1421


State 1317

  772 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  773                   | make_struct_fields . ',' "name" ":=" expr
  776                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  780 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1159

    $default  reduce using rule 780 (make_struct_dim)


State 1318

  797 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 797 (make_struct_decl)


State 1319

  789 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 789 (optional_trailing_delim_sqr_sqr)


State 1320

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  817 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 817 (make_tuple)


State 1321

  817 make_tuple: make_tuple . ',' expr
  825 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1166

    $default  reduce using rule 825 (make_dim)


State 1322

  787 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 787 (optional_trailing_semicolon_sqr_sqr)


State 1323

  322 expr_list: expr_list . ',' expr
  862 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1422
    ','                  shift, and go to state 856


State 1324

  780 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  802 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 906
    "end of expression"  shift, and go to state 1160

    $default  reduce using rule 781 (optional_block)

    optional_block  go to state 1423


State 1325

  792 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1424


State 1326

  793 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 793 (optional_trailing_delim_cur_sqr)


State 1327

  794 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 794 (optional_trailing_delim_cur_sqr)


State 1328

  801 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 801 (make_struct_decl)


State 1329

  785 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 785 (optional_trailing_semicolon_cur_sqr)


State 1330

  322 expr_list: expr_list . ',' expr
  864 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1425
    ','                  shift, and go to state 856


State 1331

  255 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' . $@8 expr

    $default  reduce using rule 254 ($@8)

    $@8  go to state 1426


State 1332

  258 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' . $@10 optional_expr_list_in_braces

    $default  reduce using rule 257 ($@10)

    $@10  go to state 1427


State 1333

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1334

  322 expr_list: expr_list . ',' expr
  863 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1428
    ','                  shift, and go to state 856


State 1335

  219 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 219 (expression_block)


State 1336

  322 expr_list: expr_list . ',' expr
  859 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1429
    ','                  shift, and go to state 856


State 1337

  860 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 1430
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1338

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  394 func_addr_name: "$i" '(' expr . ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1431


State 1339

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  513          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1432


State 1340

  398 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options . '>' $@23 func_addr_name
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '>'         shift, and go to state 1433
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    dim_list  go to state 414


State 1341

  401 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list . optional_function_type '>' $@25 func_addr_name

    ':'  shift, and go to state 371

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1434


State 1342

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1343

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 728
    "as"                   shift, and go to state 729
    "<<"                   shift, and go to state 738
    ">>"                   shift, and go to state 739
    "++"                   shift, and go to state 740
    "--"                   shift, and go to state 741
    "<="                   shift, and go to state 742
    ">="                   shift, and go to state 745
    "=="                   shift, and go to state 746
    "!="                   shift, and go to state 747
    "->"                   shift, and go to state 748
    "??"                   shift, and go to state 750
    "?."                   shift, and go to state 751
    "?["                   shift, and go to state 752
    "<|"                   shift, and go to state 753
    "|>"                   shift, and go to state 754
    "<<<"                  shift, and go to state 756
    ">>>"                  shift, and go to state 757
    "&&"                   shift, and go to state 760
    "||"                   shift, and go to state 761
    "^^"                   shift, and go to state 762
    ".."                   shift, and go to state 766
    "begin of code block"  shift, and go to state 284
    '?'                    shift, and go to state 768
    '|'                    shift, and go to state 769
    '^'                    shift, and go to state 770
    '&'                    shift, and go to state 771
    '<'                    shift, and go to state 772
    '>'                    shift, and go to state 773
    '-'                    shift, and go to state 774
    '+'                    shift, and go to state 775
    '*'                    shift, and go to state 776
    '/'                    shift, and go to state 777
    '%'                    shift, and go to state 778
    '.'                    shift, and go to state 779
    '['                    shift, and go to state 780

    expression_block  go to state 1435


State 1344

   66 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 65 ($@2)

    $@2  go to state 1436


State 1345

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1437


State 1346

  341 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 282

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1438


State 1347

  389 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1439


State 1348

  390 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  826 make_dim_decl: '[' . expr_list optional_comma ']'
  859 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  860                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "for"                             shift, and go to state 704
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "iterator"                        shift, and go to state 705
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "$f"                              shift, and go to state 907
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 908
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 706
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_fields      go to state 1440
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1349

  299 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1441


State 1350

  300 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  302                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ']'  shift, and go to state 1442


State 1351

  301 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  303                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1443
    '&'  shift, and go to state 387

    $default  reduce using rule 564 (optional_ref)

    optional_ref  go to state 1444


State 1352

  331 capture_entry: "<-" "name" .

    $default  reduce using rule 331 (capture_entry)


State 1353

  332 capture_entry: ":=" "name" .

    $default  reduce using rule 332 (capture_entry)


State 1354

  330 capture_entry: '=' "name" .

    $default  reduce using rule 330 (capture_entry)


State 1355

  329 capture_entry: '&' "name" .

    $default  reduce using rule 329 (capture_entry)


State 1356

  334 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1210
    ":="  shift, and go to state 1211
    '='   shift, and go to state 1212
    '&'   shift, and go to state 1213

    capture_entry  go to state 1445


State 1357

  336 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1446


State 1358

  339 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1447
    "begin of code block"  shift, and go to state 284

    expression_block       go to state 1448
    block_or_simple_block  go to state 1449


State 1359

  472 expr: expr "is" "type" '<' $@28 . type_declaration_no_options '>' $@29

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1450


State 1360

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  512          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1451


State 1361

  478 expr: expr "as" "type" '<' $@30 . type_declaration '>' $@31

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 1452


State 1362

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  510          | expr "as" "$f" '(' expr . ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1453


State 1363

  391 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 391 (expr_method_call)


State 1364

  322 expr_list: expr_list . ',' expr
  392 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 856
    ')'  shift, and go to state 1454


State 1365

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  507          | expr "?." "$f" '(' expr . ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1455


State 1366

  483 expr: expr '?' "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 481 ($@32)

    $@32  go to state 1456


State 1367

  511 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1457
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1368

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  469     | expr '?' expr ':' expr .
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 469 (expr)


State 1369

  509 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1458
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1370

  458 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 458 (expr)


State 1371

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr '.' "$f" '(' expr . ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1459


State 1372

  404 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 404 (expr_field)


State 1373

  322 expr_list: expr_list . ',' expr
  405 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 856
    ')'  shift, and go to state 1460


State 1374

  508 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1461
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1375

  456 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 456 (expr)


State 1376

  408 expr_field: expr '.' $@26 error $@27 .

    $default  reduce using rule 408 (expr_field)


State 1377

  535 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' "end of expression" .

    $default  reduce using rule 535 (struct_variable_declaration_list)


State 1378

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@35 function_declaration_header "end of expression"

    "const"  shift, and go to state 1462

    $default  reduce using rule 520 (optional_constant)

    optional_constant  go to state 1463


State 1379

  534 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@36 function_declaration_header expression_block

    "override"  shift, and go to state 1380
    "sealed"    shift, and go to state 1381

    $default  reduce using rule 517 (optional_override)

    optional_override  go to state 1464


State 1380

  518 optional_override: "override" .

    $default  reduce using rule 518 (optional_override)


State 1381

  519 optional_override: "sealed" .

    $default  reduce using rule 519 (optional_override)


State 1382

  527 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1246
    "private"  shift, and go to state 1247

    $default  reduce using rule 522 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1465


State 1383

  726 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 726 (type_declaration_no_options)


State 1384

  733 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67 .

    $default  reduce using rule 733 (type_declaration_no_options)


State 1385

  740 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71 .

    $default  reduce using rule 740 (type_declaration_no_options)


State 1386

  252 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415

    $default  reduce using rule 252 (type_declaration_no_options_list)


State 1387

  694 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    $default  reduce using rule 247 (optional_expr_list)

    string_builder          go to state 503
    expr_reader             go to state 504
    optional_expr_list      go to state 1466
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 820
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1388

  630 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 630 (variable_name_with_pos_list)


State 1389

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  558 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 558 (variable_declaration)


State 1390

  805 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1467


State 1391

  808 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1468


State 1392

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 76 (expression_for_loop)


State 1393

  270 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 270 (new_type_declaration)


State 1394

  275 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single ')' .

    $default  reduce using rule 275 (expr_new)


State 1395

  320 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" . "name" '>' expr ')'

    "name"  shift, and go to state 1469


State 1396

  319 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1470
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1397

  317 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 317 (expr_type_decl)


State 1398

  831 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' . $@99 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 830 ($@99)

    $@99  go to state 1471


State 1399

  834 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' . $@101 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 833 ($@101)

    $@101  go to state 1472


State 1400

  837 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' . $@103 '(' make_struct_dim ')'

    $default  reduce using rule 836 ($@103)

    $@103  go to state 1473


State 1401

  841 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1474


State 1402

  854 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1475


State 1403

  849 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  853 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 935

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 1476


State 1404

  308 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1477
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1405

  311 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1478
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1406

  314 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1479
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1407

  845 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1480


State 1408

  814 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 . use_initializer

    "uninitialized"  shift, and go to state 1096

    $default  reduce using rule 795 (use_initializer)

    use_initializer  go to state 1481


State 1409

  823 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1482


State 1410

  811 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 . '(' make_struct_dim ')'

    '('  shift, and go to state 1483


State 1411

  466 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  467     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    ')'                               shift, and go to state 1484
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1485
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1412

  338 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1447
    "begin of code block"  shift, and go to state 284

    expression_block       go to state 1448
    block_or_simple_block  go to state 1486


State 1413

  504 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 504 (expr_mtag)


State 1414

  322 expr_list: expr_list . ',' expr
  505 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 856
    ')'  shift, and go to state 1487


State 1415

  861 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1488
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1416

  774 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  775                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 835
    ":="  shift, and go to state 1489
    '='   shift, and go to state 837

    copy_or_move  go to state 1490


State 1417

  800 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1162
    ",]]"  shift, and go to state 1163
    ']'    shift, and go to state 1164

    optional_trailing_delim_sqr_sqr  go to state 1491


State 1418

  799 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 799 (make_struct_decl)


State 1419

  776 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  777                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1492
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1420

  773 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1493
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1421

  772 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1494
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1422

  862 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1495
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1423

  802 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1325
    ";}]"                shift, and go to state 1326
    ",}]"                shift, and go to state 1327

    optional_trailing_delim_cur_sqr  go to state 1496


State 1424

  792 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 792 (optional_trailing_delim_cur_sqr)


State 1425

  864 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 688
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_map_tuple          go to state 1497
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1426

  255 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1498
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1427

  258 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 . optional_expr_list_in_braces

    '('  shift, and go to state 1499

    '('       [reduce using rule 249 (optional_expr_list_in_braces)]
    $default  reduce using rule 249 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1500


State 1428

  863 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 688
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_map_tuple          go to state 1501
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1429

  859 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1502
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1430

  322 expr_list: expr_list . ',' expr
  860 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1503
    ','                  shift, and go to state 856


State 1431

  394 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 394 (func_addr_name)


State 1432

  513 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 513 (expr_mtag)


State 1433

  398 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' . $@23 func_addr_name

    $default  reduce using rule 397 ($@23)

    $@23  go to state 1504


State 1434

  401 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type . '>' $@25 func_addr_name

    '>'  shift, and go to state 1505


State 1435

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1196
    "elif"         shift, and go to state 1197
    "static_elif"  shift, and go to state 1198

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1199
    expression_else      go to state 1506


State 1436

   66 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "return"                          shift, and go to state 1507
    "null"                            shift, and go to state 442
    "break"                           shift, and go to state 443
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "continue"                        shift, and go to state 453
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "yield"                           shift, and go to state 1508
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder             go to state 503
    expr_reader                go to state 504
    expression_if_one_liner    go to state 1509
    expression_keyword         go to state 564
    name_in_namespace          go to state 520
    expr_new                   go to state 522
    expression_break           go to state 1510
    expression_continue        go to state 1511
    expression_return_no_pipe  go to state 1512
    expression_yield_no_pipe   go to state 1513
    expr_cast                  go to state 532
    expr_type_decl             go to state 533
    expr_type_info             go to state 534
    block_or_lambda            go to state 535
    expr_full_block            go to state 536
    expr_numeric_const         go to state 537
    expr_named_call            go to state 540
    expr_method_call           go to state 541
    func_addr_expr             go to state 542
    expr_field                 go to state 543
    expr_call                  go to state 544
    expr                       go to state 1514
    expr_mtag                  go to state 546
    basic_type_declaration     go to state 547
    make_decl                  go to state 548
    make_struct_decl           go to state 549
    make_tuple_call            go to state 550
    make_dim_decl              go to state 551
    make_table_decl            go to state 552
    array_comprehension        go to state 553


State 1437

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 74 (expression_if_then_else)


State 1438

  341 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 371

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1515


State 1439

  389 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 389 (expr_named_call)


State 1440

  390 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  772 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  773                   | make_struct_fields . ',' "name" ":=" expr
  776                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1159
    ']'  shift, and go to state 1516


State 1441

  299 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 299 (tuple_expansion)


State 1442

  300 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  302                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1517
    '&'  shift, and go to state 387

    $default  reduce using rule 564 (optional_ref)

    optional_ref  go to state 1518


State 1443

  301 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1519


State 1444

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 569
    ":="  shift, and go to state 570
    '='   shift, and go to state 571

    copy_or_move_or_clone  go to state 1520


State 1445

  334 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 334 (capture_list)


State 1446

  336 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 336 (optional_capture_list)


State 1447

  324 block_or_simple_block: "=>" . expr
  325                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "<-"                              shift, and go to state 1521
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1522
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1448

  323 block_or_simple_block: expression_block .

    $default  reduce using rule 323 (block_or_simple_block)


State 1449

  339 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 339 (expr_full_block)


State 1450

  472 expr: expr "is" "type" '<' $@28 type_declaration_no_options . '>' $@29
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "??"        shift, and go to state 408
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '>'         shift, and go to state 1523
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    dim_list  go to state 414


State 1451

  512 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 512 (expr_mtag)


State 1452

  478 expr: expr "as" "type" '<' $@30 type_declaration . '>' $@31
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415
    '>'  shift, and go to state 1524


State 1453

  510 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 510 (expr_mtag)


State 1454

  392 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 392 (expr_method_call)


State 1455

  507 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 507 (expr_mtag)


State 1456

  483 expr: expr '?' "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 354
    type_declaration             go to state 1525


State 1457

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr '?' "as" "$f" '(' expr . ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1526


State 1458

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr '.' "?." "$f" '(' expr . ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1527


State 1459

  506 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 506 (expr_mtag)


State 1460

  405 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 405 (expr_field)


State 1461

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr '.' '.' "$f" '(' expr . ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1528


State 1462

  521 optional_constant: "const" .

    $default  reduce using rule 521 (optional_constant)


State 1463

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@35 function_declaration_header "end of expression"

    $default  reduce using rule 531 ($@35)

    $@35  go to state 1529


State 1464

  534 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@36 function_declaration_header expression_block

    "const"  shift, and go to state 1462

    $default  reduce using rule 520 (optional_constant)

    optional_constant  go to state 1530


State 1465

  527 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 616
    "name"  shift, and go to state 617

    variable_declaration         go to state 1531
    variable_name_with_pos_list  go to state 619


State 1466

  694 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1532


State 1467

  805 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1096

    $default  reduce using rule 795 (use_initializer)

    use_initializer  go to state 1533


State 1468

  808 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1096

    $default  reduce using rule 795 (use_initializer)

    use_initializer  go to state 1534


State 1469

  320 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" . '>' expr ')'

    '>'  shift, and go to state 1535


State 1470

  319 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1536


State 1471

  831 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1537


State 1472

  834 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1538


State 1473

  837 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 . '(' make_struct_dim ')'

    '('  shift, and go to state 1539


State 1474

  841 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 1540
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1475

  854 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 688
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_map_tuple          go to state 696
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    expr_map_tuple_list     go to state 1541
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1476

  853 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1542


State 1477

  308 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 308 (expr_cast)


State 1478

  311 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 311 (expr_cast)


State 1479

  314 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 314 (expr_cast)


State 1480

  845 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 1543
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1481

  814 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer .

    $default  reduce using rule 814 (make_struct_decl)


State 1482

  823 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1096

    $default  reduce using rule 795 (use_initializer)

    use_initializer  go to state 1544


State 1483

  811 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 907
    "name"  shift, and go to state 1281

    make_struct_fields  go to state 913
    make_struct_dim     go to state 1545


State 1484

  466 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 466 (expr)


State 1485

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  467     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1546


State 1486

  338 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 338 (expr_block)


State 1487

  505 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 505 (expr_mtag)


State 1488

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  861 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 728
    "as"                 shift, and go to state 729
    "<<"                 shift, and go to state 738
    ">>"                 shift, and go to state 739
    "++"                 shift, and go to state 740
    "--"                 shift, and go to state 741
    "<="                 shift, and go to state 742
    ">="                 shift, and go to state 745
    "=="                 shift, and go to state 746
    "!="                 shift, and go to state 747
    "->"                 shift, and go to state 748
    "??"                 shift, and go to state 750
    "?."                 shift, and go to state 751
    "?["                 shift, and go to state 752
    "<|"                 shift, and go to state 753
    "|>"                 shift, and go to state 754
    "<<<"                shift, and go to state 756
    ">>>"                shift, and go to state 757
    "&&"                 shift, and go to state 760
    "||"                 shift, and go to state 761
    "^^"                 shift, and go to state 762
    ".."                 shift, and go to state 766
    "end of expression"  shift, and go to state 1547
    '?'                  shift, and go to state 768
    '|'                  shift, and go to state 769
    '^'                  shift, and go to state 770
    '&'                  shift, and go to state 771
    '<'                  shift, and go to state 772
    '>'                  shift, and go to state 773
    '-'                  shift, and go to state 774
    '+'                  shift, and go to state 775
    '*'                  shift, and go to state 776
    '/'                  shift, and go to state 777
    '%'                  shift, and go to state 778
    '.'                  shift, and go to state 779
    '['                  shift, and go to state 780

    $default  reduce using rule 855 (array_comprehension_where)

    array_comprehension_where  go to state 1548


State 1489

  775 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1549
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1490

  774 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1550
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1491

  800 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 800 (make_struct_decl)


State 1492

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  776 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  777                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1551


State 1493

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  773 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 773 (make_struct_fields)


State 1494

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  772 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 772 (make_struct_fields)


State 1495

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  862 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 728
    "as"                 shift, and go to state 729
    "<<"                 shift, and go to state 738
    ">>"                 shift, and go to state 739
    "++"                 shift, and go to state 740
    "--"                 shift, and go to state 741
    "<="                 shift, and go to state 742
    ">="                 shift, and go to state 745
    "=="                 shift, and go to state 746
    "!="                 shift, and go to state 747
    "->"                 shift, and go to state 748
    "??"                 shift, and go to state 750
    "?."                 shift, and go to state 751
    "?["                 shift, and go to state 752
    "<|"                 shift, and go to state 753
    "|>"                 shift, and go to state 754
    "<<<"                shift, and go to state 756
    ">>>"                shift, and go to state 757
    "&&"                 shift, and go to state 760
    "||"                 shift, and go to state 761
    "^^"                 shift, and go to state 762
    ".."                 shift, and go to state 766
    "end of expression"  shift, and go to state 1547
    '?'                  shift, and go to state 768
    '|'                  shift, and go to state 769
    '^'                  shift, and go to state 770
    '&'                  shift, and go to state 771
    '<'                  shift, and go to state 772
    '>'                  shift, and go to state 773
    '-'                  shift, and go to state 774
    '+'                  shift, and go to state 775
    '*'                  shift, and go to state 776
    '/'                  shift, and go to state 777
    '%'                  shift, and go to state 778
    '.'                  shift, and go to state 779
    '['                  shift, and go to state 780

    $default  reduce using rule 855 (array_comprehension_where)

    array_comprehension_where  go to state 1552


State 1496

  802 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 802 (make_struct_decl)


State 1497

  864 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1547

    $default  reduce using rule 855 (array_comprehension_where)

    array_comprehension_where  go to state 1553


State 1498

  255 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 255 (expression_keyword)


State 1499

  250 optional_expr_list_in_braces: '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    $default  reduce using rule 247 (optional_expr_list)

    string_builder          go to state 503
    expr_reader             go to state 504
    optional_expr_list      go to state 1554
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 820
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1500

  258 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces .

    $default  reduce using rule 258 (expression_keyword)


State 1501

  863 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1547

    $default  reduce using rule 855 (array_comprehension_where)

    array_comprehension_where  go to state 1555


State 1502

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  859 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 728
    "as"                 shift, and go to state 729
    "<<"                 shift, and go to state 738
    ">>"                 shift, and go to state 739
    "++"                 shift, and go to state 740
    "--"                 shift, and go to state 741
    "<="                 shift, and go to state 742
    ">="                 shift, and go to state 745
    "=="                 shift, and go to state 746
    "!="                 shift, and go to state 747
    "->"                 shift, and go to state 748
    "??"                 shift, and go to state 750
    "?."                 shift, and go to state 751
    "?["                 shift, and go to state 752
    "<|"                 shift, and go to state 753
    "|>"                 shift, and go to state 754
    "<<<"                shift, and go to state 756
    ">>>"                shift, and go to state 757
    "&&"                 shift, and go to state 760
    "||"                 shift, and go to state 761
    "^^"                 shift, and go to state 762
    ".."                 shift, and go to state 766
    "end of expression"  shift, and go to state 1547
    '?'                  shift, and go to state 768
    '|'                  shift, and go to state 769
    '^'                  shift, and go to state 770
    '&'                  shift, and go to state 771
    '<'                  shift, and go to state 772
    '>'                  shift, and go to state 773
    '-'                  shift, and go to state 774
    '+'                  shift, and go to state 775
    '*'                  shift, and go to state 776
    '/'                  shift, and go to state 777
    '%'                  shift, and go to state 778
    '.'                  shift, and go to state 779
    '['                  shift, and go to state 780

    $default  reduce using rule 855 (array_comprehension_where)

    array_comprehension_where  go to state 1556


State 1503

  860 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1557
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1504

  398 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 . func_addr_name

    "$i"    shift, and go to state 943
    "name"  shift, and go to state 58

    name_in_namespace  go to state 946
    func_addr_name     go to state 1558


State 1505

  401 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' . $@25 func_addr_name

    $default  reduce using rule 400 ($@25)

    $@25  go to state 1559


State 1506

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1507

  279 expression_return_no_pipe: "return" .
  280                          | "return" . expr_list
  281                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "<-"                              shift, and go to state 1560
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    $default  reduce using rule 279 (expression_return_no_pipe)

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 638
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1508

  285 expression_yield_no_pipe: "yield" . expr
  286                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "<-"                              shift, and go to state 1561
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1562
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1509

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 66 (expression_else_one_liner)


State 1510

   70 expression_if_one_liner: expression_break .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1511

   71 expression_if_one_liner: expression_continue .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1512

   68 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1513

   69 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1514

   67 expression_if_one_liner: expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 67 (expression_if_one_liner)


State 1515

  341 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 1563


State 1516

  390 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1564


State 1517

  300 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 308
    "array"      shift, and go to state 309
    "table"      shift, and go to state 310
    "typedecl"   shift, and go to state 311
    "iterator"   shift, and go to state 312
    "smart_ptr"  shift, and go to state 313
    "bool"       shift, and go to state 314
    "void"       shift, and go to state 315
    "string"     shift, and go to state 316
    "auto"       shift, and go to state 317
    "int"        shift, and go to state 318
    "int2"       shift, and go to state 319
    "int3"       shift, and go to state 320
    "int4"       shift, and go to state 321
    "uint"       shift, and go to state 322
    "bitfield"   shift, and go to state 323
    "uint2"      shift, and go to state 324
    "uint3"      shift, and go to state 325
    "uint4"      shift, and go to state 326
    "float"      shift, and go to state 327
    "float2"     shift, and go to state 328
    "float3"     shift, and go to state 329
    "float4"     shift, and go to state 330
    "range"      shift, and go to state 331
    "urange"     shift, and go to state 332
    "range64"    shift, and go to state 333
    "urange64"   shift, and go to state 334
    "block"      shift, and go to state 335
    "int64"      shift, and go to state 336
    "uint64"     shift, and go to state 337
    "double"     shift, and go to state 338
    "function"   shift, and go to state 339
    "lambda"     shift, and go to state 340
    "int8"       shift, and go to state 341
    "uint8"      shift, and go to state 342
    "int16"      shift, and go to state 343
    "uint16"     shift, and go to state 344
    "tuple"      shift, and go to state 345
    "variant"    shift, and go to state 346
    "$t"         shift, and go to state 347
    "name"       shift, and go to state 58
    '$'          shift, and go to state 348

    name_in_namespace            go to state 349
    basic_type_declaration       go to state 350
    structure_type_declaration   go to state 351
    auto_type_declaration        go to state 352
    bitfield_type_declaration    go to state 353
    type_declaration_no_options  go to state 1565


State 1518

  302 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 569
    ":="  shift, and go to state 570
    '='   shift, and go to state 571

    copy_or_move_or_clone  go to state 1566


State 1519

  301 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "<-"        shift, and go to state 569
    "??"        shift, and go to state 408
    ":="        shift, and go to state 570
    '='         shift, and go to state 571
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    copy_or_move_or_clone  go to state 1567
    dim_list               go to state 414


State 1520

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1568
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1521

  325 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1569
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1522

  324 block_or_simple_block: "=>" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    ".."  error (nonassociative)

    $default  reduce using rule 324 (block_or_simple_block)


State 1523

  472 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' . $@29

    $default  reduce using rule 471 ($@29)

    $@29  go to state 1570


State 1524

  478 expr: expr "as" "type" '<' $@30 type_declaration '>' . $@31

    $default  reduce using rule 477 ($@31)

    $@31  go to state 1571


State 1525

  483 expr: expr '?' "as" "type" '<' $@32 type_declaration . '>' $@33
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 415
    '>'  shift, and go to state 1572


State 1526

  511 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 511 (expr_mtag)


State 1527

  509 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 509 (expr_mtag)


State 1528

  508 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 508 (expr_mtag)


State 1529

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 179
    "bool"      shift, and go to state 180
    "string"    shift, and go to state 181
    "int"       shift, and go to state 182
    "int2"      shift, and go to state 183
    "int3"      shift, and go to state 184
    "int4"      shift, and go to state 185
    "uint"      shift, and go to state 186
    "uint2"     shift, and go to state 187
    "uint3"     shift, and go to state 188
    "uint4"     shift, and go to state 189
    "float"     shift, and go to state 190
    "float2"    shift, and go to state 191
    "float3"    shift, and go to state 192
    "float4"    shift, and go to state 193
    "range"     shift, and go to state 194
    "urange"    shift, and go to state 195
    "range64"   shift, and go to state 196
    "urange64"  shift, and go to state 197
    "int64"     shift, and go to state 198
    "uint64"    shift, and go to state 199
    "double"    shift, and go to state 200
    "int8"      shift, and go to state 201
    "uint8"     shift, and go to state 202
    "int16"     shift, and go to state 203
    "uint16"    shift, and go to state 204
    "++"        shift, and go to state 205
    "--"        shift, and go to state 206
    "name"      shift, and go to state 207

    function_name                go to state 208
    function_declaration_header  go to state 1573


State 1530

  534 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@36 function_declaration_header expression_block

    $default  reduce using rule 533 ($@36)

    $@36  go to state 1574


State 1531

  527 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 527 (structure_variable_declaration)


State 1532

  694 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 694 (type_declaration_no_options)


State 1533

  805 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 907
    "name"  shift, and go to state 1281

    make_struct_fields  go to state 913
    make_struct_dim     go to state 1575


State 1534

  808 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 907
    "name"  shift, and go to state 1281

    make_struct_fields  go to state 913
    make_struct_dim     go to state 1576


State 1535

  320 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' . expr ')'

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1577
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1536

  319 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 319 (expr_type_info)


State 1537

  831 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1096

    $default  reduce using rule 795 (use_initializer)

    use_initializer  go to state 1578


State 1538

  834 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1096

    $default  reduce using rule 795 (use_initializer)

    use_initializer  go to state 1579


State 1539

  837 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 907
    "name"  shift, and go to state 1281

    make_struct_fields  go to state 913
    make_struct_dim     go to state 1580


State 1540

  322 expr_list: expr_list . ',' expr
  841 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 940

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 1581


State 1541

  849 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  854 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 935

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 1582


State 1542

  853 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 853 (make_table_decl)


State 1543

  322 expr_list: expr_list . ',' expr
  845 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 940

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 1583


State 1544

  823 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 907
    "name"  shift, and go to state 1281

    make_struct_fields  go to state 913
    make_struct_dim     go to state 1584


State 1545

  780 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  811 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1160
    ')'                  shift, and go to state 1585


State 1546

  467 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 467 (expr)


State 1547

  856 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1586


State 1548

  861 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1587


State 1549

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  775 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 775 (make_struct_fields)


State 1550

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  774 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 774 (make_struct_fields)


State 1551

  776 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  777                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 835
    ":="  shift, and go to state 1588
    '='   shift, and go to state 837

    copy_or_move  go to state 1589


State 1552

  862 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1590


State 1553

  864 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1591


State 1554

  250 optional_expr_list_in_braces: '(' optional_expr_list . ')'

    ')'  shift, and go to state 1592


State 1555

  863 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1593


State 1556

  859 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1594


State 1557

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  860 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 728
    "as"                 shift, and go to state 729
    "<<"                 shift, and go to state 738
    ">>"                 shift, and go to state 739
    "++"                 shift, and go to state 740
    "--"                 shift, and go to state 741
    "<="                 shift, and go to state 742
    ">="                 shift, and go to state 745
    "=="                 shift, and go to state 746
    "!="                 shift, and go to state 747
    "->"                 shift, and go to state 748
    "??"                 shift, and go to state 750
    "?."                 shift, and go to state 751
    "?["                 shift, and go to state 752
    "<|"                 shift, and go to state 753
    "|>"                 shift, and go to state 754
    "<<<"                shift, and go to state 756
    ">>>"                shift, and go to state 757
    "&&"                 shift, and go to state 760
    "||"                 shift, and go to state 761
    "^^"                 shift, and go to state 762
    ".."                 shift, and go to state 766
    "end of expression"  shift, and go to state 1547
    '?'                  shift, and go to state 768
    '|'                  shift, and go to state 769
    '^'                  shift, and go to state 770
    '&'                  shift, and go to state 771
    '<'                  shift, and go to state 772
    '>'                  shift, and go to state 773
    '-'                  shift, and go to state 774
    '+'                  shift, and go to state 775
    '*'                  shift, and go to state 776
    '/'                  shift, and go to state 777
    '%'                  shift, and go to state 778
    '.'                  shift, and go to state 779
    '['                  shift, and go to state 780

    $default  reduce using rule 855 (array_comprehension_where)

    array_comprehension_where  go to state 1595


State 1558

  398 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name .

    $default  reduce using rule 398 (func_addr_expr)


State 1559

  401 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 . func_addr_name

    "$i"    shift, and go to state 943
    "name"  shift, and go to state 58

    name_in_namespace  go to state 946
    func_addr_name     go to state 1596


State 1560

  281 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    expr_list               go to state 855
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 707
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1561

  286 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1597
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1562

  285 expression_yield_no_pipe: "yield" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 285 (expression_yield_no_pipe)


State 1563

  341 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 341 (expr_full_block_assumed_piped)


State 1564

  390 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 390 (expr_named_call)


State 1565

  300 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 404
    "implicit"  shift, and go to state 405
    "explicit"  shift, and go to state 406
    "=="        shift, and go to state 407
    "<-"        shift, and go to state 569
    "??"        shift, and go to state 408
    ":="        shift, and go to state 570
    '='         shift, and go to state 571
    '?'         shift, and go to state 409
    '&'         shift, and go to state 410
    '-'         shift, and go to state 411
    '['         shift, and go to state 412
    '#'         shift, and go to state 413

    copy_or_move_or_clone  go to state 1598
    dim_list               go to state 414


State 1566

  302 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1599
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1567

  301 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1600
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1568

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 728
    "as"                 shift, and go to state 729
    "<<"                 shift, and go to state 738
    ">>"                 shift, and go to state 739
    "++"                 shift, and go to state 740
    "--"                 shift, and go to state 741
    "<="                 shift, and go to state 742
    ">="                 shift, and go to state 745
    "=="                 shift, and go to state 746
    "!="                 shift, and go to state 747
    "->"                 shift, and go to state 748
    "??"                 shift, and go to state 750
    "?."                 shift, and go to state 751
    "?["                 shift, and go to state 752
    "<|"                 shift, and go to state 753
    "|>"                 shift, and go to state 754
    "<<<"                shift, and go to state 756
    ">>>"                shift, and go to state 757
    "&&"                 shift, and go to state 760
    "||"                 shift, and go to state 761
    "^^"                 shift, and go to state 762
    ".."                 shift, and go to state 766
    "end of expression"  shift, and go to state 1601
    '?'                  shift, and go to state 768
    '|'                  shift, and go to state 769
    '^'                  shift, and go to state 770
    '&'                  shift, and go to state 771
    '<'                  shift, and go to state 772
    '>'                  shift, and go to state 773
    '-'                  shift, and go to state 774
    '+'                  shift, and go to state 775
    '*'                  shift, and go to state 776
    '/'                  shift, and go to state 777
    '%'                  shift, and go to state 778
    '.'                  shift, and go to state 779
    '['                  shift, and go to state 780


State 1569

  325 block_or_simple_block: "=>" "<-" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 325 (block_or_simple_block)


State 1570

  472 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29 .

    $default  reduce using rule 472 (expr)


State 1571

  478 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31 .

    $default  reduce using rule 478 (expr)


State 1572

  483 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 482 ($@33)

    $@33  go to state 1602


State 1573

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1603


State 1574

  534 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 . function_declaration_header expression_block

    "operator"  shift, and go to state 179
    "bool"      shift, and go to state 180
    "string"    shift, and go to state 181
    "int"       shift, and go to state 182
    "int2"      shift, and go to state 183
    "int3"      shift, and go to state 184
    "int4"      shift, and go to state 185
    "uint"      shift, and go to state 186
    "uint2"     shift, and go to state 187
    "uint3"     shift, and go to state 188
    "uint4"     shift, and go to state 189
    "float"     shift, and go to state 190
    "float2"    shift, and go to state 191
    "float3"    shift, and go to state 192
    "float4"    shift, and go to state 193
    "range"     shift, and go to state 194
    "urange"    shift, and go to state 195
    "range64"   shift, and go to state 196
    "urange64"  shift, and go to state 197
    "int64"     shift, and go to state 198
    "uint64"    shift, and go to state 199
    "double"    shift, and go to state 200
    "int8"      shift, and go to state 201
    "uint8"     shift, and go to state 202
    "int16"     shift, and go to state 203
    "uint16"    shift, and go to state 204
    "++"        shift, and go to state 205
    "--"        shift, and go to state 206
    "name"      shift, and go to state 207

    function_name                go to state 208
    function_declaration_header  go to state 1604


State 1575

  780 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  805 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1160
    ')'                  shift, and go to state 1605


State 1576

  780 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  808 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1160
    ')'                  shift, and go to state 1606


State 1577

  320 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr . ')'
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780
    ')'    shift, and go to state 1607


State 1578

  831 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 907
    "name"  shift, and go to state 1281

    make_struct_fields  go to state 913
    make_struct_dim     go to state 1608


State 1579

  834 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 907
    "name"  shift, and go to state 1281

    make_struct_fields  go to state 913
    make_struct_dim     go to state 1609


State 1580

  780 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  837 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1160
    ')'                  shift, and go to state 1610


State 1581

  841 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1611


State 1582

  854 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1612


State 1583

  845 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1613


State 1584

  780 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  823 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1160
    ')'                  shift, and go to state 1614


State 1585

  811 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')' .

    $default  reduce using rule 811 (make_struct_decl)


State 1586

  856 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1615
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1587

  861 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1616


State 1588

  777 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1617
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1589

  776 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1618
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1590

  862 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1619


State 1591

  864 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1620


State 1592

  250 optional_expr_list_in_braces: '(' optional_expr_list ')' .

    $default  reduce using rule 250 (optional_expr_list_in_braces)


State 1593

  863 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 863 (array_comprehension)


State 1594

  859 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 859 (array_comprehension)


State 1595

  860 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1621


State 1596

  401 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name .

    $default  reduce using rule 401 (func_addr_expr)


State 1597

  286 expression_yield_no_pipe: "yield" "<-" expr .
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 286 (expression_yield_no_pipe)


State 1598

  300 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 429
    "class"                           shift, and go to state 430
    "true"                            shift, and go to state 435
    "false"                           shift, and go to state 436
    "new"                             shift, and go to state 437
    "typeinfo"                        shift, and go to state 438
    "type"                            shift, and go to state 439
    "array"                           shift, and go to state 440
    "null"                            shift, and go to state 442
    "table"                           shift, and go to state 445
    "deref"                           shift, and go to state 447
    "cast"                            shift, and go to state 450
    "upcast"                          shift, and go to state 451
    "addr"                            shift, and go to state 452
    "reinterpret"                     shift, and go to state 455
    "unsafe"                          shift, and go to state 562
    "fixed_array"                     shift, and go to state 459
    "default"                         shift, and go to state 460
    "bool"                            shift, and go to state 314
    "void"                            shift, and go to state 315
    "string"                          shift, and go to state 316
    "int"                             shift, and go to state 318
    "int2"                            shift, and go to state 319
    "int3"                            shift, and go to state 320
    "int4"                            shift, and go to state 321
    "uint"                            shift, and go to state 322
    "bitfield"                        shift, and go to state 461
    "uint2"                           shift, and go to state 324
    "uint3"                           shift, and go to state 325
    "uint4"                           shift, and go to state 326
    "float"                           shift, and go to state 327
    "float2"                          shift, and go to state 328
    "float3"                          shift, and go to state 329
    "float4"                          shift, and go to state 330
    "range"                           shift, and go to state 331
    "urange"                          shift, and go to state 332
    "range64"                         shift, and go to state 333
    "urange64"                        shift, and go to state 334
    "int64"                           shift, and go to state 336
    "uint64"                          shift, and go to state 337
    "double"                          shift, and go to state 338
    "int8"                            shift, and go to state 341
    "uint8"                           shift, and go to state 342
    "int16"                           shift, and go to state 343
    "uint16"                          shift, and go to state 344
    "tuple"                           shift, and go to state 462
    "variant"                         shift, and go to state 463
    "generator"                       shift, and go to state 464
    "++"                              shift, and go to state 466
    "--"                              shift, and go to state 467
    "$$"                              shift, and go to state 471
    "$i"                              shift, and go to state 472
    "$v"                              shift, and go to state 473
    "$b"                              shift, and go to state 474
    "$a"                              shift, and go to state 475
    "$c"                              shift, and go to state 476
    "..."                             shift, and go to state 477
    "[["                              shift, and go to state 478
    "[{"                              shift, and go to state 479
    "{{"                              shift, and go to state 480
    "integer constant"                shift, and go to state 481
    "long integer constant"           shift, and go to state 482
    "unsigned integer constant"       shift, and go to state 483
    "unsigned long integer constant"  shift, and go to state 484
    "unsigned int8 constant"          shift, and go to state 485
    "floating point constant"         shift, and go to state 486
    "double constant"                 shift, and go to state 487
    "name"                            shift, and go to state 58
    "keyword"                         shift, and go to state 563
    "type function"                   shift, and go to state 489
    "start of the string"             shift, and go to state 490
    "begin of code block"             shift, and go to state 491
    '-'                               shift, and go to state 494
    '+'                               shift, and go to state 495
    '*'                               shift, and go to state 496
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 497
    '!'                               shift, and go to state 498
    '['                               shift, and go to state 499
    '('                               shift, and go to state 500
    '$'                               shift, and go to state 501
    '@'                               shift, and go to state 502

    string_builder          go to state 503
    expr_reader             go to state 504
    expression_keyword      go to state 564
    name_in_namespace       go to state 520
    expr_new                go to state 522
    expr_cast               go to state 532
    expr_type_decl          go to state 533
    expr_type_info          go to state 534
    block_or_lambda         go to state 535
    expr_full_block         go to state 536
    expr_numeric_const      go to state 537
    expr_named_call         go to state 540
    expr_method_call        go to state 541
    func_addr_expr          go to state 542
    expr_field              go to state 543
    expr_call               go to state 544
    expr                    go to state 1622
    expr_mtag               go to state 546
    basic_type_declaration  go to state 547
    make_decl               go to state 548
    make_struct_decl        go to state 549
    make_tuple_call         go to state 550
    make_dim_decl           go to state 551
    make_table_decl         go to state 552
    array_comprehension     go to state 553


State 1599

  302 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . "end of expression"
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 728
    "as"                 shift, and go to state 729
    "<<"                 shift, and go to state 738
    ">>"                 shift, and go to state 739
    "++"                 shift, and go to state 740
    "--"                 shift, and go to state 741
    "<="                 shift, and go to state 742
    ">="                 shift, and go to state 745
    "=="                 shift, and go to state 746
    "!="                 shift, and go to state 747
    "->"                 shift, and go to state 748
    "??"                 shift, and go to state 750
    "?."                 shift, and go to state 751
    "?["                 shift, and go to state 752
    "<|"                 shift, and go to state 753
    "|>"                 shift, and go to state 754
    "<<<"                shift, and go to state 756
    ">>>"                shift, and go to state 757
    "&&"                 shift, and go to state 760
    "||"                 shift, and go to state 761
    "^^"                 shift, and go to state 762
    ".."                 shift, and go to state 766
    "end of expression"  shift, and go to state 1623
    '?'                  shift, and go to state 768
    '|'                  shift, and go to state 769
    '^'                  shift, and go to state 770
    '&'                  shift, and go to state 771
    '<'                  shift, and go to state 772
    '>'                  shift, and go to state 773
    '-'                  shift, and go to state 774
    '+'                  shift, and go to state 775
    '*'                  shift, and go to state 776
    '/'                  shift, and go to state 777
    '%'                  shift, and go to state 778
    '.'                  shift, and go to state 779
    '['                  shift, and go to state 780


State 1600

  301 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 728
    "as"                 shift, and go to state 729
    "<<"                 shift, and go to state 738
    ">>"                 shift, and go to state 739
    "++"                 shift, and go to state 740
    "--"                 shift, and go to state 741
    "<="                 shift, and go to state 742
    ">="                 shift, and go to state 745
    "=="                 shift, and go to state 746
    "!="                 shift, and go to state 747
    "->"                 shift, and go to state 748
    "??"                 shift, and go to state 750
    "?."                 shift, and go to state 751
    "?["                 shift, and go to state 752
    "<|"                 shift, and go to state 753
    "|>"                 shift, and go to state 754
    "<<<"                shift, and go to state 756
    ">>>"                shift, and go to state 757
    "&&"                 shift, and go to state 760
    "||"                 shift, and go to state 761
    "^^"                 shift, and go to state 762
    ".."                 shift, and go to state 766
    "end of expression"  shift, and go to state 1624
    '?'                  shift, and go to state 768
    '|'                  shift, and go to state 769
    '^'                  shift, and go to state 770
    '&'                  shift, and go to state 771
    '<'                  shift, and go to state 772
    '>'                  shift, and go to state 773
    '-'                  shift, and go to state 774
    '+'                  shift, and go to state 775
    '*'                  shift, and go to state 776
    '/'                  shift, and go to state 777
    '%'                  shift, and go to state 778
    '.'                  shift, and go to state 779
    '['                  shift, and go to state 780


State 1601

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 303 (tuple_expansion_variable_declaration)


State 1602

  483 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 483 (expr)


State 1603

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression" .

    $default  reduce using rule 532 (struct_variable_declaration_list)


State 1604

  534 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 1625


State 1605

  805 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 805 (make_struct_decl)


State 1606

  808 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 808 (make_struct_decl)


State 1607

  320 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')' .

    $default  reduce using rule 320 (expr_type_info)


State 1608

  780 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  831 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1160
    ')'                  shift, and go to state 1626


State 1609

  780 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  834 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1160
    ')'                  shift, and go to state 1627


State 1610

  837 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_struct_dim ')' .

    $default  reduce using rule 837 (make_dim_decl)


State 1611

  841 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')' .

    $default  reduce using rule 841 (make_dim_decl)


State 1612

  854 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 854 (make_table_decl)


State 1613

  845 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')' .

    $default  reduce using rule 845 (make_dim_decl)


State 1614

  823 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 823 (make_tuple_call)


State 1615

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  856 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 856 (array_comprehension_where)


State 1616

  861 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 861 (array_comprehension)


State 1617

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  777 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 777 (make_struct_fields)


State 1618

  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  776 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 728
    "as"   shift, and go to state 729
    "<<"   shift, and go to state 738
    ">>"   shift, and go to state 739
    "++"   shift, and go to state 740
    "--"   shift, and go to state 741
    "<="   shift, and go to state 742
    ">="   shift, and go to state 745
    "=="   shift, and go to state 746
    "!="   shift, and go to state 747
    "->"   shift, and go to state 748
    "??"   shift, and go to state 750
    "?."   shift, and go to state 751
    "?["   shift, and go to state 752
    "<|"   shift, and go to state 753
    "|>"   shift, and go to state 754
    "<<<"  shift, and go to state 756
    ">>>"  shift, and go to state 757
    "&&"   shift, and go to state 760
    "||"   shift, and go to state 761
    "^^"   shift, and go to state 762
    ".."   shift, and go to state 766
    '?'    shift, and go to state 768
    '|'    shift, and go to state 769
    '^'    shift, and go to state 770
    '&'    shift, and go to state 771
    '<'    shift, and go to state 772
    '>'    shift, and go to state 773
    '-'    shift, and go to state 774
    '+'    shift, and go to state 775
    '*'    shift, and go to state 776
    '/'    shift, and go to state 777
    '%'    shift, and go to state 778
    '.'    shift, and go to state 779
    '['    shift, and go to state 780

    $default  reduce using rule 776 (make_struct_fields)


State 1619

  862 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 862 (array_comprehension)


State 1620

  864 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 864 (array_comprehension)


State 1621

  860 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 860 (array_comprehension)


State 1622

  300 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  391 expr_method_call: expr . "->" "name" '(' ')'
  392                 | expr . "->" "name" '(' expr_list ')'
  402 expr_field: expr . '.' "name"
  403           | expr . '.' '.' "name"
  404           | expr . '.' "name" '(' ')'
  405           | expr . '.' "name" '(' expr_list ')'
  408           | expr . '.' $@26 error $@27
  428 expr: expr . "<<" expr
  429     | expr . ">>" expr
  430     | expr . "<<<" expr
  431     | expr . ">>>" expr
  432     | expr . '+' expr
  433     | expr . '-' expr
  434     | expr . '*' expr
  435     | expr . '/' expr
  436     | expr . '%' expr
  437     | expr . '<' expr
  438     | expr . '>' expr
  439     | expr . "==" expr
  440     | expr . "!=" expr
  441     | expr . "<=" expr
  442     | expr . ">=" expr
  443     | expr . '&' expr
  444     | expr . '|' expr
  445     | expr . '^' expr
  446     | expr . "&&" expr
  447     | expr . "||" expr
  448     | expr . "^^" expr
  449     | expr . ".." expr
  452     | expr . "++"
  453     | expr . "--"
  455     | expr . '[' expr ']'
  456     | expr . '.' '[' expr ']'
  457     | expr . "?[" expr ']'
  458     | expr . '.' "?[" expr ']'
  459     | expr . "?." "name"
  460     | expr . '.' "?." "name"
  468     | expr . "??" expr
  469     | expr . '?' expr ':' expr
  472     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  473     | expr . "is" basic_type_declaration
  474     | expr . "is" "name"
  475     | expr . "as" "name"
  478     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  479     | expr . "as" basic_type_declaration
  480     | expr . '?' "as" "name"
  483     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  484     | expr . '?' "as" basic_type_declaration
  492     | expr . "<|" expr
  493     | expr . "|>" expr
  494     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 728
    "as"                 shift, and go to state 729
    "<<"                 shift, and go to state 738
    ">>"                 shift, and go to state 739
    "++"                 shift, and go to state 740
    "--"                 shift, and go to state 741
    "<="                 shift, and go to state 742
    ">="                 shift, and go to state 745
    "=="                 shift, and go to state 746
    "!="                 shift, and go to state 747
    "->"                 shift, and go to state 748
    "??"                 shift, and go to state 750
    "?."                 shift, and go to state 751
    "?["                 shift, and go to state 752
    "<|"                 shift, and go to state 753
    "|>"                 shift, and go to state 754
    "<<<"                shift, and go to state 756
    ">>>"                shift, and go to state 757
    "&&"                 shift, and go to state 760
    "||"                 shift, and go to state 761
    "^^"                 shift, and go to state 762
    ".."                 shift, and go to state 766
    "end of expression"  shift, and go to state 1628
    '?'                  shift, and go to state 768
    '|'                  shift, and go to state 769
    '^'                  shift, and go to state 770
    '&'                  shift, and go to state 771
    '<'                  shift, and go to state 772
    '>'                  shift, and go to state 773
    '-'                  shift, and go to state 774
    '+'                  shift, and go to state 775
    '*'                  shift, and go to state 776
    '/'                  shift, and go to state 777
    '%'                  shift, and go to state 778
    '.'                  shift, and go to state 779
    '['                  shift, and go to state 780


State 1623

  302 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 302 (tuple_expansion_variable_declaration)


State 1624

  301 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 301 (tuple_expansion_variable_declaration)


State 1625

  534 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block .

    $default  reduce using rule 534 (struct_variable_declaration_list)


State 1626

  831 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 831 (make_dim_decl)


State 1627

  834 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 834 (make_dim_decl)


State 1628

  300 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 300 (tuple_expansion_variable_declaration)
